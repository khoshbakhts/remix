{
	"id": "5018f11de854816d5cbccf350178c870",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"SignSmartContract/GameToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/**\r\n * @title GameToken\r\n * @dev Implementation of the Signs game token with role-based minting and burning\r\n */\r\ncontract GameToken is ERC20, Pausable, AccessControl, ReentrancyGuard {\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant GAME_MANAGER_ROLE = keccak256(\"GAME_MANAGER_ROLE\");\r\n    \r\n    // Events\r\n    event RewardPaid(address indexed to, uint256 amount, string reason);\r\n    event TokensBurned(address indexed from, uint256 amount, string reason);\r\n    event TokensLocked(address indexed owner, uint256 amount);\r\n    event TokensUnlocked(address indexed owner, uint256 amount);\r\n    \r\n    // Staking and locking mechanism\r\n    mapping(address => uint256) private _lockedTokens;\r\n    mapping(address => uint256) private _lockTimestamp;\r\n    \r\n    // Constants\r\n    uint256 public constant LOCK_DURATION = 24 hours;\r\n    uint256 public constant MAX_SUPPLY = 1000000000 * 10**18; // 1 billion tokens\r\n    \r\n    constructor() ERC20(\"Signs Game Token\", \"SIGN\") {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n    }\r\n    \r\n    // Modifiers\r\n    modifier onlyGameManager() {\r\n        require(hasRole(GAME_MANAGER_ROLE, msg.sender), \"Caller is not a game manager\");\r\n        _;\r\n    }\r\n    \r\n    modifier onlyMinter() {\r\n        require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\");\r\n        _;\r\n    }\r\n    \r\n    // Core token functions\r\n    \r\n    /**\r\n     * @dev Mint new tokens to an address\r\n     * @param to Address to mint tokens to\r\n     * @param amount Amount of tokens to mint\r\n     */\r\n    function mint(address to, uint256 amount) \r\n        external \r\n        onlyMinter \r\n        whenNotPaused \r\n    {\r\n        require(to != address(0), \"Cannot mint to zero address\");\r\n        require(totalSupply() + amount <= MAX_SUPPLY, \"Would exceed max supply\");\r\n        _mint(to, amount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Burn tokens from an address\r\n     * @param from Address to burn tokens from\r\n     * @param amount Amount of tokens to burn\r\n     */\r\n    function burn(address from, uint256 amount) \r\n        external \r\n        onlyGameManager \r\n        whenNotPaused \r\n    {\r\n        require(from != address(0), \"Cannot burn from zero address\");\r\n        require(balanceOf(from) >= amount, \"Insufficient balance to burn\");\r\n        _burn(from, amount);\r\n        emit TokensBurned(from, amount, \"Game mechanics burn\");\r\n    }\r\n    \r\n    /**\r\n     * @dev Pay rewards to players\r\n     * @param to Address to receive rewards\r\n     * @param amount Amount of tokens to reward\r\n     * @param reason Reason for the reward\r\n     */\r\n    function payReward(\r\n        address to, \r\n        uint256 amount, \r\n        string memory reason\r\n    ) \r\n        external \r\n        onlyGameManager \r\n        whenNotPaused \r\n        nonReentrant \r\n    {\r\n        require(to != address(0), \"Cannot reward zero address\");\r\n        require(totalSupply() + amount <= MAX_SUPPLY, \"Would exceed max supply\");\r\n        \r\n        _mint(to, amount);\r\n        emit RewardPaid(to, amount, reason);\r\n    }\r\n    \r\n    /**\r\n     * @dev Lock tokens for staking or other game mechanics\r\n     * @param amount Amount of tokens to lock\r\n     */\r\n    function lockTokens(uint256 amount) \r\n        external \r\n        whenNotPaused \r\n        nonReentrant \r\n    {\r\n        require(amount > 0, \"Cannot lock zero tokens\");\r\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance to lock\");\r\n        \r\n        _lockedTokens[msg.sender] += amount;\r\n        _lockTimestamp[msg.sender] = block.timestamp;\r\n        \r\n        emit TokensLocked(msg.sender, amount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Unlock previously locked tokens after lock duration\r\n     */\r\n    function unlockTokens() \r\n        external \r\n        whenNotPaused \r\n        nonReentrant \r\n    {\r\n        uint256 lockedAmount = _lockedTokens[msg.sender];\r\n        require(lockedAmount > 0, \"No tokens locked\");\r\n        require(\r\n            block.timestamp >= _lockTimestamp[msg.sender] + LOCK_DURATION,\r\n            \"Tokens still locked\"\r\n        );\r\n        \r\n        _lockedTokens[msg.sender] = 0;\r\n        emit TokensUnlocked(msg.sender, lockedAmount);\r\n    }\r\n    \r\n    // View functions\r\n    \r\n    /**\r\n     * @dev Get the amount of locked tokens for an address\r\n     * @param account Address to check\r\n     * @return Amount of locked tokens\r\n     */\r\n    function getLockedTokens(address account) \r\n        external \r\n        view \r\n        returns (uint256) \r\n    {\r\n        return _lockedTokens[account];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get the timestamp when tokens were locked\r\n     * @param account Address to check\r\n     * @return Timestamp of lock\r\n     */\r\n    function getLockTimestamp(address account) \r\n        external \r\n        view \r\n        returns (uint256) \r\n    {\r\n        return _lockTimestamp[account];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get available (unlocked) balance\r\n     * @param account Address to check\r\n     * @return Available balance\r\n     */\r\n    function getAvailableBalance(address account) \r\n        external \r\n        view \r\n        returns (uint256) \r\n    {\r\n        return balanceOf(account) - _lockedTokens[account];\r\n    }\r\n    \r\n    // Override transfer functions to check for locked tokens\r\n    function transfer(address to, uint256 amount) \r\n        public \r\n        virtual \r\n        override \r\n        whenNotPaused \r\n        returns (bool) \r\n    {\r\n        require(\r\n            balanceOf(msg.sender) - _lockedTokens[msg.sender] >= amount,\r\n            \"Transfer amount exceeds available balance\"\r\n        );\r\n        return super.transfer(to, amount);\r\n    }\r\n    \r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) \r\n        public \r\n        virtual \r\n        override \r\n        whenNotPaused \r\n        returns (bool) \r\n    {\r\n        require(\r\n            balanceOf(from) - _lockedTokens[from] >= amount,\r\n            \"Transfer amount exceeds available balance\"\r\n        );\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n    \r\n    // Admin functions\r\n    \r\n    function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _pause();\r\n    }\r\n    \r\n    function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _unpause();\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 533,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 634,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 711,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 717,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 719,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 721,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 723,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SignSmartContract/GameToken.sol": {
				"GameToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GAME_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LOCK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getAvailableBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getLockTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getLockedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "lockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "payReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the Signs game token with role-based minting and burning",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(address,uint256)": {
								"details": "Burn tokens from an address",
								"params": {
									"amount": "Amount of tokens to burn",
									"from": "Address to burn tokens from"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getAvailableBalance(address)": {
								"details": "Get available (unlocked) balance",
								"params": {
									"account": "Address to check"
								},
								"returns": {
									"_0": "Available balance"
								}
							},
							"getLockTimestamp(address)": {
								"details": "Get the timestamp when tokens were locked",
								"params": {
									"account": "Address to check"
								},
								"returns": {
									"_0": "Timestamp of lock"
								}
							},
							"getLockedTokens(address)": {
								"details": "Get the amount of locked tokens for an address",
								"params": {
									"account": "Address to check"
								},
								"returns": {
									"_0": "Amount of locked tokens"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"lockTokens(uint256)": {
								"details": "Lock tokens for staking or other game mechanics",
								"params": {
									"amount": "Amount of tokens to lock"
								}
							},
							"mint(address,uint256)": {
								"details": "Mint new tokens to an address",
								"params": {
									"amount": "Amount of tokens to mint",
									"to": "Address to mint tokens to"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"payReward(address,uint256,string)": {
								"details": "Pay rewards to players",
								"params": {
									"amount": "Amount of tokens to reward",
									"reason": "Reason for the reward",
									"to": "Address to receive rewards"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"unlockTokens()": {
								"details": "Unlock previously locked tokens after lock duration"
							}
						},
						"title": "GameToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SignSmartContract/GameToken.sol\":416:6591  contract GameToken is ERC20, Pausable, AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"SignSmartContract/GameToken.sol\":1271:1380  constructor() ERC20(\"Signs Game Token\", \"SIGN\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x5369676e732047616d6520546f6b656e00000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5349474e00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x07\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"SignSmartContract/GameToken.sol\":1330:1372  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"SignSmartContract/GameToken.sol\":1341:1359  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"SignSmartContract/GameToken.sol\":1361:1371  msg.sender */\n  caller\n    /* \"SignSmartContract/GameToken.sol\":1330:1340  _grantRole */\n  shl(0x20, tag_14)\n    /* \"SignSmartContract/GameToken.sol\":1330:1372  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"SignSmartContract/GameToken.sol\":416:6591  contract GameToken is ERC20, Pausable, AccessControl, ReentrancyGuard {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_19\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_16:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_25:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_26:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_27:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_28:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_50:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_52\n  tag_27\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":714:798   */\ntag_51:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_29:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_30:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_31:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_32:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_57\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_31\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1429:1468   */\n  tag_58\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_31\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_33:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_34:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_35:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_62\n    /* \"#utility.yul\":1818:1852   */\n  tag_63\n    /* \"#utility.yul\":1827:1851   */\n  tag_64\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1818:1852   */\n  tag_34\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1800:1853   */\n  tag_33\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_36:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_37:\n    /* \"#utility.yul\":2056:2095   */\n  tag_67\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_35\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2117:2208   */\n  tag_68\n    /* \"#utility.yul\":2166:2207   */\n  tag_69\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_36\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_32\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_38:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_39:\n    /* \"#utility.yul\":2377:2409   */\n  tag_72\n  tag_38\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2418:2483   */\n  tag_73\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_37\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_40:\n    /* \"#utility.yul\":2555:2675   */\ntag_75:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_78\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_39\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_75)\ntag_77:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_41:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_81\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_29\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2906:2935   */\n  tag_82\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_30\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_83:\n    /* \"#utility.yul\":3133:3213   */\n  tag_84\n    /* \"#utility.yul\":3189:3211   */\n  tag_85\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_30\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_40\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_80:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_42:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_43:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_88\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_42\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_44:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_90\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_43\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_92\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_25\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_94\n  tag_26\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4038:4094   */\ntag_93:\n    /* \"#utility.yul\":4118:4156   */\n  tag_95\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4203:4270   */\n  tag_96\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_98\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_99:\n    /* \"#utility.yul\":5144:5211   */\n  tag_100\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_44\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_97)\n    /* \"#utility.yul\":4365:4983   */\ntag_98:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_101\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_29\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_102:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_102)\ntag_104:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_106\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_43\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_105:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_97:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"SignSmartContract/GameToken.sol\":416:6591  contract GameToken is ERC20, Pausable, AccessControl, ReentrancyGuard {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SignSmartContract/GameToken.sol\":416:6591  contract GameToken is ERC20, Pausable, AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6b2d95d4\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xda518829\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xda518829\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf968f493\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xff6fcdbd\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa217fddf\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x8456cb59\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x6b2d95d4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6c24a76f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x6e27d889\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x313ce567\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x485d3834\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3c26835b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x18160ddd\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":5948:6366  function transferFrom(... */\n    tag_7:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":1182:1238  uint256 public constant MAX_SUPPLY = 1000000000 * 10**18 */\n    tag_11:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"SignSmartContract/GameToken.sol\":5000:5160  function getLockTimestamp(address account) ... */\n    tag_13:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":6502:6588  function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_14:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"SignSmartContract/GameToken.sol\":1878:2176  function mint(address to, uint256 amount) ... */\n    tag_15:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"SignSmartContract/GameToken.sol\":1127:1175  uint256 public constant LOCK_DURATION = 24 hours */\n    tag_16:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_17:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":4683:4841  function getLockedTokens(address account) ... */\n    tag_18:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":5310:5493  function getAvailableBalance(address account) ... */\n    tag_19:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":3498:3923  function lockTokens(uint256 amount) ... */\n    tag_20:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":6408:6490  function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_22:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_23:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_24:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":2342:2712  function burn(address from, uint256 amount) ... */\n    tag_25:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_26:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":5568:5936  function transfer(address to, uint256 amount) ... */\n    tag_27:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":493:555  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_28:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_29:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      stop\n        /* \"SignSmartContract/GameToken.sol\":2916:3360  function payReward(... */\n    tag_30:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      tag_145\n      jump\t// in\n    tag_142:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_31:\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      tag_149\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SignSmartContract/GameToken.sol\":4018:4484  function unlockTokens() ... */\n    tag_32:\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      stop\n        /* \"SignSmartContract/GameToken.sol\":562:636  bytes32 public constant GAME_MANAGER_ROLE = keccak256(\"GAME_MANAGER_ROLE\") */\n    tag_33:\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_157\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_163\n      swap1\n      tag_162\n      jump\t// in\n    tag_163:\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_165\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_164)\n    tag_165:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_166:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_166\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":5948:6366  function transferFrom(... */\n    tag_63:\n        /* \"SignSmartContract/GameToken.sol\":6143:6147  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_174\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_175\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_174:\n        /* \"SignSmartContract/GameToken.sol\":6229:6235  amount */\n      dup2\n        /* \"SignSmartContract/GameToken.sol\":6206:6219  _lockedTokens */\n      0x08\n        /* \"SignSmartContract/GameToken.sol\":6206:6225  _lockedTokens[from] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":6220:6224  from */\n      dup7\n        /* \"SignSmartContract/GameToken.sol\":6206:6225  _lockedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SignSmartContract/GameToken.sol\":6188:6203  balanceOf(from) */\n      tag_177\n        /* \"SignSmartContract/GameToken.sol\":6198:6202  from */\n      dup7\n        /* \"SignSmartContract/GameToken.sol\":6188:6197  balanceOf */\n      tag_115\n        /* \"SignSmartContract/GameToken.sol\":6188:6203  balanceOf(from) */\n      jump\t// in\n    tag_177:\n        /* \"SignSmartContract/GameToken.sol\":6188:6225  balanceOf(from) - _lockedTokens[from] */\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"SignSmartContract/GameToken.sol\":6188:6235  balanceOf(from) - _lockedTokens[from] >= amount */\n      lt\n      iszero\n        /* \"SignSmartContract/GameToken.sol\":6166:6304  require(... */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"SignSmartContract/GameToken.sol\":6322:6358  super.transferFrom(from, to, amount) */\n      tag_183\n        /* \"SignSmartContract/GameToken.sol\":6341:6345  from */\n      dup5\n        /* \"SignSmartContract/GameToken.sol\":6347:6349  to */\n      dup5\n        /* \"SignSmartContract/GameToken.sol\":6351:6357  amount */\n      dup5\n        /* \"SignSmartContract/GameToken.sol\":6322:6340  super.transferFrom */\n      tag_184\n        /* \"SignSmartContract/GameToken.sol\":6322:6358  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_183:\n        /* \"SignSmartContract/GameToken.sol\":6315:6358  return super.transferFrom(from, to, amount) */\n      swap1\n      pop\n        /* \"SignSmartContract/GameToken.sol\":5948:6366  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_68\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_191\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_192\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_191:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":1182:1238  uint256 public constant MAX_SUPPLY = 1000000000 * 10**18 */\n    tag_80:\n        /* \"SignSmartContract/GameToken.sol\":1219:1238  1000000000 * 10**18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"SignSmartContract/GameToken.sol\":1182:1238  uint256 public constant MAX_SUPPLY = 1000000000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_198\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_197:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":5000:5160  function getLockTimestamp(address account) ... */\n    tag_88:\n        /* \"SignSmartContract/GameToken.sol\":5096:5103  uint256 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":5129:5143  _lockTimestamp */\n      0x09\n        /* \"SignSmartContract/GameToken.sol\":5129:5152  _lockTimestamp[account] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":5144:5151  account */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":5129:5152  _lockTimestamp[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SignSmartContract/GameToken.sol\":5122:5152  return _lockTimestamp[account] */\n      swap1\n      pop\n        /* \"SignSmartContract/GameToken.sol\":5000:5160  function getLockTimestamp(address account) ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":6502:6588  function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":6539:6557  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_201:\n        /* \"SignSmartContract/GameToken.sol\":6570:6580  _unpause() */\n      tag_203\n        /* \"SignSmartContract/GameToken.sol\":6570:6578  _unpause */\n      tag_204\n        /* \"SignSmartContract/GameToken.sol\":6570:6580  _unpause() */\n      jump\t// in\n    tag_203:\n        /* \"SignSmartContract/GameToken.sol\":6502:6588  function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":1878:2176  function mint(address to, uint256 amount) ... */\n    tag_94:\n        /* \"SignSmartContract/GameToken.sol\":1600:1632  hasRole(MINTER_ROLE, msg.sender) */\n      tag_206\n        /* \"SignSmartContract/GameToken.sol\":531:555  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"SignSmartContract/GameToken.sol\":1621:1631  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":1600:1607  hasRole */\n      tag_121\n        /* \"SignSmartContract/GameToken.sol\":1600:1632  hasRole(MINTER_ROLE, msg.sender) */\n      jump\t// in\n    tag_206:\n        /* \"SignSmartContract/GameToken.sol\":1592:1659  require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_211\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_175\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_211:\n        /* \"SignSmartContract/GameToken.sol\":2023:2024  0 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":2009:2025  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SignSmartContract/GameToken.sol\":2009:2011  to */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":2009:2025  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SignSmartContract/GameToken.sol\":2001:2057  require(to != address(0), \"Cannot mint to zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"SignSmartContract/GameToken.sol\":1219:1238  1000000000 * 10**18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"SignSmartContract/GameToken.sol\":2092:2098  amount */\n      dup2\n        /* \"SignSmartContract/GameToken.sol\":2076:2089  totalSupply() */\n      tag_216\n        /* \"SignSmartContract/GameToken.sol\":2076:2087  totalSupply */\n      tag_57\n        /* \"SignSmartContract/GameToken.sol\":2076:2089  totalSupply() */\n      jump\t// in\n    tag_216:\n        /* \"SignSmartContract/GameToken.sol\":2076:2098  totalSupply() + amount */\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"SignSmartContract/GameToken.sol\":2076:2112  totalSupply() + amount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"SignSmartContract/GameToken.sol\":2068:2140  require(totalSupply() + amount <= MAX_SUPPLY, \"Would exceed max supply\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"SignSmartContract/GameToken.sol\":2151:2168  _mint(to, amount) */\n      tag_222\n        /* \"SignSmartContract/GameToken.sol\":2157:2159  to */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":2161:2167  amount */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":2151:2156  _mint */\n      tag_223\n        /* \"SignSmartContract/GameToken.sol\":2151:2168  _mint(to, amount) */\n      jump\t// in\n    tag_222:\n        /* \"SignSmartContract/GameToken.sol\":1878:2176  function mint(address to, uint256 amount) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":1127:1175  uint256 public constant LOCK_DURATION = 24 hours */\n    tag_96:\n        /* \"SignSmartContract/GameToken.sol\":1167:1175  24 hours */\n      0x015180\n        /* \"SignSmartContract/GameToken.sol\":1127:1175  uint256 public constant LOCK_DURATION = 24 hours */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":4683:4841  function getLockedTokens(address account) ... */\n    tag_103:\n        /* \"SignSmartContract/GameToken.sol\":4778:4785  uint256 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":4811:4824  _lockedTokens */\n      0x08\n        /* \"SignSmartContract/GameToken.sol\":4811:4833  _lockedTokens[account] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":4825:4832  account */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":4811:4833  _lockedTokens[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SignSmartContract/GameToken.sol\":4804:4833  return _lockedTokens[account] */\n      swap1\n      pop\n        /* \"SignSmartContract/GameToken.sol\":4683:4841  function getLockedTokens(address account) ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":5310:5493  function getAvailableBalance(address account) ... */\n    tag_107:\n        /* \"SignSmartContract/GameToken.sol\":5409:5416  uint256 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":5463:5476  _lockedTokens */\n      0x08\n        /* \"SignSmartContract/GameToken.sol\":5463:5485  _lockedTokens[account] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":5477:5484  account */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":5463:5485  _lockedTokens[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SignSmartContract/GameToken.sol\":5442:5460  balanceOf(account) */\n      tag_227\n        /* \"SignSmartContract/GameToken.sol\":5452:5459  account */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":5442:5451  balanceOf */\n      tag_115\n        /* \"SignSmartContract/GameToken.sol\":5442:5460  balanceOf(account) */\n      jump\t// in\n    tag_227:\n        /* \"SignSmartContract/GameToken.sol\":5442:5485  balanceOf(account) - _lockedTokens[account] */\n      tag_228\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_228:\n        /* \"SignSmartContract/GameToken.sol\":5435:5485  return balanceOf(account) - _lockedTokens[account] */\n      swap1\n      pop\n        /* \"SignSmartContract/GameToken.sol\":5310:5493  function getAvailableBalance(address account) ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":3498:3923  function lockTokens(uint256 amount) ... */\n    tag_112:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_230\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_175\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_232\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_232:\n        /* \"SignSmartContract/GameToken.sol\":3634:3635  0 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":3625:3631  amount */\n      dup2\n        /* \"SignSmartContract/GameToken.sol\":3625:3635  amount > 0 */\n      gt\n        /* \"SignSmartContract/GameToken.sol\":3617:3663  require(amount > 0, \"Cannot lock zero tokens\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"SignSmartContract/GameToken.sol\":3707:3713  amount */\n      dup1\n        /* \"SignSmartContract/GameToken.sol\":3682:3703  balanceOf(msg.sender) */\n      tag_238\n        /* \"SignSmartContract/GameToken.sol\":3692:3702  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":3682:3691  balanceOf */\n      tag_115\n        /* \"SignSmartContract/GameToken.sol\":3682:3703  balanceOf(msg.sender) */\n      jump\t// in\n    tag_238:\n        /* \"SignSmartContract/GameToken.sol\":3682:3713  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"SignSmartContract/GameToken.sol\":3674:3746  require(balanceOf(msg.sender) >= amount, \"Insufficient balance to lock\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"SignSmartContract/GameToken.sol\":3796:3802  amount */\n      dup1\n        /* \"SignSmartContract/GameToken.sol\":3767:3780  _lockedTokens */\n      0x08\n        /* \"SignSmartContract/GameToken.sol\":3767:3792  _lockedTokens[msg.sender] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":3781:3791  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":3767:3792  _lockedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":3767:3802  _lockedTokens[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_242\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_242:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SignSmartContract/GameToken.sol\":3842:3857  block.timestamp */\n      timestamp\n        /* \"SignSmartContract/GameToken.sol\":3813:3827  _lockTimestamp */\n      0x09\n        /* \"SignSmartContract/GameToken.sol\":3813:3839  _lockTimestamp[msg.sender] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":3828:3838  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":3813:3839  _lockTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SignSmartContract/GameToken.sol\":3813:3857  _lockTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SignSmartContract/GameToken.sol\":3896:3906  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":3883:3915  TokensLocked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c\n        /* \"SignSmartContract/GameToken.sol\":3908:3914  amount */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":3883:3915  TokensLocked(msg.sender, amount) */\n      mload(0x40)\n      tag_243\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_244\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_245\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_244:\n        /* \"SignSmartContract/GameToken.sol\":3498:3923  function lockTokens(uint256 amount) ... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":6408:6490  function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":6443:6461  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_248\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_248:\n        /* \"SignSmartContract/GameToken.sol\":6474:6482  _pause() */\n      tag_250\n        /* \"SignSmartContract/GameToken.sol\":6474:6480  _pause */\n      tag_251\n        /* \"SignSmartContract/GameToken.sol\":6474:6482  _pause() */\n      jump\t// in\n    tag_250:\n        /* \"SignSmartContract/GameToken.sol\":6408:6490  function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_254\n      swap1\n      tag_162\n      jump\t// in\n    tag_254:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_255\n      swap1\n      tag_162\n      jump\t// in\n    tag_255:\n      dup1\n      iszero\n      tag_256\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_257\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_256)\n    tag_257:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_258:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_258\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":2342:2712  function burn(address from, uint256 amount) ... */\n    tag_128:\n        /* \"SignSmartContract/GameToken.sol\":1456:1494  hasRole(GAME_MANAGER_ROLE, msg.sender) */\n      tag_260\n        /* \"SignSmartContract/GameToken.sol\":606:636  keccak256(\"GAME_MANAGER_ROLE\") */\n      0xef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b1\n        /* \"SignSmartContract/GameToken.sol\":1483:1493  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":1456:1463  hasRole */\n      tag_121\n        /* \"SignSmartContract/GameToken.sol\":1456:1494  hasRole(GAME_MANAGER_ROLE, msg.sender) */\n      jump\t// in\n    tag_260:\n        /* \"SignSmartContract/GameToken.sol\":1448:1527  require(hasRole(GAME_MANAGER_ROLE, msg.sender), \"Caller is not a game manager\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_265\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_175\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_265:\n        /* \"SignSmartContract/GameToken.sol\":2496:2497  0 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":2480:2498  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SignSmartContract/GameToken.sol\":2480:2484  from */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":2480:2498  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SignSmartContract/GameToken.sol\":2472:2532  require(from != address(0), \"Cannot burn from zero address\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"SignSmartContract/GameToken.sol\":2570:2576  amount */\n      dup1\n        /* \"SignSmartContract/GameToken.sol\":2551:2566  balanceOf(from) */\n      tag_270\n        /* \"SignSmartContract/GameToken.sol\":2561:2565  from */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":2551:2560  balanceOf */\n      tag_115\n        /* \"SignSmartContract/GameToken.sol\":2551:2566  balanceOf(from) */\n      jump\t// in\n    tag_270:\n        /* \"SignSmartContract/GameToken.sol\":2551:2576  balanceOf(from) >= amount */\n      lt\n      iszero\n        /* \"SignSmartContract/GameToken.sol\":2543:2609  require(balanceOf(from) >= amount, \"Insufficient balance to burn\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"SignSmartContract/GameToken.sol\":2620:2639  _burn(from, amount) */\n      tag_274\n        /* \"SignSmartContract/GameToken.sol\":2626:2630  from */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":2632:2638  amount */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":2620:2625  _burn */\n      tag_275\n        /* \"SignSmartContract/GameToken.sol\":2620:2639  _burn(from, amount) */\n      jump\t// in\n    tag_274:\n        /* \"SignSmartContract/GameToken.sol\":2668:2672  from */\n      dup2\n        /* \"SignSmartContract/GameToken.sol\":2655:2704  TokensBurned(from, amount, \"Game mechanics burn\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfad31924d655455395c87544c8aa1ffdb5a7505a22a3c2e03f28003b6556a75f\n        /* \"SignSmartContract/GameToken.sol\":2674:2680  amount */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":2655:2704  TokensBurned(from, amount, \"Game mechanics burn\") */\n      mload(0x40)\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SignSmartContract/GameToken.sol\":2342:2712  function burn(address from, uint256 amount) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":5568:5936  function transfer(address to, uint256 amount) ... */\n    tag_134:\n        /* \"SignSmartContract/GameToken.sol\":5711:5715  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_279\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_175\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_279:\n        /* \"SignSmartContract/GameToken.sol\":5809:5815  amount */\n      dup2\n        /* \"SignSmartContract/GameToken.sol\":5780:5793  _lockedTokens */\n      0x08\n        /* \"SignSmartContract/GameToken.sol\":5780:5805  _lockedTokens[msg.sender] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":5794:5804  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":5780:5805  _lockedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SignSmartContract/GameToken.sol\":5756:5777  balanceOf(msg.sender) */\n      tag_281\n        /* \"SignSmartContract/GameToken.sol\":5766:5776  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":5756:5765  balanceOf */\n      tag_115\n        /* \"SignSmartContract/GameToken.sol\":5756:5777  balanceOf(msg.sender) */\n      jump\t// in\n    tag_281:\n        /* \"SignSmartContract/GameToken.sol\":5756:5805  balanceOf(msg.sender) - _lockedTokens[msg.sender] */\n      tag_282\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_282:\n        /* \"SignSmartContract/GameToken.sol\":5756:5815  balanceOf(msg.sender) - _lockedTokens[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"SignSmartContract/GameToken.sol\":5734:5884  require(... */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_182\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"SignSmartContract/GameToken.sol\":5902:5928  super.transfer(to, amount) */\n      tag_285\n        /* \"SignSmartContract/GameToken.sol\":5917:5919  to */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":5921:5927  amount */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":5902:5916  super.transfer */\n      tag_286\n        /* \"SignSmartContract/GameToken.sol\":5902:5928  super.transfer(to, amount) */\n      jump\t// in\n    tag_285:\n        /* \"SignSmartContract/GameToken.sol\":5895:5928  return super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"SignSmartContract/GameToken.sol\":5568:5936  function transfer(address to, uint256 amount) ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":493:555  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_137:\n        /* \"SignSmartContract/GameToken.sol\":531:555  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"SignSmartContract/GameToken.sol\":493:555  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_287\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_68\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_289\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_291\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_198\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_291:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":2916:3360  function payReward(... */\n    tag_145:\n        /* \"SignSmartContract/GameToken.sol\":1456:1494  hasRole(GAME_MANAGER_ROLE, msg.sender) */\n      tag_293\n        /* \"SignSmartContract/GameToken.sol\":606:636  keccak256(\"GAME_MANAGER_ROLE\") */\n      0xef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b1\n        /* \"SignSmartContract/GameToken.sol\":1483:1493  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":1456:1463  hasRole */\n      tag_121\n        /* \"SignSmartContract/GameToken.sol\":1456:1494  hasRole(GAME_MANAGER_ROLE, msg.sender) */\n      jump\t// in\n    tag_293:\n        /* \"SignSmartContract/GameToken.sol\":1448:1527  require(hasRole(GAME_MANAGER_ROLE, msg.sender), \"Caller is not a game manager\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_263\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_297\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_175\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_299\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_299:\n        /* \"SignSmartContract/GameToken.sol\":3152:3153  0 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":3138:3154  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SignSmartContract/GameToken.sol\":3138:3140  to */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":3138:3154  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SignSmartContract/GameToken.sol\":3130:3185  require(to != address(0), \"Cannot reward zero address\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"SignSmartContract/GameToken.sol\":1219:1238  1000000000 * 10**18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"SignSmartContract/GameToken.sol\":3220:3226  amount */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":3204:3217  totalSupply() */\n      tag_304\n        /* \"SignSmartContract/GameToken.sol\":3204:3215  totalSupply */\n      tag_57\n        /* \"SignSmartContract/GameToken.sol\":3204:3217  totalSupply() */\n      jump\t// in\n    tag_304:\n        /* \"SignSmartContract/GameToken.sol\":3204:3226  totalSupply() + amount */\n      tag_305\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_305:\n        /* \"SignSmartContract/GameToken.sol\":3204:3240  totalSupply() + amount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"SignSmartContract/GameToken.sol\":3196:3268  require(totalSupply() + amount <= MAX_SUPPLY, \"Would exceed max supply\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap1\n      tag_221\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"SignSmartContract/GameToken.sol\":3289:3306  _mint(to, amount) */\n      tag_308\n        /* \"SignSmartContract/GameToken.sol\":3295:3297  to */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":3299:3305  amount */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":3289:3294  _mint */\n      tag_223\n        /* \"SignSmartContract/GameToken.sol\":3289:3306  _mint(to, amount) */\n      jump\t// in\n    tag_308:\n        /* \"SignSmartContract/GameToken.sol\":3333:3335  to */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":3322:3352  RewardPaid(to, amount, reason) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x21a82678daa5235b7b5de669fdf9599453d3d885cee0826e92636d747419689c\n        /* \"SignSmartContract/GameToken.sol\":3337:3343  amount */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":3345:3351  reason */\n      dup4\n        /* \"SignSmartContract/GameToken.sol\":3322:3352  RewardPaid(to, amount, reason) */\n      mload(0x40)\n      tag_309\n      swap3\n      swap2\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_311\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_245\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_311:\n        /* \"SignSmartContract/GameToken.sol\":2916:3360  function payReward(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":4018:4484  function unlockTokens() ... */\n    tag_152:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_314\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_175\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_316\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_316:\n        /* \"SignSmartContract/GameToken.sol\":4125:4145  uint256 lockedAmount */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":4148:4161  _lockedTokens */\n      0x08\n        /* \"SignSmartContract/GameToken.sol\":4148:4173  _lockedTokens[msg.sender] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":4162:4172  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":4148:4173  _lockedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SignSmartContract/GameToken.sol\":4125:4173  uint256 lockedAmount = _lockedTokens[msg.sender] */\n      swap1\n      pop\n        /* \"SignSmartContract/GameToken.sol\":4207:4208  0 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":4192:4204  lockedAmount */\n      dup2\n        /* \"SignSmartContract/GameToken.sol\":4192:4208  lockedAmount > 0 */\n      gt\n        /* \"SignSmartContract/GameToken.sol\":4184:4229  require(lockedAmount > 0, \"No tokens locked\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"SignSmartContract/GameToken.sol\":1167:1175  24 hours */\n      0x015180\n        /* \"SignSmartContract/GameToken.sol\":4281:4295  _lockTimestamp */\n      0x09\n        /* \"SignSmartContract/GameToken.sol\":4281:4307  _lockTimestamp[msg.sender] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":4296:4306  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":4281:4307  _lockTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SignSmartContract/GameToken.sol\":4281:4323  _lockTimestamp[msg.sender] + LOCK_DURATION */\n      tag_321\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_321:\n        /* \"SignSmartContract/GameToken.sol\":4262:4277  block.timestamp */\n      timestamp\n        /* \"SignSmartContract/GameToken.sol\":4262:4323  block.timestamp >= _lockTimestamp[msg.sender] + LOCK_DURATION */\n      lt\n      iszero\n        /* \"SignSmartContract/GameToken.sol\":4240:4370  require(... */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"SignSmartContract/GameToken.sol\":4419:4420  0 */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":4391:4404  _lockedTokens */\n      0x08\n        /* \"SignSmartContract/GameToken.sol\":4391:4416  _lockedTokens[msg.sender] */\n      0x00\n        /* \"SignSmartContract/GameToken.sol\":4405:4415  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":4391:4416  _lockedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SignSmartContract/GameToken.sol\":4391:4420  _lockedTokens[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SignSmartContract/GameToken.sol\":4451:4461  msg.sender */\n      caller\n        /* \"SignSmartContract/GameToken.sol\":4436:4476  TokensUnlocked(msg.sender, lockedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888\n        /* \"SignSmartContract/GameToken.sol\":4463:4475  lockedAmount */\n      dup3\n        /* \"SignSmartContract/GameToken.sol\":4436:4476  TokensUnlocked(msg.sender, lockedAmount) */\n      mload(0x40)\n      tag_325\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SignSmartContract/GameToken.sol\":4114:4484  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_326\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_245\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_326:\n        /* \"SignSmartContract/GameToken.sol\":4018:4484  function unlockTokens() ... */\n      jump\t// out\n        /* \"SignSmartContract/GameToken.sol\":562:636  bytes32 public constant GAME_MANAGER_ROLE = keccak256(\"GAME_MANAGER_ROLE\") */\n    tag_154:\n        /* \"SignSmartContract/GameToken.sol\":606:636  keccak256(\"GAME_MANAGER_ROLE\") */\n      0xef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b1\n        /* \"SignSmartContract/GameToken.sol\":562:636  bytes32 public constant GAME_MANAGER_ROLE = keccak256(\"GAME_MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_333\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_99\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap1\n      tag_336\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_334:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_338\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_344\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_345\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_346\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_348\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_350\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_347)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_347:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_353\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_355\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_352)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_352:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_358\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_359\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_361\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_362\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_362:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_366\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_367\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x07)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_370\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_371\n      swap1\n      tag_372\n      jump\t// in\n    tag_371:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_370:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x07\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x07\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_375\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_175\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_377\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_378\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_378:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_380\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_381\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_381:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_382\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_384\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_387\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_388\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_388:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_387:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_391\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_392\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_394\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_396\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_397\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_396:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_399\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_402\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_402:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_403\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_404\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_405\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_407\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_409\n      swap3\n      swap2\n      swap1\n      tag_410\n      jump\t// in\n    tag_409:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_412\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_99\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_414\n      swap1\n      tag_415\n      jump\t// in\n    tag_414:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_413:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_418\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_418:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_419)\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_420\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_420:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_422\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_423)\n    tag_422:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_424\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_425:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_426:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_427:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_428:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_429:\n        /* \"#utility.yul\":561:584   */\n      tag_502\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_428\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_503:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_430:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_505\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_429\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_43:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_508\n      tag_426\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":833:952   */\n    tag_507:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_509\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_430\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_431:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_432:\n        /* \"#utility.yul\":1268:1289   */\n      tag_512\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_431\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_46:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_514\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_432\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_433:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_434:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_435:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_436:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_437:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_520\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_433\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":2222:2293   */\n      tag_521\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_434\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_522\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_435\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":2392:2421   */\n      tag_523\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_436\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_50:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_525\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_437\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_438:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_439:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_528\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_438\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_440:\n        /* \"#utility.yul\":3060:3084   */\n      tag_530\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_439\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      dup1\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_531:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_441:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_533\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_440\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_442:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_443:\n        /* \"#utility.yul\":3416:3440   */\n      tag_536\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_442\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_537\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      dup1\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_537:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_444:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_539\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_443\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_53:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_542\n      tag_426\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":3709:3828   */\n    tag_541:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_543\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_441\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_544\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_444\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_445:\n        /* \"#utility.yul\":4183:4207   */\n      tag_546\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_442\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_59:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_548\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_445\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_62:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      dup1\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_551\n      tag_426\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":4558:4677   */\n    tag_550:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_552\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_441\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_553\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_441\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_554\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_444\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_446:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_447:\n        /* \"#utility.yul\":5229:5253   */\n      tag_557\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_446\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      dup1\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_558:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_448:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_560\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_447\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_67:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_563\n      tag_426\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":5505:5624   */\n    tag_562:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_564\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_448\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_449:\n        /* \"#utility.yul\":5851:5875   */\n      tag_566\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_446\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_70:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_568\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_449\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6590   */\n    tag_73:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6192:6198   */\n      dup1\n        /* \"#utility.yul\":6241:6243   */\n      0x40\n        /* \"#utility.yul\":6229:6238   */\n      dup4\n        /* \"#utility.yul\":6220:6227   */\n      dup6\n        /* \"#utility.yul\":6216:6239   */\n      sub\n        /* \"#utility.yul\":6212:6244   */\n      slt\n        /* \"#utility.yul\":6209:6328   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":6247:6326   */\n      tag_571\n      tag_426\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":6209:6328   */\n    tag_570:\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6392:6445   */\n      tag_572\n        /* \"#utility.yul\":6437:6444   */\n      dup6\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6417:6426   */\n      dup7\n        /* \"#utility.yul\":6413:6435   */\n      add\n        /* \"#utility.yul\":6392:6445   */\n      tag_448\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":6382:6445   */\n      swap3\n      pop\n        /* \"#utility.yul\":6338:6455   */\n      pop\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6520:6573   */\n      tag_573\n        /* \"#utility.yul\":6565:6572   */\n      dup6\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup7\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6520:6573   */\n      tag_441\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":6510:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6465:6583   */\n      pop\n        /* \"#utility.yul\":6116:6590   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6682   */\n    tag_450:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6675   */\n      0xff\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6676   */\n      and\n        /* \"#utility.yul\":6649:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6800   */\n    tag_451:\n        /* \"#utility.yul\":6771:6793   */\n      tag_576\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6771:6793   */\n      tag_450\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6794   */\n      mstore\n        /* \"#utility.yul\":6688:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7020   */\n    tag_78:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7013   */\n      tag_578\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7012   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7013   */\n      tag_451\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":6806:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7355   */\n    tag_87:\n        /* \"#utility.yul\":7085:7091   */\n      0x00\n        /* \"#utility.yul\":7134:7136   */\n      0x20\n        /* \"#utility.yul\":7122:7131   */\n      dup3\n        /* \"#utility.yul\":7113:7120   */\n      dup5\n        /* \"#utility.yul\":7109:7132   */\n      sub\n        /* \"#utility.yul\":7105:7137   */\n      slt\n        /* \"#utility.yul\":7102:7221   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":7140:7219   */\n      tag_581\n      tag_426\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":7102:7221   */\n    tag_580:\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7285:7338   */\n      tag_582\n        /* \"#utility.yul\":7330:7337   */\n      dup5\n        /* \"#utility.yul\":7321:7327   */\n      dup3\n        /* \"#utility.yul\":7310:7319   */\n      dup6\n        /* \"#utility.yul\":7306:7328   */\n      add\n        /* \"#utility.yul\":7285:7338   */\n      tag_441\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":7275:7338   */\n      swap2\n      pop\n        /* \"#utility.yul\":7231:7348   */\n      pop\n        /* \"#utility.yul\":7026:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7690   */\n    tag_111:\n        /* \"#utility.yul\":7420:7426   */\n      0x00\n        /* \"#utility.yul\":7469:7471   */\n      0x20\n        /* \"#utility.yul\":7457:7466   */\n      dup3\n        /* \"#utility.yul\":7448:7455   */\n      dup5\n        /* \"#utility.yul\":7444:7467   */\n      sub\n        /* \"#utility.yul\":7440:7472   */\n      slt\n        /* \"#utility.yul\":7437:7556   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":7475:7554   */\n      tag_585\n      tag_426\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":7437:7556   */\n    tag_584:\n        /* \"#utility.yul\":7595:7596   */\n      0x00\n        /* \"#utility.yul\":7620:7673   */\n      tag_586\n        /* \"#utility.yul\":7665:7672   */\n      dup5\n        /* \"#utility.yul\":7656:7662   */\n      dup3\n        /* \"#utility.yul\":7645:7654   */\n      dup6\n        /* \"#utility.yul\":7641:7663   */\n      add\n        /* \"#utility.yul\":7620:7673   */\n      tag_444\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":7610:7673   */\n      swap2\n      pop\n        /* \"#utility.yul\":7566:7683   */\n      pop\n        /* \"#utility.yul\":7361:7690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7696:7813   */\n    tag_452:\n        /* \"#utility.yul\":7805:7806   */\n      0x00\n        /* \"#utility.yul\":7802:7803   */\n      dup1\n        /* \"#utility.yul\":7795:7807   */\n      revert\n        /* \"#utility.yul\":7819:7936   */\n    tag_453:\n        /* \"#utility.yul\":7928:7929   */\n      0x00\n        /* \"#utility.yul\":7925:7926   */\n      dup1\n        /* \"#utility.yul\":7918:7930   */\n      revert\n        /* \"#utility.yul\":7942:8122   */\n    tag_454:\n        /* \"#utility.yul\":7990:8067   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7987:7988   */\n      0x00\n        /* \"#utility.yul\":7980:8068   */\n      mstore\n        /* \"#utility.yul\":8087:8091   */\n      0x41\n        /* \"#utility.yul\":8084:8085   */\n      0x04\n        /* \"#utility.yul\":8077:8092   */\n      mstore\n        /* \"#utility.yul\":8111:8115   */\n      0x24\n        /* \"#utility.yul\":8108:8109   */\n      0x00\n        /* \"#utility.yul\":8101:8116   */\n      revert\n        /* \"#utility.yul\":8128:8409   */\n    tag_455:\n        /* \"#utility.yul\":8211:8238   */\n      tag_591\n        /* \"#utility.yul\":8233:8237   */\n      dup3\n        /* \"#utility.yul\":8211:8238   */\n      tag_436\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":8203:8209   */\n      dup2\n        /* \"#utility.yul\":8199:8239   */\n      add\n        /* \"#utility.yul\":8341:8347   */\n      dup2\n        /* \"#utility.yul\":8329:8339   */\n      dup2\n        /* \"#utility.yul\":8326:8348   */\n      lt\n        /* \"#utility.yul\":8305:8323   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8293:8303   */\n      dup3\n        /* \"#utility.yul\":8290:8324   */\n      gt\n        /* \"#utility.yul\":8287:8349   */\n      or\n        /* \"#utility.yul\":8284:8372   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":8352:8370   */\n      tag_593\n      tag_454\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":8284:8372   */\n    tag_592:\n        /* \"#utility.yul\":8392:8402   */\n      dup1\n        /* \"#utility.yul\":8388:8390   */\n      0x40\n        /* \"#utility.yul\":8381:8403   */\n      mstore\n        /* \"#utility.yul\":8171:8409   */\n      pop\n        /* \"#utility.yul\":8128:8409   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8415:8544   */\n    tag_456:\n        /* \"#utility.yul\":8449:8455   */\n      0x00\n        /* \"#utility.yul\":8476:8496   */\n      tag_595\n      tag_425\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":8466:8496   */\n      swap1\n      pop\n        /* \"#utility.yul\":8505:8538   */\n      tag_596\n        /* \"#utility.yul\":8533:8537   */\n      dup3\n        /* \"#utility.yul\":8525:8531   */\n      dup3\n        /* \"#utility.yul\":8505:8538   */\n      tag_455\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":8415:8544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8550:8858   */\n    tag_457:\n        /* \"#utility.yul\":8612:8616   */\n      0x00\n        /* \"#utility.yul\":8702:8720   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8694:8700   */\n      dup3\n        /* \"#utility.yul\":8691:8721   */\n      gt\n        /* \"#utility.yul\":8688:8744   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":8724:8742   */\n      tag_599\n      tag_454\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":8688:8744   */\n    tag_598:\n        /* \"#utility.yul\":8762:8791   */\n      tag_600\n        /* \"#utility.yul\":8784:8790   */\n      dup3\n        /* \"#utility.yul\":8762:8791   */\n      tag_436\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":8754:8791   */\n      swap1\n      pop\n        /* \"#utility.yul\":8846:8850   */\n      0x20\n        /* \"#utility.yul\":8840:8844   */\n      dup2\n        /* \"#utility.yul\":8836:8851   */\n      add\n        /* \"#utility.yul\":8828:8851   */\n      swap1\n      pop\n        /* \"#utility.yul\":8550:8858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8864:9012   */\n    tag_458:\n        /* \"#utility.yul\":8962:8968   */\n      dup3\n        /* \"#utility.yul\":8957:8960   */\n      dup2\n        /* \"#utility.yul\":8952:8955   */\n      dup4\n        /* \"#utility.yul\":8939:8969   */\n      calldatacopy\n        /* \"#utility.yul\":9003:9004   */\n      0x00\n        /* \"#utility.yul\":8994:9000   */\n      dup4\n        /* \"#utility.yul\":8989:8992   */\n      dup4\n        /* \"#utility.yul\":8985:9001   */\n      add\n        /* \"#utility.yul\":8978:9005   */\n      mstore\n        /* \"#utility.yul\":8864:9012   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9018:9443   */\n    tag_459:\n        /* \"#utility.yul\":9096:9101   */\n      0x00\n        /* \"#utility.yul\":9121:9187   */\n      tag_603\n        /* \"#utility.yul\":9137:9186   */\n      tag_604\n        /* \"#utility.yul\":9179:9185   */\n      dup5\n        /* \"#utility.yul\":9137:9186   */\n      tag_457\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":9121:9187   */\n      tag_456\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":9112:9187   */\n      swap1\n      pop\n        /* \"#utility.yul\":9210:9216   */\n      dup3\n        /* \"#utility.yul\":9203:9208   */\n      dup2\n        /* \"#utility.yul\":9196:9217   */\n      mstore\n        /* \"#utility.yul\":9248:9252   */\n      0x20\n        /* \"#utility.yul\":9241:9246   */\n      dup2\n        /* \"#utility.yul\":9237:9253   */\n      add\n        /* \"#utility.yul\":9286:9289   */\n      dup5\n        /* \"#utility.yul\":9277:9283   */\n      dup5\n        /* \"#utility.yul\":9272:9275   */\n      dup5\n        /* \"#utility.yul\":9268:9284   */\n      add\n        /* \"#utility.yul\":9265:9290   */\n      gt\n        /* \"#utility.yul\":9262:9374   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":9293:9372   */\n      tag_606\n      tag_453\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":9262:9374   */\n    tag_605:\n        /* \"#utility.yul\":9383:9437   */\n      tag_607\n        /* \"#utility.yul\":9430:9436   */\n      dup5\n        /* \"#utility.yul\":9425:9428   */\n      dup3\n        /* \"#utility.yul\":9420:9423   */\n      dup6\n        /* \"#utility.yul\":9383:9437   */\n      tag_458\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":9102:9443   */\n      pop\n        /* \"#utility.yul\":9018:9443   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9463:9803   */\n    tag_460:\n        /* \"#utility.yul\":9519:9524   */\n      0x00\n        /* \"#utility.yul\":9568:9571   */\n      dup3\n        /* \"#utility.yul\":9561:9565   */\n      0x1f\n        /* \"#utility.yul\":9553:9559   */\n      dup4\n        /* \"#utility.yul\":9549:9566   */\n      add\n        /* \"#utility.yul\":9545:9572   */\n      slt\n        /* \"#utility.yul\":9535:9657   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":9576:9655   */\n      tag_610\n      tag_452\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":9535:9657   */\n    tag_609:\n        /* \"#utility.yul\":9693:9699   */\n      dup2\n        /* \"#utility.yul\":9680:9700   */\n      calldataload\n        /* \"#utility.yul\":9718:9797   */\n      tag_611\n        /* \"#utility.yul\":9793:9796   */\n      dup5\n        /* \"#utility.yul\":9785:9791   */\n      dup3\n        /* \"#utility.yul\":9778:9782   */\n      0x20\n        /* \"#utility.yul\":9770:9776   */\n      dup7\n        /* \"#utility.yul\":9766:9783   */\n      add\n        /* \"#utility.yul\":9718:9797   */\n      tag_459\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":9709:9797   */\n      swap2\n      pop\n        /* \"#utility.yul\":9525:9803   */\n      pop\n        /* \"#utility.yul\":9463:9803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9809:10608   */\n    tag_144:\n        /* \"#utility.yul\":9896:9902   */\n      0x00\n        /* \"#utility.yul\":9904:9910   */\n      dup1\n        /* \"#utility.yul\":9912:9918   */\n      0x00\n        /* \"#utility.yul\":9961:9963   */\n      0x60\n        /* \"#utility.yul\":9949:9958   */\n      dup5\n        /* \"#utility.yul\":9940:9947   */\n      dup7\n        /* \"#utility.yul\":9936:9959   */\n      sub\n        /* \"#utility.yul\":9932:9964   */\n      slt\n        /* \"#utility.yul\":9929:10048   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":9967:10046   */\n      tag_614\n      tag_426\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":9929:10048   */\n    tag_613:\n        /* \"#utility.yul\":10087:10088   */\n      0x00\n        /* \"#utility.yul\":10112:10165   */\n      tag_615\n        /* \"#utility.yul\":10157:10164   */\n      dup7\n        /* \"#utility.yul\":10148:10154   */\n      dup3\n        /* \"#utility.yul\":10137:10146   */\n      dup8\n        /* \"#utility.yul\":10133:10155   */\n      add\n        /* \"#utility.yul\":10112:10165   */\n      tag_441\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":10102:10165   */\n      swap4\n      pop\n        /* \"#utility.yul\":10058:10175   */\n      pop\n        /* \"#utility.yul\":10214:10216   */\n      0x20\n        /* \"#utility.yul\":10240:10293   */\n      tag_616\n        /* \"#utility.yul\":10285:10292   */\n      dup7\n        /* \"#utility.yul\":10276:10282   */\n      dup3\n        /* \"#utility.yul\":10265:10274   */\n      dup8\n        /* \"#utility.yul\":10261:10283   */\n      add\n        /* \"#utility.yul\":10240:10293   */\n      tag_444\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":10230:10293   */\n      swap3\n      pop\n        /* \"#utility.yul\":10185:10303   */\n      pop\n        /* \"#utility.yul\":10370:10372   */\n      0x40\n        /* \"#utility.yul\":10359:10368   */\n      dup5\n        /* \"#utility.yul\":10355:10373   */\n      add\n        /* \"#utility.yul\":10342:10374   */\n      calldataload\n        /* \"#utility.yul\":10401:10419   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10393:10399   */\n      dup2\n        /* \"#utility.yul\":10390:10420   */\n      gt\n        /* \"#utility.yul\":10387:10504   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":10423:10502   */\n      tag_618\n      tag_427\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":10387:10504   */\n    tag_617:\n        /* \"#utility.yul\":10528:10591   */\n      tag_619\n        /* \"#utility.yul\":10583:10590   */\n      dup7\n        /* \"#utility.yul\":10574:10580   */\n      dup3\n        /* \"#utility.yul\":10563:10572   */\n      dup8\n        /* \"#utility.yul\":10559:10581   */\n      add\n        /* \"#utility.yul\":10528:10591   */\n      tag_460\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":10518:10591   */\n      swap2\n      pop\n        /* \"#utility.yul\":10313:10601   */\n      pop\n        /* \"#utility.yul\":9809:10608   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10614:11088   */\n    tag_148:\n        /* \"#utility.yul\":10682:10688   */\n      0x00\n        /* \"#utility.yul\":10690:10696   */\n      dup1\n        /* \"#utility.yul\":10739:10741   */\n      0x40\n        /* \"#utility.yul\":10727:10736   */\n      dup4\n        /* \"#utility.yul\":10718:10725   */\n      dup6\n        /* \"#utility.yul\":10714:10737   */\n      sub\n        /* \"#utility.yul\":10710:10742   */\n      slt\n        /* \"#utility.yul\":10707:10826   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":10745:10824   */\n      tag_622\n      tag_426\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":10707:10826   */\n    tag_621:\n        /* \"#utility.yul\":10865:10866   */\n      0x00\n        /* \"#utility.yul\":10890:10943   */\n      tag_623\n        /* \"#utility.yul\":10935:10942   */\n      dup6\n        /* \"#utility.yul\":10926:10932   */\n      dup3\n        /* \"#utility.yul\":10915:10924   */\n      dup7\n        /* \"#utility.yul\":10911:10933   */\n      add\n        /* \"#utility.yul\":10890:10943   */\n      tag_441\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":10880:10943   */\n      swap3\n      pop\n        /* \"#utility.yul\":10836:10953   */\n      pop\n        /* \"#utility.yul\":10992:10994   */\n      0x20\n        /* \"#utility.yul\":11018:11071   */\n      tag_624\n        /* \"#utility.yul\":11063:11070   */\n      dup6\n        /* \"#utility.yul\":11054:11060   */\n      dup3\n        /* \"#utility.yul\":11043:11052   */\n      dup7\n        /* \"#utility.yul\":11039:11061   */\n      add\n        /* \"#utility.yul\":11018:11071   */\n      tag_441\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":11008:11071   */\n      swap2\n      pop\n        /* \"#utility.yul\":10963:11081   */\n      pop\n        /* \"#utility.yul\":10614:11088   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11094:11274   */\n    tag_461:\n        /* \"#utility.yul\":11142:11219   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11139:11140   */\n      0x00\n        /* \"#utility.yul\":11132:11220   */\n      mstore\n        /* \"#utility.yul\":11239:11243   */\n      0x22\n        /* \"#utility.yul\":11236:11237   */\n      0x04\n        /* \"#utility.yul\":11229:11244   */\n      mstore\n        /* \"#utility.yul\":11263:11267   */\n      0x24\n        /* \"#utility.yul\":11260:11261   */\n      0x00\n        /* \"#utility.yul\":11253:11268   */\n      revert\n        /* \"#utility.yul\":11280:11600   */\n    tag_162:\n        /* \"#utility.yul\":11324:11330   */\n      0x00\n        /* \"#utility.yul\":11361:11362   */\n      0x02\n        /* \"#utility.yul\":11355:11359   */\n      dup3\n        /* \"#utility.yul\":11351:11363   */\n      div\n        /* \"#utility.yul\":11341:11363   */\n      swap1\n      pop\n        /* \"#utility.yul\":11408:11409   */\n      0x01\n        /* \"#utility.yul\":11402:11406   */\n      dup3\n        /* \"#utility.yul\":11398:11410   */\n      and\n        /* \"#utility.yul\":11429:11447   */\n      dup1\n        /* \"#utility.yul\":11419:11500   */\n      tag_627\n      jumpi\n        /* \"#utility.yul\":11485:11489   */\n      0x7f\n        /* \"#utility.yul\":11477:11483   */\n      dup3\n        /* \"#utility.yul\":11473:11490   */\n      and\n        /* \"#utility.yul\":11463:11490   */\n      swap2\n      pop\n        /* \"#utility.yul\":11419:11500   */\n    tag_627:\n        /* \"#utility.yul\":11547:11549   */\n      0x20\n        /* \"#utility.yul\":11539:11545   */\n      dup3\n        /* \"#utility.yul\":11536:11550   */\n      lt\n        /* \"#utility.yul\":11516:11534   */\n      dup2\n        /* \"#utility.yul\":11513:11551   */\n      sub\n        /* \"#utility.yul\":11510:11594   */\n      tag_628\n      jumpi\n        /* \"#utility.yul\":11566:11584   */\n      tag_629\n      tag_461\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":11510:11594   */\n    tag_628:\n        /* \"#utility.yul\":11331:11600   */\n      pop\n        /* \"#utility.yul\":11280:11600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11606:11786   */\n    tag_462:\n        /* \"#utility.yul\":11654:11731   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11651:11652   */\n      0x00\n        /* \"#utility.yul\":11644:11732   */\n      mstore\n        /* \"#utility.yul\":11751:11755   */\n      0x11\n        /* \"#utility.yul\":11748:11749   */\n      0x04\n        /* \"#utility.yul\":11741:11756   */\n      mstore\n        /* \"#utility.yul\":11775:11779   */\n      0x24\n        /* \"#utility.yul\":11772:11773   */\n      0x00\n        /* \"#utility.yul\":11765:11780   */\n      revert\n        /* \"#utility.yul\":11792:11986   */\n    tag_179:\n        /* \"#utility.yul\":11832:11836   */\n      0x00\n        /* \"#utility.yul\":11852:11872   */\n      tag_632\n        /* \"#utility.yul\":11870:11871   */\n      dup3\n        /* \"#utility.yul\":11852:11872   */\n      tag_442\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":11847:11872   */\n      swap2\n      pop\n        /* \"#utility.yul\":11886:11906   */\n      tag_633\n        /* \"#utility.yul\":11904:11905   */\n      dup4\n        /* \"#utility.yul\":11886:11906   */\n      tag_442\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":11881:11906   */\n      swap3\n      pop\n        /* \"#utility.yul\":11930:11931   */\n      dup3\n        /* \"#utility.yul\":11927:11928   */\n      dup3\n        /* \"#utility.yul\":11923:11932   */\n      sub\n        /* \"#utility.yul\":11915:11932   */\n      swap1\n      pop\n        /* \"#utility.yul\":11954:11955   */\n      dup2\n        /* \"#utility.yul\":11948:11952   */\n      dup2\n        /* \"#utility.yul\":11945:11956   */\n      gt\n        /* \"#utility.yul\":11942:11979   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":11959:11977   */\n      tag_635\n      tag_462\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":11942:11979   */\n    tag_634:\n        /* \"#utility.yul\":11792:11986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11992:12220   */\n    tag_463:\n        /* \"#utility.yul\":12132:12166   */\n      0x5472616e7366657220616d6f756e74206578636565647320617661696c61626c\n        /* \"#utility.yul\":12128:12129   */\n      0x00\n        /* \"#utility.yul\":12120:12126   */\n      dup3\n        /* \"#utility.yul\":12116:12130   */\n      add\n        /* \"#utility.yul\":12109:12167   */\n      mstore\n        /* \"#utility.yul\":12201:12212   */\n      0x652062616c616e63650000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12196:12198   */\n      0x20\n        /* \"#utility.yul\":12188:12194   */\n      dup3\n        /* \"#utility.yul\":12184:12199   */\n      add\n        /* \"#utility.yul\":12177:12213   */\n      mstore\n        /* \"#utility.yul\":11992:12220   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12226:12592   */\n    tag_464:\n        /* \"#utility.yul\":12368:12371   */\n      0x00\n        /* \"#utility.yul\":12389:12456   */\n      tag_638\n        /* \"#utility.yul\":12453:12455   */\n      0x29\n        /* \"#utility.yul\":12448:12451   */\n      dup4\n        /* \"#utility.yul\":12389:12456   */\n      tag_434\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":12382:12456   */\n      swap2\n      pop\n        /* \"#utility.yul\":12465:12558   */\n      tag_639\n        /* \"#utility.yul\":12554:12557   */\n      dup3\n        /* \"#utility.yul\":12465:12558   */\n      tag_463\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":12583:12585   */\n      0x40\n        /* \"#utility.yul\":12578:12581   */\n      dup3\n        /* \"#utility.yul\":12574:12586   */\n      add\n        /* \"#utility.yul\":12567:12586   */\n      swap1\n      pop\n        /* \"#utility.yul\":12226:12592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12598:13017   */\n    tag_182:\n        /* \"#utility.yul\":12764:12768   */\n      0x00\n        /* \"#utility.yul\":12802:12804   */\n      0x20\n        /* \"#utility.yul\":12791:12800   */\n      dup3\n        /* \"#utility.yul\":12787:12805   */\n      add\n        /* \"#utility.yul\":12779:12805   */\n      swap1\n      pop\n        /* \"#utility.yul\":12851:12860   */\n      dup2\n        /* \"#utility.yul\":12845:12849   */\n      dup2\n        /* \"#utility.yul\":12841:12861   */\n      sub\n        /* \"#utility.yul\":12837:12838   */\n      0x00\n        /* \"#utility.yul\":12826:12835   */\n      dup4\n        /* \"#utility.yul\":12822:12839   */\n      add\n        /* \"#utility.yul\":12815:12862   */\n      mstore\n        /* \"#utility.yul\":12879:13010   */\n      tag_641\n        /* \"#utility.yul\":13005:13009   */\n      dup2\n        /* \"#utility.yul\":12879:13010   */\n      tag_464\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":12871:13010   */\n      swap1\n      pop\n        /* \"#utility.yul\":12598:13017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13023:13195   */\n    tag_465:\n        /* \"#utility.yul\":13163:13187   */\n      0x43616c6c6572206973206e6f742061206d696e74657200000000000000000000\n        /* \"#utility.yul\":13159:13160   */\n      0x00\n        /* \"#utility.yul\":13151:13157   */\n      dup3\n        /* \"#utility.yul\":13147:13161   */\n      add\n        /* \"#utility.yul\":13140:13188   */\n      mstore\n        /* \"#utility.yul\":13023:13195   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13201:13567   */\n    tag_466:\n        /* \"#utility.yul\":13343:13346   */\n      0x00\n        /* \"#utility.yul\":13364:13431   */\n      tag_644\n        /* \"#utility.yul\":13428:13430   */\n      0x16\n        /* \"#utility.yul\":13423:13426   */\n      dup4\n        /* \"#utility.yul\":13364:13431   */\n      tag_434\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":13357:13431   */\n      swap2\n      pop\n        /* \"#utility.yul\":13440:13533   */\n      tag_645\n        /* \"#utility.yul\":13529:13532   */\n      dup3\n        /* \"#utility.yul\":13440:13533   */\n      tag_465\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":13558:13560   */\n      0x20\n        /* \"#utility.yul\":13553:13556   */\n      dup3\n        /* \"#utility.yul\":13549:13561   */\n      add\n        /* \"#utility.yul\":13542:13561   */\n      swap1\n      pop\n        /* \"#utility.yul\":13201:13567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13573:13992   */\n    tag_209:\n        /* \"#utility.yul\":13739:13743   */\n      0x00\n        /* \"#utility.yul\":13777:13779   */\n      0x20\n        /* \"#utility.yul\":13766:13775   */\n      dup3\n        /* \"#utility.yul\":13762:13780   */\n      add\n        /* \"#utility.yul\":13754:13780   */\n      swap1\n      pop\n        /* \"#utility.yul\":13826:13835   */\n      dup2\n        /* \"#utility.yul\":13820:13824   */\n      dup2\n        /* \"#utility.yul\":13816:13836   */\n      sub\n        /* \"#utility.yul\":13812:13813   */\n      0x00\n        /* \"#utility.yul\":13801:13810   */\n      dup4\n        /* \"#utility.yul\":13797:13814   */\n      add\n        /* \"#utility.yul\":13790:13837   */\n      mstore\n        /* \"#utility.yul\":13854:13985   */\n      tag_647\n        /* \"#utility.yul\":13980:13984   */\n      dup2\n        /* \"#utility.yul\":13854:13985   */\n      tag_466\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":13846:13985   */\n      swap1\n      pop\n        /* \"#utility.yul\":13573:13992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13998:14175   */\n    tag_467:\n        /* \"#utility.yul\":14138:14167   */\n      0x43616e6e6f74206d696e7420746f207a65726f20616464726573730000000000\n        /* \"#utility.yul\":14134:14135   */\n      0x00\n        /* \"#utility.yul\":14126:14132   */\n      dup3\n        /* \"#utility.yul\":14122:14136   */\n      add\n        /* \"#utility.yul\":14115:14168   */\n      mstore\n        /* \"#utility.yul\":13998:14175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14181:14547   */\n    tag_468:\n        /* \"#utility.yul\":14323:14326   */\n      0x00\n        /* \"#utility.yul\":14344:14411   */\n      tag_650\n        /* \"#utility.yul\":14408:14410   */\n      0x1b\n        /* \"#utility.yul\":14403:14406   */\n      dup4\n        /* \"#utility.yul\":14344:14411   */\n      tag_434\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":14337:14411   */\n      swap2\n      pop\n        /* \"#utility.yul\":14420:14513   */\n      tag_651\n        /* \"#utility.yul\":14509:14512   */\n      dup3\n        /* \"#utility.yul\":14420:14513   */\n      tag_467\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":14538:14540   */\n      0x20\n        /* \"#utility.yul\":14533:14536   */\n      dup3\n        /* \"#utility.yul\":14529:14541   */\n      add\n        /* \"#utility.yul\":14522:14541   */\n      swap1\n      pop\n        /* \"#utility.yul\":14181:14547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14553:14972   */\n    tag_215:\n        /* \"#utility.yul\":14719:14723   */\n      0x00\n        /* \"#utility.yul\":14757:14759   */\n      0x20\n        /* \"#utility.yul\":14746:14755   */\n      dup3\n        /* \"#utility.yul\":14742:14760   */\n      add\n        /* \"#utility.yul\":14734:14760   */\n      swap1\n      pop\n        /* \"#utility.yul\":14806:14815   */\n      dup2\n        /* \"#utility.yul\":14800:14804   */\n      dup2\n        /* \"#utility.yul\":14796:14816   */\n      sub\n        /* \"#utility.yul\":14792:14793   */\n      0x00\n        /* \"#utility.yul\":14781:14790   */\n      dup4\n        /* \"#utility.yul\":14777:14794   */\n      add\n        /* \"#utility.yul\":14770:14817   */\n      mstore\n        /* \"#utility.yul\":14834:14965   */\n      tag_653\n        /* \"#utility.yul\":14960:14964   */\n      dup2\n        /* \"#utility.yul\":14834:14965   */\n      tag_468\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":14826:14965   */\n      swap1\n      pop\n        /* \"#utility.yul\":14553:14972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14978:15169   */\n    tag_218:\n        /* \"#utility.yul\":15018:15021   */\n      0x00\n        /* \"#utility.yul\":15037:15057   */\n      tag_655\n        /* \"#utility.yul\":15055:15056   */\n      dup3\n        /* \"#utility.yul\":15037:15057   */\n      tag_442\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":15032:15057   */\n      swap2\n      pop\n        /* \"#utility.yul\":15071:15091   */\n      tag_656\n        /* \"#utility.yul\":15089:15090   */\n      dup4\n        /* \"#utility.yul\":15071:15091   */\n      tag_442\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":15066:15091   */\n      swap3\n      pop\n        /* \"#utility.yul\":15114:15115   */\n      dup3\n        /* \"#utility.yul\":15111:15112   */\n      dup3\n        /* \"#utility.yul\":15107:15116   */\n      add\n        /* \"#utility.yul\":15100:15116   */\n      swap1\n      pop\n        /* \"#utility.yul\":15135:15138   */\n      dup1\n        /* \"#utility.yul\":15132:15133   */\n      dup3\n        /* \"#utility.yul\":15129:15139   */\n      gt\n        /* \"#utility.yul\":15126:15162   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":15142:15160   */\n      tag_658\n      tag_462\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":15126:15162   */\n    tag_657:\n        /* \"#utility.yul\":14978:15169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15175:15348   */\n    tag_469:\n        /* \"#utility.yul\":15315:15340   */\n      0x576f756c6420657863656564206d617820737570706c79000000000000000000\n        /* \"#utility.yul\":15311:15312   */\n      0x00\n        /* \"#utility.yul\":15303:15309   */\n      dup3\n        /* \"#utility.yul\":15299:15313   */\n      add\n        /* \"#utility.yul\":15292:15341   */\n      mstore\n        /* \"#utility.yul\":15175:15348   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15354:15720   */\n    tag_470:\n        /* \"#utility.yul\":15496:15499   */\n      0x00\n        /* \"#utility.yul\":15517:15584   */\n      tag_661\n        /* \"#utility.yul\":15581:15583   */\n      0x17\n        /* \"#utility.yul\":15576:15579   */\n      dup4\n        /* \"#utility.yul\":15517:15584   */\n      tag_434\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":15510:15584   */\n      swap2\n      pop\n        /* \"#utility.yul\":15593:15686   */\n      tag_662\n        /* \"#utility.yul\":15682:15685   */\n      dup3\n        /* \"#utility.yul\":15593:15686   */\n      tag_469\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":15711:15713   */\n      0x20\n        /* \"#utility.yul\":15706:15709   */\n      dup3\n        /* \"#utility.yul\":15702:15714   */\n      add\n        /* \"#utility.yul\":15695:15714   */\n      swap1\n      pop\n        /* \"#utility.yul\":15354:15720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15726:16145   */\n    tag_221:\n        /* \"#utility.yul\":15892:15896   */\n      0x00\n        /* \"#utility.yul\":15930:15932   */\n      0x20\n        /* \"#utility.yul\":15919:15928   */\n      dup3\n        /* \"#utility.yul\":15915:15933   */\n      add\n        /* \"#utility.yul\":15907:15933   */\n      swap1\n      pop\n        /* \"#utility.yul\":15979:15988   */\n      dup2\n        /* \"#utility.yul\":15973:15977   */\n      dup2\n        /* \"#utility.yul\":15969:15989   */\n      sub\n        /* \"#utility.yul\":15965:15966   */\n      0x00\n        /* \"#utility.yul\":15954:15963   */\n      dup4\n        /* \"#utility.yul\":15950:15967   */\n      add\n        /* \"#utility.yul\":15943:15990   */\n      mstore\n        /* \"#utility.yul\":16007:16138   */\n      tag_664\n        /* \"#utility.yul\":16133:16137   */\n      dup2\n        /* \"#utility.yul\":16007:16138   */\n      tag_470\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":15999:16138   */\n      swap1\n      pop\n        /* \"#utility.yul\":15726:16145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16151:16324   */\n    tag_471:\n        /* \"#utility.yul\":16291:16316   */\n      0x43616e6e6f74206c6f636b207a65726f20746f6b656e73000000000000000000\n        /* \"#utility.yul\":16287:16288   */\n      0x00\n        /* \"#utility.yul\":16279:16285   */\n      dup3\n        /* \"#utility.yul\":16275:16289   */\n      add\n        /* \"#utility.yul\":16268:16317   */\n      mstore\n        /* \"#utility.yul\":16151:16324   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16330:16696   */\n    tag_472:\n        /* \"#utility.yul\":16472:16475   */\n      0x00\n        /* \"#utility.yul\":16493:16560   */\n      tag_667\n        /* \"#utility.yul\":16557:16559   */\n      0x17\n        /* \"#utility.yul\":16552:16555   */\n      dup4\n        /* \"#utility.yul\":16493:16560   */\n      tag_434\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":16486:16560   */\n      swap2\n      pop\n        /* \"#utility.yul\":16569:16662   */\n      tag_668\n        /* \"#utility.yul\":16658:16661   */\n      dup3\n        /* \"#utility.yul\":16569:16662   */\n      tag_471\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":16687:16689   */\n      0x20\n        /* \"#utility.yul\":16682:16685   */\n      dup3\n        /* \"#utility.yul\":16678:16690   */\n      add\n        /* \"#utility.yul\":16671:16690   */\n      swap1\n      pop\n        /* \"#utility.yul\":16330:16696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16702:17121   */\n    tag_237:\n        /* \"#utility.yul\":16868:16872   */\n      0x00\n        /* \"#utility.yul\":16906:16908   */\n      0x20\n        /* \"#utility.yul\":16895:16904   */\n      dup3\n        /* \"#utility.yul\":16891:16909   */\n      add\n        /* \"#utility.yul\":16883:16909   */\n      swap1\n      pop\n        /* \"#utility.yul\":16955:16964   */\n      dup2\n        /* \"#utility.yul\":16949:16953   */\n      dup2\n        /* \"#utility.yul\":16945:16965   */\n      sub\n        /* \"#utility.yul\":16941:16942   */\n      0x00\n        /* \"#utility.yul\":16930:16939   */\n      dup4\n        /* \"#utility.yul\":16926:16943   */\n      add\n        /* \"#utility.yul\":16919:16966   */\n      mstore\n        /* \"#utility.yul\":16983:17114   */\n      tag_670\n        /* \"#utility.yul\":17109:17113   */\n      dup2\n        /* \"#utility.yul\":16983:17114   */\n      tag_472\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":16975:17114   */\n      swap1\n      pop\n        /* \"#utility.yul\":16702:17121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17127:17305   */\n    tag_473:\n        /* \"#utility.yul\":17267:17297   */\n      0x496e73756666696369656e742062616c616e636520746f206c6f636b00000000\n        /* \"#utility.yul\":17263:17264   */\n      0x00\n        /* \"#utility.yul\":17255:17261   */\n      dup3\n        /* \"#utility.yul\":17251:17265   */\n      add\n        /* \"#utility.yul\":17244:17298   */\n      mstore\n        /* \"#utility.yul\":17127:17305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17311:17677   */\n    tag_474:\n        /* \"#utility.yul\":17453:17456   */\n      0x00\n        /* \"#utility.yul\":17474:17541   */\n      tag_673\n        /* \"#utility.yul\":17538:17540   */\n      0x1c\n        /* \"#utility.yul\":17533:17536   */\n      dup4\n        /* \"#utility.yul\":17474:17541   */\n      tag_434\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":17467:17541   */\n      swap2\n      pop\n        /* \"#utility.yul\":17550:17643   */\n      tag_674\n        /* \"#utility.yul\":17639:17642   */\n      dup3\n        /* \"#utility.yul\":17550:17643   */\n      tag_473\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":17668:17670   */\n      0x20\n        /* \"#utility.yul\":17663:17666   */\n      dup3\n        /* \"#utility.yul\":17659:17671   */\n      add\n        /* \"#utility.yul\":17652:17671   */\n      swap1\n      pop\n        /* \"#utility.yul\":17311:17677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17683:18102   */\n    tag_241:\n        /* \"#utility.yul\":17849:17853   */\n      0x00\n        /* \"#utility.yul\":17887:17889   */\n      0x20\n        /* \"#utility.yul\":17876:17885   */\n      dup3\n        /* \"#utility.yul\":17872:17890   */\n      add\n        /* \"#utility.yul\":17864:17890   */\n      swap1\n      pop\n        /* \"#utility.yul\":17936:17945   */\n      dup2\n        /* \"#utility.yul\":17930:17934   */\n      dup2\n        /* \"#utility.yul\":17926:17946   */\n      sub\n        /* \"#utility.yul\":17922:17923   */\n      0x00\n        /* \"#utility.yul\":17911:17920   */\n      dup4\n        /* \"#utility.yul\":17907:17924   */\n      add\n        /* \"#utility.yul\":17900:17947   */\n      mstore\n        /* \"#utility.yul\":17964:18095   */\n      tag_676\n        /* \"#utility.yul\":18090:18094   */\n      dup2\n        /* \"#utility.yul\":17964:18095   */\n      tag_474\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":17956:18095   */\n      swap1\n      pop\n        /* \"#utility.yul\":17683:18102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18108:18286   */\n    tag_475:\n        /* \"#utility.yul\":18248:18278   */\n      0x43616c6c6572206973206e6f7420612067616d65206d616e6167657200000000\n        /* \"#utility.yul\":18244:18245   */\n      0x00\n        /* \"#utility.yul\":18236:18242   */\n      dup3\n        /* \"#utility.yul\":18232:18246   */\n      add\n        /* \"#utility.yul\":18225:18279   */\n      mstore\n        /* \"#utility.yul\":18108:18286   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18292:18658   */\n    tag_476:\n        /* \"#utility.yul\":18434:18437   */\n      0x00\n        /* \"#utility.yul\":18455:18522   */\n      tag_679\n        /* \"#utility.yul\":18519:18521   */\n      0x1c\n        /* \"#utility.yul\":18514:18517   */\n      dup4\n        /* \"#utility.yul\":18455:18522   */\n      tag_434\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":18448:18522   */\n      swap2\n      pop\n        /* \"#utility.yul\":18531:18624   */\n      tag_680\n        /* \"#utility.yul\":18620:18623   */\n      dup3\n        /* \"#utility.yul\":18531:18624   */\n      tag_475\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":18649:18651   */\n      0x20\n        /* \"#utility.yul\":18644:18647   */\n      dup3\n        /* \"#utility.yul\":18640:18652   */\n      add\n        /* \"#utility.yul\":18633:18652   */\n      swap1\n      pop\n        /* \"#utility.yul\":18292:18658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18664:19083   */\n    tag_263:\n        /* \"#utility.yul\":18830:18834   */\n      0x00\n        /* \"#utility.yul\":18868:18870   */\n      0x20\n        /* \"#utility.yul\":18857:18866   */\n      dup3\n        /* \"#utility.yul\":18853:18871   */\n      add\n        /* \"#utility.yul\":18845:18871   */\n      swap1\n      pop\n        /* \"#utility.yul\":18917:18926   */\n      dup2\n        /* \"#utility.yul\":18911:18915   */\n      dup2\n        /* \"#utility.yul\":18907:18927   */\n      sub\n        /* \"#utility.yul\":18903:18904   */\n      0x00\n        /* \"#utility.yul\":18892:18901   */\n      dup4\n        /* \"#utility.yul\":18888:18905   */\n      add\n        /* \"#utility.yul\":18881:18928   */\n      mstore\n        /* \"#utility.yul\":18945:19076   */\n      tag_682\n        /* \"#utility.yul\":19071:19075   */\n      dup2\n        /* \"#utility.yul\":18945:19076   */\n      tag_476\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":18937:19076   */\n      swap1\n      pop\n        /* \"#utility.yul\":18664:19083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19089:19268   */\n    tag_477:\n        /* \"#utility.yul\":19229:19260   */\n      0x43616e6e6f74206275726e2066726f6d207a65726f2061646472657373000000\n        /* \"#utility.yul\":19225:19226   */\n      0x00\n        /* \"#utility.yul\":19217:19223   */\n      dup3\n        /* \"#utility.yul\":19213:19227   */\n      add\n        /* \"#utility.yul\":19206:19261   */\n      mstore\n        /* \"#utility.yul\":19089:19268   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19274:19640   */\n    tag_478:\n        /* \"#utility.yul\":19416:19419   */\n      0x00\n        /* \"#utility.yul\":19437:19504   */\n      tag_685\n        /* \"#utility.yul\":19501:19503   */\n      0x1d\n        /* \"#utility.yul\":19496:19499   */\n      dup4\n        /* \"#utility.yul\":19437:19504   */\n      tag_434\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":19430:19504   */\n      swap2\n      pop\n        /* \"#utility.yul\":19513:19606   */\n      tag_686\n        /* \"#utility.yul\":19602:19605   */\n      dup3\n        /* \"#utility.yul\":19513:19606   */\n      tag_477\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":19631:19633   */\n      0x20\n        /* \"#utility.yul\":19626:19629   */\n      dup3\n        /* \"#utility.yul\":19622:19634   */\n      add\n        /* \"#utility.yul\":19615:19634   */\n      swap1\n      pop\n        /* \"#utility.yul\":19274:19640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19646:20065   */\n    tag_269:\n        /* \"#utility.yul\":19812:19816   */\n      0x00\n        /* \"#utility.yul\":19850:19852   */\n      0x20\n        /* \"#utility.yul\":19839:19848   */\n      dup3\n        /* \"#utility.yul\":19835:19853   */\n      add\n        /* \"#utility.yul\":19827:19853   */\n      swap1\n      pop\n        /* \"#utility.yul\":19899:19908   */\n      dup2\n        /* \"#utility.yul\":19893:19897   */\n      dup2\n        /* \"#utility.yul\":19889:19909   */\n      sub\n        /* \"#utility.yul\":19885:19886   */\n      0x00\n        /* \"#utility.yul\":19874:19883   */\n      dup4\n        /* \"#utility.yul\":19870:19887   */\n      add\n        /* \"#utility.yul\":19863:19910   */\n      mstore\n        /* \"#utility.yul\":19927:20058   */\n      tag_688\n        /* \"#utility.yul\":20053:20057   */\n      dup2\n        /* \"#utility.yul\":19927:20058   */\n      tag_478\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":19919:20058   */\n      swap1\n      pop\n        /* \"#utility.yul\":19646:20065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20071:20249   */\n    tag_479:\n        /* \"#utility.yul\":20211:20241   */\n      0x496e73756666696369656e742062616c616e636520746f206275726e00000000\n        /* \"#utility.yul\":20207:20208   */\n      0x00\n        /* \"#utility.yul\":20199:20205   */\n      dup3\n        /* \"#utility.yul\":20195:20209   */\n      add\n        /* \"#utility.yul\":20188:20242   */\n      mstore\n        /* \"#utility.yul\":20071:20249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20255:20621   */\n    tag_480:\n        /* \"#utility.yul\":20397:20400   */\n      0x00\n        /* \"#utility.yul\":20418:20485   */\n      tag_691\n        /* \"#utility.yul\":20482:20484   */\n      0x1c\n        /* \"#utility.yul\":20477:20480   */\n      dup4\n        /* \"#utility.yul\":20418:20485   */\n      tag_434\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":20411:20485   */\n      swap2\n      pop\n        /* \"#utility.yul\":20494:20587   */\n      tag_692\n        /* \"#utility.yul\":20583:20586   */\n      dup3\n        /* \"#utility.yul\":20494:20587   */\n      tag_479\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":20612:20614   */\n      0x20\n        /* \"#utility.yul\":20607:20610   */\n      dup3\n        /* \"#utility.yul\":20603:20615   */\n      add\n        /* \"#utility.yul\":20596:20615   */\n      swap1\n      pop\n        /* \"#utility.yul\":20255:20621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20627:21046   */\n    tag_273:\n        /* \"#utility.yul\":20793:20797   */\n      0x00\n        /* \"#utility.yul\":20831:20833   */\n      0x20\n        /* \"#utility.yul\":20820:20829   */\n      dup3\n        /* \"#utility.yul\":20816:20834   */\n      add\n        /* \"#utility.yul\":20808:20834   */\n      swap1\n      pop\n        /* \"#utility.yul\":20880:20889   */\n      dup2\n        /* \"#utility.yul\":20874:20878   */\n      dup2\n        /* \"#utility.yul\":20870:20890   */\n      sub\n        /* \"#utility.yul\":20866:20867   */\n      0x00\n        /* \"#utility.yul\":20855:20864   */\n      dup4\n        /* \"#utility.yul\":20851:20868   */\n      add\n        /* \"#utility.yul\":20844:20891   */\n      mstore\n        /* \"#utility.yul\":20908:21039   */\n      tag_694\n        /* \"#utility.yul\":21034:21038   */\n      dup2\n        /* \"#utility.yul\":20908:21039   */\n      tag_480\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":20900:21039   */\n      swap1\n      pop\n        /* \"#utility.yul\":20627:21046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21052:21221   */\n    tag_481:\n        /* \"#utility.yul\":21192:21213   */\n      0x47616d65206d656368616e696373206275726e00000000000000000000000000\n        /* \"#utility.yul\":21188:21189   */\n      0x00\n        /* \"#utility.yul\":21180:21186   */\n      dup3\n        /* \"#utility.yul\":21176:21190   */\n      add\n        /* \"#utility.yul\":21169:21214   */\n      mstore\n        /* \"#utility.yul\":21052:21221   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21227:21593   */\n    tag_482:\n        /* \"#utility.yul\":21369:21372   */\n      0x00\n        /* \"#utility.yul\":21390:21457   */\n      tag_697\n        /* \"#utility.yul\":21454:21456   */\n      0x13\n        /* \"#utility.yul\":21449:21452   */\n      dup4\n        /* \"#utility.yul\":21390:21457   */\n      tag_434\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":21383:21457   */\n      swap2\n      pop\n        /* \"#utility.yul\":21466:21559   */\n      tag_698\n        /* \"#utility.yul\":21555:21558   */\n      dup3\n        /* \"#utility.yul\":21466:21559   */\n      tag_481\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":21584:21586   */\n      0x20\n        /* \"#utility.yul\":21579:21582   */\n      dup3\n        /* \"#utility.yul\":21575:21587   */\n      add\n        /* \"#utility.yul\":21568:21587   */\n      swap1\n      pop\n        /* \"#utility.yul\":21227:21593   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21599:22128   */\n    tag_277:\n        /* \"#utility.yul\":21793:21797   */\n      0x00\n        /* \"#utility.yul\":21831:21833   */\n      0x40\n        /* \"#utility.yul\":21820:21829   */\n      dup3\n        /* \"#utility.yul\":21816:21834   */\n      add\n        /* \"#utility.yul\":21808:21834   */\n      swap1\n      pop\n        /* \"#utility.yul\":21844:21915   */\n      tag_700\n        /* \"#utility.yul\":21912:21913   */\n      0x00\n        /* \"#utility.yul\":21901:21910   */\n      dup4\n        /* \"#utility.yul\":21897:21914   */\n      add\n        /* \"#utility.yul\":21888:21894   */\n      dup5\n        /* \"#utility.yul\":21844:21915   */\n      tag_445\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":21962:21971   */\n      dup2\n        /* \"#utility.yul\":21956:21960   */\n      dup2\n        /* \"#utility.yul\":21952:21972   */\n      sub\n        /* \"#utility.yul\":21947:21949   */\n      0x20\n        /* \"#utility.yul\":21936:21945   */\n      dup4\n        /* \"#utility.yul\":21932:21950   */\n      add\n        /* \"#utility.yul\":21925:21973   */\n      mstore\n        /* \"#utility.yul\":21990:22121   */\n      tag_701\n        /* \"#utility.yul\":22116:22120   */\n      dup2\n        /* \"#utility.yul\":21990:22121   */\n      tag_482\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":21982:22121   */\n      swap1\n      pop\n        /* \"#utility.yul\":21599:22128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22134:22310   */\n    tag_483:\n        /* \"#utility.yul\":22274:22302   */\n      0x43616e6e6f7420726577617264207a65726f2061646472657373000000000000\n        /* \"#utility.yul\":22270:22271   */\n      0x00\n        /* \"#utility.yul\":22262:22268   */\n      dup3\n        /* \"#utility.yul\":22258:22272   */\n      add\n        /* \"#utility.yul\":22251:22303   */\n      mstore\n        /* \"#utility.yul\":22134:22310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22316:22682   */\n    tag_484:\n        /* \"#utility.yul\":22458:22461   */\n      0x00\n        /* \"#utility.yul\":22479:22546   */\n      tag_704\n        /* \"#utility.yul\":22543:22545   */\n      0x1a\n        /* \"#utility.yul\":22538:22541   */\n      dup4\n        /* \"#utility.yul\":22479:22546   */\n      tag_434\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":22472:22546   */\n      swap2\n      pop\n        /* \"#utility.yul\":22555:22648   */\n      tag_705\n        /* \"#utility.yul\":22644:22647   */\n      dup3\n        /* \"#utility.yul\":22555:22648   */\n      tag_483\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":22673:22675   */\n      0x20\n        /* \"#utility.yul\":22668:22671   */\n      dup3\n        /* \"#utility.yul\":22664:22676   */\n      add\n        /* \"#utility.yul\":22657:22676   */\n      swap1\n      pop\n        /* \"#utility.yul\":22316:22682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22688:23107   */\n    tag_303:\n        /* \"#utility.yul\":22854:22858   */\n      0x00\n        /* \"#utility.yul\":22892:22894   */\n      0x20\n        /* \"#utility.yul\":22881:22890   */\n      dup3\n        /* \"#utility.yul\":22877:22895   */\n      add\n        /* \"#utility.yul\":22869:22895   */\n      swap1\n      pop\n        /* \"#utility.yul\":22941:22950   */\n      dup2\n        /* \"#utility.yul\":22935:22939   */\n      dup2\n        /* \"#utility.yul\":22931:22951   */\n      sub\n        /* \"#utility.yul\":22927:22928   */\n      0x00\n        /* \"#utility.yul\":22916:22925   */\n      dup4\n        /* \"#utility.yul\":22912:22929   */\n      add\n        /* \"#utility.yul\":22905:22952   */\n      mstore\n        /* \"#utility.yul\":22969:23100   */\n      tag_707\n        /* \"#utility.yul\":23095:23099   */\n      dup2\n        /* \"#utility.yul\":22969:23100   */\n      tag_484\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":22961:23100   */\n      swap1\n      pop\n        /* \"#utility.yul\":22688:23107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23113:23536   */\n    tag_310:\n        /* \"#utility.yul\":23254:23258   */\n      0x00\n        /* \"#utility.yul\":23292:23294   */\n      0x40\n        /* \"#utility.yul\":23281:23290   */\n      dup3\n        /* \"#utility.yul\":23277:23295   */\n      add\n        /* \"#utility.yul\":23269:23295   */\n      swap1\n      pop\n        /* \"#utility.yul\":23305:23376   */\n      tag_709\n        /* \"#utility.yul\":23373:23374   */\n      0x00\n        /* \"#utility.yul\":23362:23371   */\n      dup4\n        /* \"#utility.yul\":23358:23375   */\n      add\n        /* \"#utility.yul\":23349:23355   */\n      dup6\n        /* \"#utility.yul\":23305:23376   */\n      tag_445\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":23423:23432   */\n      dup2\n        /* \"#utility.yul\":23417:23421   */\n      dup2\n        /* \"#utility.yul\":23413:23433   */\n      sub\n        /* \"#utility.yul\":23408:23410   */\n      0x20\n        /* \"#utility.yul\":23397:23406   */\n      dup4\n        /* \"#utility.yul\":23393:23411   */\n      add\n        /* \"#utility.yul\":23386:23434   */\n      mstore\n        /* \"#utility.yul\":23451:23529   */\n      tag_710\n        /* \"#utility.yul\":23524:23528   */\n      dup2\n        /* \"#utility.yul\":23515:23521   */\n      dup5\n        /* \"#utility.yul\":23451:23529   */\n      tag_437\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":23443:23529   */\n      swap1\n      pop\n        /* \"#utility.yul\":23113:23536   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23542:23708   */\n    tag_485:\n        /* \"#utility.yul\":23682:23700   */\n      0x4e6f20746f6b656e73206c6f636b656400000000000000000000000000000000\n        /* \"#utility.yul\":23678:23679   */\n      0x00\n        /* \"#utility.yul\":23670:23676   */\n      dup3\n        /* \"#utility.yul\":23666:23680   */\n      add\n        /* \"#utility.yul\":23659:23701   */\n      mstore\n        /* \"#utility.yul\":23542:23708   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23714:24080   */\n    tag_486:\n        /* \"#utility.yul\":23856:23859   */\n      0x00\n        /* \"#utility.yul\":23877:23944   */\n      tag_713\n        /* \"#utility.yul\":23941:23943   */\n      0x10\n        /* \"#utility.yul\":23936:23939   */\n      dup4\n        /* \"#utility.yul\":23877:23944   */\n      tag_434\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":23870:23944   */\n      swap2\n      pop\n        /* \"#utility.yul\":23953:24046   */\n      tag_714\n        /* \"#utility.yul\":24042:24045   */\n      dup3\n        /* \"#utility.yul\":23953:24046   */\n      tag_485\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":24071:24073   */\n      0x20\n        /* \"#utility.yul\":24066:24069   */\n      dup3\n        /* \"#utility.yul\":24062:24074   */\n      add\n        /* \"#utility.yul\":24055:24074   */\n      swap1\n      pop\n        /* \"#utility.yul\":23714:24080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24086:24505   */\n    tag_320:\n        /* \"#utility.yul\":24252:24256   */\n      0x00\n        /* \"#utility.yul\":24290:24292   */\n      0x20\n        /* \"#utility.yul\":24279:24288   */\n      dup3\n        /* \"#utility.yul\":24275:24293   */\n      add\n        /* \"#utility.yul\":24267:24293   */\n      swap1\n      pop\n        /* \"#utility.yul\":24339:24348   */\n      dup2\n        /* \"#utility.yul\":24333:24337   */\n      dup2\n        /* \"#utility.yul\":24329:24349   */\n      sub\n        /* \"#utility.yul\":24325:24326   */\n      0x00\n        /* \"#utility.yul\":24314:24323   */\n      dup4\n        /* \"#utility.yul\":24310:24327   */\n      add\n        /* \"#utility.yul\":24303:24350   */\n      mstore\n        /* \"#utility.yul\":24367:24498   */\n      tag_716\n        /* \"#utility.yul\":24493:24497   */\n      dup2\n        /* \"#utility.yul\":24367:24498   */\n      tag_486\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":24359:24498   */\n      swap1\n      pop\n        /* \"#utility.yul\":24086:24505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24511:24680   */\n    tag_487:\n        /* \"#utility.yul\":24651:24672   */\n      0x546f6b656e73207374696c6c206c6f636b656400000000000000000000000000\n        /* \"#utility.yul\":24647:24648   */\n      0x00\n        /* \"#utility.yul\":24639:24645   */\n      dup3\n        /* \"#utility.yul\":24635:24649   */\n      add\n        /* \"#utility.yul\":24628:24673   */\n      mstore\n        /* \"#utility.yul\":24511:24680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24686:25052   */\n    tag_488:\n        /* \"#utility.yul\":24828:24831   */\n      0x00\n        /* \"#utility.yul\":24849:24916   */\n      tag_719\n        /* \"#utility.yul\":24913:24915   */\n      0x13\n        /* \"#utility.yul\":24908:24911   */\n      dup4\n        /* \"#utility.yul\":24849:24916   */\n      tag_434\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":24842:24916   */\n      swap2\n      pop\n        /* \"#utility.yul\":24925:25018   */\n      tag_720\n        /* \"#utility.yul\":25014:25017   */\n      dup3\n        /* \"#utility.yul\":24925:25018   */\n      tag_487\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":25043:25045   */\n      0x20\n        /* \"#utility.yul\":25038:25041   */\n      dup3\n        /* \"#utility.yul\":25034:25046   */\n      add\n        /* \"#utility.yul\":25027:25046   */\n      swap1\n      pop\n        /* \"#utility.yul\":24686:25052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25058:25477   */\n    tag_324:\n        /* \"#utility.yul\":25224:25228   */\n      0x00\n        /* \"#utility.yul\":25262:25264   */\n      0x20\n        /* \"#utility.yul\":25251:25260   */\n      dup3\n        /* \"#utility.yul\":25247:25265   */\n      add\n        /* \"#utility.yul\":25239:25265   */\n      swap1\n      pop\n        /* \"#utility.yul\":25311:25320   */\n      dup2\n        /* \"#utility.yul\":25305:25309   */\n      dup2\n        /* \"#utility.yul\":25301:25321   */\n      sub\n        /* \"#utility.yul\":25297:25298   */\n      0x00\n        /* \"#utility.yul\":25286:25295   */\n      dup4\n        /* \"#utility.yul\":25282:25299   */\n      add\n        /* \"#utility.yul\":25275:25322   */\n      mstore\n        /* \"#utility.yul\":25339:25470   */\n      tag_722\n        /* \"#utility.yul\":25465:25469   */\n      dup2\n        /* \"#utility.yul\":25339:25470   */\n      tag_488\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":25331:25470   */\n      swap1\n      pop\n        /* \"#utility.yul\":25058:25477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25483:25649   */\n    tag_489:\n        /* \"#utility.yul\":25623:25641   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":25619:25620   */\n      0x00\n        /* \"#utility.yul\":25611:25617   */\n      dup3\n        /* \"#utility.yul\":25607:25621   */\n      add\n        /* \"#utility.yul\":25600:25642   */\n      mstore\n        /* \"#utility.yul\":25483:25649   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25655:26021   */\n    tag_490:\n        /* \"#utility.yul\":25797:25800   */\n      0x00\n        /* \"#utility.yul\":25818:25885   */\n      tag_725\n        /* \"#utility.yul\":25882:25884   */\n      0x10\n        /* \"#utility.yul\":25877:25880   */\n      dup4\n        /* \"#utility.yul\":25818:25885   */\n      tag_434\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":25811:25885   */\n      swap2\n      pop\n        /* \"#utility.yul\":25894:25987   */\n      tag_726\n        /* \"#utility.yul\":25983:25986   */\n      dup3\n        /* \"#utility.yul\":25894:25987   */\n      tag_489\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":26012:26014   */\n      0x20\n        /* \"#utility.yul\":26007:26010   */\n      dup3\n        /* \"#utility.yul\":26003:26015   */\n      add\n        /* \"#utility.yul\":25996:26015   */\n      swap1\n      pop\n        /* \"#utility.yul\":25655:26021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26027:26446   */\n    tag_336:\n        /* \"#utility.yul\":26193:26197   */\n      0x00\n        /* \"#utility.yul\":26231:26233   */\n      0x20\n        /* \"#utility.yul\":26220:26229   */\n      dup3\n        /* \"#utility.yul\":26216:26234   */\n      add\n        /* \"#utility.yul\":26208:26234   */\n      swap1\n      pop\n        /* \"#utility.yul\":26280:26289   */\n      dup2\n        /* \"#utility.yul\":26274:26278   */\n      dup2\n        /* \"#utility.yul\":26270:26290   */\n      sub\n        /* \"#utility.yul\":26266:26267   */\n      0x00\n        /* \"#utility.yul\":26255:26264   */\n      dup4\n        /* \"#utility.yul\":26251:26268   */\n      add\n        /* \"#utility.yul\":26244:26291   */\n      mstore\n        /* \"#utility.yul\":26308:26439   */\n      tag_728\n        /* \"#utility.yul\":26434:26438   */\n      dup2\n        /* \"#utility.yul\":26308:26439   */\n      tag_490\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":26300:26439   */\n      swap1\n      pop\n        /* \"#utility.yul\":26027:26446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26452:26570   */\n    tag_491:\n        /* \"#utility.yul\":26539:26563   */\n      tag_730\n        /* \"#utility.yul\":26557:26562   */\n      dup2\n        /* \"#utility.yul\":26539:26563   */\n      tag_439\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":26534:26537   */\n      dup3\n        /* \"#utility.yul\":26527:26564   */\n      mstore\n        /* \"#utility.yul\":26452:26570   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26576:26798   */\n    tag_363:\n        /* \"#utility.yul\":26669:26673   */\n      0x00\n        /* \"#utility.yul\":26707:26709   */\n      0x20\n        /* \"#utility.yul\":26696:26705   */\n      dup3\n        /* \"#utility.yul\":26692:26710   */\n      add\n        /* \"#utility.yul\":26684:26710   */\n      swap1\n      pop\n        /* \"#utility.yul\":26720:26791   */\n      tag_732\n        /* \"#utility.yul\":26788:26789   */\n      0x00\n        /* \"#utility.yul\":26777:26786   */\n      dup4\n        /* \"#utility.yul\":26773:26790   */\n      add\n        /* \"#utility.yul\":26764:26770   */\n      dup5\n        /* \"#utility.yul\":26720:26791   */\n      tag_491\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":26576:26798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26804:26985   */\n    tag_492:\n        /* \"#utility.yul\":26944:26977   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":26940:26941   */\n      0x00\n        /* \"#utility.yul\":26932:26938   */\n      dup3\n        /* \"#utility.yul\":26928:26942   */\n      add\n        /* \"#utility.yul\":26921:26978   */\n      mstore\n        /* \"#utility.yul\":26804:26985   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26991:27357   */\n    tag_493:\n        /* \"#utility.yul\":27133:27136   */\n      0x00\n        /* \"#utility.yul\":27154:27221   */\n      tag_735\n        /* \"#utility.yul\":27218:27220   */\n      0x1f\n        /* \"#utility.yul\":27213:27216   */\n      dup4\n        /* \"#utility.yul\":27154:27221   */\n      tag_434\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":27147:27221   */\n      swap2\n      pop\n        /* \"#utility.yul\":27230:27323   */\n      tag_736\n        /* \"#utility.yul\":27319:27322   */\n      dup3\n        /* \"#utility.yul\":27230:27323   */\n      tag_492\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":27348:27350   */\n      0x20\n        /* \"#utility.yul\":27343:27346   */\n      dup3\n        /* \"#utility.yul\":27339:27351   */\n      add\n        /* \"#utility.yul\":27332:27351   */\n      swap1\n      pop\n        /* \"#utility.yul\":26991:27357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27363:27782   */\n    tag_372:\n        /* \"#utility.yul\":27529:27533   */\n      0x00\n        /* \"#utility.yul\":27567:27569   */\n      0x20\n        /* \"#utility.yul\":27556:27565   */\n      dup3\n        /* \"#utility.yul\":27552:27570   */\n      add\n        /* \"#utility.yul\":27544:27570   */\n      swap1\n      pop\n        /* \"#utility.yul\":27616:27625   */\n      dup2\n        /* \"#utility.yul\":27610:27614   */\n      dup2\n        /* \"#utility.yul\":27606:27626   */\n      sub\n        /* \"#utility.yul\":27602:27603   */\n      0x00\n        /* \"#utility.yul\":27591:27600   */\n      dup4\n        /* \"#utility.yul\":27587:27604   */\n      add\n        /* \"#utility.yul\":27580:27627   */\n      mstore\n        /* \"#utility.yul\":27644:27775   */\n      tag_738\n        /* \"#utility.yul\":27770:27774   */\n      dup2\n        /* \"#utility.yul\":27644:27775   */\n      tag_493\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":27636:27775   */\n      swap1\n      pop\n        /* \"#utility.yul\":27363:27782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27788:28230   */\n    tag_398:\n        /* \"#utility.yul\":27937:27941   */\n      0x00\n        /* \"#utility.yul\":27975:27977   */\n      0x60\n        /* \"#utility.yul\":27964:27973   */\n      dup3\n        /* \"#utility.yul\":27960:27978   */\n      add\n        /* \"#utility.yul\":27952:27978   */\n      swap1\n      pop\n        /* \"#utility.yul\":27988:28059   */\n      tag_740\n        /* \"#utility.yul\":28056:28057   */\n      0x00\n        /* \"#utility.yul\":28045:28054   */\n      dup4\n        /* \"#utility.yul\":28041:28058   */\n      add\n        /* \"#utility.yul\":28032:28038   */\n      dup7\n        /* \"#utility.yul\":27988:28059   */\n      tag_491\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":28069:28141   */\n      tag_741\n        /* \"#utility.yul\":28137:28139   */\n      0x20\n        /* \"#utility.yul\":28126:28135   */\n      dup4\n        /* \"#utility.yul\":28122:28140   */\n      add\n        /* \"#utility.yul\":28113:28119   */\n      dup6\n        /* \"#utility.yul\":28069:28141   */\n      tag_445\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":28151:28223   */\n      tag_742\n        /* \"#utility.yul\":28219:28221   */\n      0x40\n        /* \"#utility.yul\":28208:28217   */\n      dup4\n        /* \"#utility.yul\":28204:28222   */\n      add\n        /* \"#utility.yul\":28195:28201   */\n      dup5\n        /* \"#utility.yul\":28151:28223   */\n      tag_445\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":27788:28230   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28236:28568   */\n    tag_410:\n        /* \"#utility.yul\":28357:28361   */\n      0x00\n        /* \"#utility.yul\":28395:28397   */\n      0x40\n        /* \"#utility.yul\":28384:28393   */\n      dup3\n        /* \"#utility.yul\":28380:28398   */\n      add\n        /* \"#utility.yul\":28372:28398   */\n      swap1\n      pop\n        /* \"#utility.yul\":28408:28479   */\n      tag_744\n        /* \"#utility.yul\":28476:28477   */\n      0x00\n        /* \"#utility.yul\":28465:28474   */\n      dup4\n        /* \"#utility.yul\":28461:28478   */\n      add\n        /* \"#utility.yul\":28452:28458   */\n      dup6\n        /* \"#utility.yul\":28408:28479   */\n      tag_491\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":28489:28561   */\n      tag_745\n        /* \"#utility.yul\":28557:28559   */\n      0x20\n        /* \"#utility.yul\":28546:28555   */\n      dup4\n        /* \"#utility.yul\":28542:28560   */\n      add\n        /* \"#utility.yul\":28533:28539   */\n      dup5\n        /* \"#utility.yul\":28489:28561   */\n      tag_449\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":28236:28568   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28574:28744   */\n    tag_494:\n        /* \"#utility.yul\":28714:28736   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":28710:28711   */\n      0x00\n        /* \"#utility.yul\":28702:28708   */\n      dup3\n        /* \"#utility.yul\":28698:28712   */\n      add\n        /* \"#utility.yul\":28691:28737   */\n      mstore\n        /* \"#utility.yul\":28574:28744   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28750:29116   */\n    tag_495:\n        /* \"#utility.yul\":28892:28895   */\n      0x00\n        /* \"#utility.yul\":28913:28980   */\n      tag_748\n        /* \"#utility.yul\":28977:28979   */\n      0x14\n        /* \"#utility.yul\":28972:28975   */\n      dup4\n        /* \"#utility.yul\":28913:28980   */\n      tag_434\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":28906:28980   */\n      swap2\n      pop\n        /* \"#utility.yul\":28989:29082   */\n      tag_749\n        /* \"#utility.yul\":29078:29081   */\n      dup3\n        /* \"#utility.yul\":28989:29082   */\n      tag_494\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":29107:29109   */\n      0x20\n        /* \"#utility.yul\":29102:29105   */\n      dup3\n        /* \"#utility.yul\":29098:29110   */\n      add\n        /* \"#utility.yul\":29091:29110   */\n      swap1\n      pop\n        /* \"#utility.yul\":28750:29116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29122:29541   */\n    tag_415:\n        /* \"#utility.yul\":29288:29292   */\n      0x00\n        /* \"#utility.yul\":29326:29328   */\n      0x20\n        /* \"#utility.yul\":29315:29324   */\n      dup3\n        /* \"#utility.yul\":29311:29329   */\n      add\n        /* \"#utility.yul\":29303:29329   */\n      swap1\n      pop\n        /* \"#utility.yul\":29375:29384   */\n      dup2\n        /* \"#utility.yul\":29369:29373   */\n      dup2\n        /* \"#utility.yul\":29365:29385   */\n      sub\n        /* \"#utility.yul\":29361:29362   */\n      0x00\n        /* \"#utility.yul\":29350:29359   */\n      dup4\n        /* \"#utility.yul\":29346:29363   */\n      add\n        /* \"#utility.yul\":29339:29386   */\n      mstore\n        /* \"#utility.yul\":29403:29534   */\n      tag_751\n        /* \"#utility.yul\":29529:29533   */\n      dup2\n        /* \"#utility.yul\":29403:29534   */\n      tag_495\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":29395:29534   */\n      swap1\n      pop\n        /* \"#utility.yul\":29122:29541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f3d22d095fd0518dbec04174f58017e74d524cf9f47ff75b19d8d6c9eddc6f464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1458": {
									"entryPoint": null,
									"id": 1458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_542": {
									"entryPoint": null,
									"id": 542,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_642": {
									"entryPoint": null,
									"id": 642,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 215,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1319": {
									"entryPoint": 561,
									"id": 1319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 461,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:12",
										"nodeType": "YulBlock",
										"src": "0:5231:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "140:152:12",
													"nodeType": "YulBlock",
													"src": "140:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:12",
																		"nodeType": "YulLiteral",
																		"src": "157:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:12",
																		"nodeType": "YulLiteral",
																		"src": "160:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:12"
																},
																"nativeSrc": "150:88:12",
																"nodeType": "YulFunctionCall",
																"src": "150:88:12"
															},
															"nativeSrc": "150:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:12",
																		"nodeType": "YulLiteral",
																		"src": "254:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:12",
																		"nodeType": "YulLiteral",
																		"src": "257:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:12"
																},
																"nativeSrc": "247:15:12",
																"nodeType": "YulFunctionCall",
																"src": "247:15:12"
															},
															"nativeSrc": "247:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:12",
																		"nodeType": "YulLiteral",
																		"src": "281:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:12"
																},
																"nativeSrc": "271:15:12",
																"nodeType": "YulFunctionCall",
																"src": "271:15:12"
															},
															"nativeSrc": "271:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:12"
											},
											{
												"body": {
													"nativeSrc": "326:152:12",
													"nodeType": "YulBlock",
													"src": "326:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:12",
																		"nodeType": "YulLiteral",
																		"src": "346:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:12"
																},
																"nativeSrc": "336:88:12",
																"nodeType": "YulFunctionCall",
																"src": "336:88:12"
															},
															"nativeSrc": "336:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:12",
																		"nodeType": "YulLiteral",
																		"src": "443:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:15:12",
																"nodeType": "YulFunctionCall",
																"src": "433:15:12"
															},
															"nativeSrc": "433:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:12",
																		"nodeType": "YulLiteral",
																		"src": "464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:12",
																		"nodeType": "YulLiteral",
																		"src": "467:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																},
																"nativeSrc": "457:15:12",
																"nodeType": "YulFunctionCall",
																"src": "457:15:12"
															},
															"nativeSrc": "457:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:12"
											},
											{
												"body": {
													"nativeSrc": "535:269:12",
													"nodeType": "YulBlock",
													"src": "535:269:12",
													"statements": [
														{
															"nativeSrc": "545:22:12",
															"nodeType": "YulAssignment",
															"src": "545:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "565:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:12"
																},
																"nativeSrc": "555:12:12",
																"nodeType": "YulFunctionCall",
																"src": "555:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:12"
																}
															]
														},
														{
															"nativeSrc": "576:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "612:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:12"
																},
																"nativeSrc": "602:12:12",
																"nodeType": "YulFunctionCall",
																"src": "602:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:12",
																	"nodeType": "YulTypedName",
																	"src": "580:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:12",
																"nodeType": "YulBlock",
																"src": "653:51:12",
																"statements": [
																	{
																		"nativeSrc": "667:27:12",
																		"nodeType": "YulAssignment",
																		"src": "667:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:12",
																					"nodeType": "YulLiteral",
																					"src": "689:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:12"
																			},
																			"nativeSrc": "677:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:12"
																},
																"nativeSrc": "626:26:12",
																"nodeType": "YulFunctionCall",
																"src": "626:26:12"
															},
															"nativeSrc": "623:81:12",
															"nodeType": "YulIf",
															"src": "623:81:12"
														},
														{
															"body": {
																"nativeSrc": "756:42:12",
																"nodeType": "YulBlock",
																"src": "756:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:12"
																			},
																			"nativeSrc": "770:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:12"
																		},
																		"nativeSrc": "770:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:12",
																				"nodeType": "YulLiteral",
																				"src": "751:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:12"
																		},
																		"nativeSrc": "740:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:12"
																},
																"nativeSrc": "717:38:12",
																"nodeType": "YulFunctionCall",
																"src": "717:38:12"
															},
															"nativeSrc": "714:84:12",
															"nodeType": "YulIf",
															"src": "714:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:12",
														"nodeType": "YulTypedName",
														"src": "519:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:12",
														"nodeType": "YulTypedName",
														"src": "528:6:12",
														"type": ""
													}
												],
												"src": "484:320:12"
											},
											{
												"body": {
													"nativeSrc": "864:87:12",
													"nodeType": "YulBlock",
													"src": "864:87:12",
													"statements": [
														{
															"nativeSrc": "874:11:12",
															"nodeType": "YulAssignment",
															"src": "874:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:12",
																"nodeType": "YulIdentifier",
																"src": "882:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:12",
																		"nodeType": "YulLiteral",
																		"src": "902:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:12"
																},
																"nativeSrc": "895:14:12",
																"nodeType": "YulFunctionCall",
																"src": "895:14:12"
															},
															"nativeSrc": "895:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:12"
														},
														{
															"nativeSrc": "918:26:12",
															"nodeType": "YulAssignment",
															"src": "918:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "936:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:12",
																		"nodeType": "YulLiteral",
																		"src": "939:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:12"
																},
																"nativeSrc": "926:18:12",
																"nodeType": "YulFunctionCall",
																"src": "926:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:12",
														"nodeType": "YulTypedName",
														"src": "851:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:12",
														"nodeType": "YulTypedName",
														"src": "859:4:12",
														"type": ""
													}
												],
												"src": "810:141:12"
											},
											{
												"body": {
													"nativeSrc": "1001:49:12",
													"nodeType": "YulBlock",
													"src": "1001:49:12",
													"statements": [
														{
															"nativeSrc": "1011:33:12",
															"nodeType": "YulAssignment",
															"src": "1011:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:12"
																		},
																		"nativeSrc": "1025:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:12"
																},
																"nativeSrc": "1021:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:12",
														"nodeType": "YulTypedName",
														"src": "984:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:12",
														"nodeType": "YulTypedName",
														"src": "994:6:12",
														"type": ""
													}
												],
												"src": "957:93:12"
											},
											{
												"body": {
													"nativeSrc": "1109:54:12",
													"nodeType": "YulBlock",
													"src": "1109:54:12",
													"statements": [
														{
															"nativeSrc": "1119:37:12",
															"nodeType": "YulAssignment",
															"src": "1119:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:12"
																},
																"nativeSrc": "1140:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:12",
														"nodeType": "YulTypedName",
														"src": "1084:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:12",
														"nodeType": "YulTypedName",
														"src": "1090:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:12",
														"nodeType": "YulTypedName",
														"src": "1100:8:12",
														"type": ""
													}
												],
												"src": "1056:107:12"
											},
											{
												"body": {
													"nativeSrc": "1245:317:12",
													"nodeType": "YulBlock",
													"src": "1245:317:12",
													"statements": [
														{
															"nativeSrc": "1255:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nativeSrc": "1272:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:12",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:12"
																},
																"nativeSrc": "1311:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:12",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:12",
															"nodeType": "YulAssignment",
															"src": "1417:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:12"
																},
																"nativeSrc": "1429:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:12"
																}
															]
														},
														{
															"nativeSrc": "1477:30:12",
															"nodeType": "YulAssignment",
															"src": "1477:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:12"
																		},
																		"nativeSrc": "1497:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:12"
																},
																"nativeSrc": "1486:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:12"
																}
															]
														},
														{
															"nativeSrc": "1516:40:12",
															"nodeType": "YulAssignment",
															"src": "1516:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:12"
																		},
																		"nativeSrc": "1536:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:12"
																},
																"nativeSrc": "1526:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:12",
														"nodeType": "YulTypedName",
														"src": "1206:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:12",
														"nodeType": "YulTypedName",
														"src": "1213:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:12",
														"nodeType": "YulTypedName",
														"src": "1225:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:12",
														"nodeType": "YulTypedName",
														"src": "1238:6:12",
														"type": ""
													}
												],
												"src": "1169:393:12"
											},
											{
												"body": {
													"nativeSrc": "1613:32:12",
													"nodeType": "YulBlock",
													"src": "1613:32:12",
													"statements": [
														{
															"nativeSrc": "1623:16:12",
															"nodeType": "YulAssignment",
															"src": "1623:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:12",
																"nodeType": "YulIdentifier",
																"src": "1634:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:12",
														"nodeType": "YulTypedName",
														"src": "1595:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:12",
														"nodeType": "YulTypedName",
														"src": "1605:7:12",
														"type": ""
													}
												],
												"src": "1568:77:12"
											},
											{
												"body": {
													"nativeSrc": "1683:28:12",
													"nodeType": "YulBlock",
													"src": "1683:28:12",
													"statements": [
														{
															"nativeSrc": "1693:12:12",
															"nodeType": "YulAssignment",
															"src": "1693:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:12",
																"nodeType": "YulIdentifier",
																"src": "1700:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:12",
														"nodeType": "YulTypedName",
														"src": "1669:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:12",
														"nodeType": "YulTypedName",
														"src": "1679:3:12",
														"type": ""
													}
												],
												"src": "1651:60:12"
											},
											{
												"body": {
													"nativeSrc": "1777:82:12",
													"nodeType": "YulBlock",
													"src": "1777:82:12",
													"statements": [
														{
															"nativeSrc": "1787:66:12",
															"nodeType": "YulAssignment",
															"src": "1787:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:12"
																				},
																				"nativeSrc": "1827:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:12"
																		},
																		"nativeSrc": "1818:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:12"
																},
																"nativeSrc": "1800:53:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:12",
														"nodeType": "YulTypedName",
														"src": "1757:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:12",
														"nodeType": "YulTypedName",
														"src": "1767:9:12",
														"type": ""
													}
												],
												"src": "1717:142:12"
											},
											{
												"body": {
													"nativeSrc": "1912:28:12",
													"nodeType": "YulBlock",
													"src": "1912:28:12",
													"statements": [
														{
															"nativeSrc": "1922:12:12",
															"nodeType": "YulAssignment",
															"src": "1922:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:12",
																"nodeType": "YulIdentifier",
																"src": "1929:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:12",
														"nodeType": "YulTypedName",
														"src": "1898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:12",
														"nodeType": "YulTypedName",
														"src": "1908:3:12",
														"type": ""
													}
												],
												"src": "1865:75:12"
											},
											{
												"body": {
													"nativeSrc": "2022:193:12",
													"nodeType": "YulBlock",
													"src": "2022:193:12",
													"statements": [
														{
															"nativeSrc": "2032:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:12"
																},
																"nativeSrc": "2056:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:12",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:12"
																				},
																				"nativeSrc": "2145:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:12"
																				},
																				"nativeSrc": "2166:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:12"
																		},
																		"nativeSrc": "2117:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:12"
																},
																"nativeSrc": "2104:105:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:12"
															},
															"nativeSrc": "2104:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:12",
														"nodeType": "YulTypedName",
														"src": "1999:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:12",
														"nodeType": "YulTypedName",
														"src": "2005:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:12",
														"nodeType": "YulTypedName",
														"src": "2013:7:12",
														"type": ""
													}
												],
												"src": "1946:269:12"
											},
											{
												"body": {
													"nativeSrc": "2270:24:12",
													"nodeType": "YulBlock",
													"src": "2270:24:12",
													"statements": [
														{
															"nativeSrc": "2280:8:12",
															"nodeType": "YulAssignment",
															"src": "2280:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:12",
																"nodeType": "YulLiteral",
																"src": "2287:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:12",
														"nodeType": "YulTypedName",
														"src": "2266:3:12",
														"type": ""
													}
												],
												"src": "2221:73:12"
											},
											{
												"body": {
													"nativeSrc": "2353:136:12",
													"nodeType": "YulBlock",
													"src": "2353:136:12",
													"statements": [
														{
															"nativeSrc": "2363:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:12"
																},
																"nativeSrc": "2377:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:12"
																},
																"nativeSrc": "2418:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:12"
															},
															"nativeSrc": "2418:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:12",
														"nodeType": "YulTypedName",
														"src": "2339:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2300:189:12"
											},
											{
												"body": {
													"nativeSrc": "2545:136:12",
													"nodeType": "YulBlock",
													"src": "2545:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:12",
																"nodeType": "YulBlock",
																"src": "2612:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:12"
																			},
																			"nativeSrc": "2626:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:12"
																		},
																		"nativeSrc": "2626:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:12"
																},
																"nativeSrc": "2562:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:12"
															},
															"nativeSrc": "2555:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:12",
																"nodeType": "YulBlock",
																"src": "2577:26:12",
																"statements": [
																	{
																		"nativeSrc": "2579:22:12",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:12"
																			},
																			"nativeSrc": "2588:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:12",
																"nodeType": "YulBlock",
																"src": "2559:2:12",
																"statements": []
															},
															"src": "2555:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:12",
														"nodeType": "YulTypedName",
														"src": "2533:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:12",
														"nodeType": "YulTypedName",
														"src": "2540:3:12",
														"type": ""
													}
												],
												"src": "2495:186:12"
											},
											{
												"body": {
													"nativeSrc": "2766:464:12",
													"nodeType": "YulBlock",
													"src": "2766:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:12",
																"nodeType": "YulBlock",
																"src": "2792:431:12",
																"statements": [
																	{
																		"nativeSrc": "2806:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:12"
																			},
																			"nativeSrc": "2822:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:12",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:12"
																					},
																					"nativeSrc": "2906:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:12"
																			},
																			"nativeSrc": "2892:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:12",
																			"nodeType": "YulBlock",
																			"src": "3093:27:12",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:12",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:12"
																			},
																			"nativeSrc": "3074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:12"
																		},
																		"nativeSrc": "3071:49:12",
																		"nodeType": "YulIf",
																		"src": "3071:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:12"
																							},
																							"nativeSrc": "3189:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:12"
																					},
																					"nativeSrc": "3175:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:12"
																			},
																			"nativeSrc": "3133:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:12"
																		},
																		"nativeSrc": "3133:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:12"
																},
																"nativeSrc": "2780:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:12"
															},
															"nativeSrc": "2777:446:12",
															"nodeType": "YulIf",
															"src": "2777:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:12",
														"nodeType": "YulTypedName",
														"src": "2742:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:12",
														"nodeType": "YulTypedName",
														"src": "2749:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:12",
														"nodeType": "YulTypedName",
														"src": "2754:10:12",
														"type": ""
													}
												],
												"src": "2687:543:12"
											},
											{
												"body": {
													"nativeSrc": "3299:54:12",
													"nodeType": "YulBlock",
													"src": "3299:54:12",
													"statements": [
														{
															"nativeSrc": "3309:37:12",
															"nodeType": "YulAssignment",
															"src": "3309:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:12"
																},
																"nativeSrc": "3330:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:12",
														"nodeType": "YulTypedName",
														"src": "3274:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:12",
														"nodeType": "YulTypedName",
														"src": "3280:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:12",
														"nodeType": "YulTypedName",
														"src": "3290:8:12",
														"type": ""
													}
												],
												"src": "3236:117:12"
											},
											{
												"body": {
													"nativeSrc": "3410:118:12",
													"nodeType": "YulBlock",
													"src": "3410:118:12",
													"statements": [
														{
															"nativeSrc": "3420:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:12"
																				},
																				"nativeSrc": "3465:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:12"
																				},
																				"nativeSrc": "3480:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:12"
																		},
																		"nativeSrc": "3436:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:12"
																},
																"nativeSrc": "3432:56:12",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:12",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:12",
															"nodeType": "YulAssignment",
															"src": "3497:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:12"
																},
																"nativeSrc": "3507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:12",
														"nodeType": "YulTypedName",
														"src": "3387:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:12",
														"nodeType": "YulTypedName",
														"src": "3393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:12",
														"nodeType": "YulTypedName",
														"src": "3403:6:12",
														"type": ""
													}
												],
												"src": "3359:169:12"
											},
											{
												"body": {
													"nativeSrc": "3614:214:12",
													"nodeType": "YulBlock",
													"src": "3614:214:12",
													"statements": [
														{
															"nativeSrc": "3747:37:12",
															"nodeType": "YulAssignment",
															"src": "3747:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:12"
																},
																"nativeSrc": "3755:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:12"
																}
															]
														},
														{
															"nativeSrc": "3793:29:12",
															"nodeType": "YulAssignment",
															"src": "3793:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:12"
																		},
																		"nativeSrc": "3810:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:12"
																},
																"nativeSrc": "3801:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:12",
														"nodeType": "YulTypedName",
														"src": "3595:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:12",
														"nodeType": "YulTypedName",
														"src": "3601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:12",
														"nodeType": "YulTypedName",
														"src": "3609:4:12",
														"type": ""
													}
												],
												"src": "3533:295:12"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:12",
													"nodeType": "YulBlock",
													"src": "3925:1303:12",
													"statements": [
														{
															"nativeSrc": "3936:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:12"
																},
																"nativeSrc": "3950:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:12",
																"nodeType": "YulBlock",
																"src": "4072:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:12"
																			},
																			"nativeSrc": "4074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:12"
																		},
																		"nativeSrc": "4074:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:12"
																},
																"nativeSrc": "4041:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:12"
															},
															"nativeSrc": "4038:56:12",
															"nodeType": "YulIf",
															"src": "4038:56:12"
														},
														{
															"nativeSrc": "4104:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:12"
																		},
																		"nativeSrc": "4144:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:12"
																},
																"nativeSrc": "4118:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:12"
																},
																"nativeSrc": "4203:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:12"
															},
															"nativeSrc": "4203:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:12"
														},
														{
															"nativeSrc": "4280:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:12",
																"nodeType": "YulLiteral",
																"src": "4297:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:12",
															"nodeType": "YulAssignment",
															"src": "4308:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:12",
																"nodeType": "YulLiteral",
																"src": "4321:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:12",
																		"nodeType": "YulBlock",
																		"src": "4372:611:12",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:12",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:12"
																							},
																							"nativeSrc": "4413:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:12"
																					},
																					"nativeSrc": "4401:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:12",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:12"
																					},
																					"nativeSrc": "4451:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:12",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:12",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:12",
																					"nodeType": "YulBlock",
																					"src": "4569:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:12"
																												},
																												"nativeSrc": "4608:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:12"
																										},
																										"nativeSrc": "4602:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:12"
																								},
																								"nativeSrc": "4587:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:12"
																							},
																							"nativeSrc": "4587:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:12"
																						},
																						{
																							"nativeSrc": "4646:24:12",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:12",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:12"
																								},
																								"nativeSrc": "4656:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:12",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:12",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:12"
																								},
																								"nativeSrc": "4700:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:12"
																					},
																					"nativeSrc": "4532:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:12"
																				},
																				"nativeSrc": "4524:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:12",
																					"nodeType": "YulBlock",
																					"src": "4547:21:12",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:12",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:12"
																								},
																								"nativeSrc": "4554:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:12",
																					"nodeType": "YulBlock",
																					"src": "4528:3:12",
																					"statements": []
																				},
																				"src": "4524:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:12",
																					"nodeType": "YulBlock",
																					"src": "4768:156:12",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:12"
																										},
																										"nativeSrc": "4809:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:12"
																								},
																								"nativeSrc": "4803:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:12",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:12",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:12"
																												},
																												"nativeSrc": "4891:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:12"
																										},
																										"nativeSrc": "4861:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:12"
																								},
																								"nativeSrc": "4846:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:12"
																							},
																							"nativeSrc": "4846:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:12"
																					},
																					"nativeSrc": "4748:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:12"
																				},
																				"nativeSrc": "4745:179:12",
																				"nodeType": "YulIf",
																				"src": "4745:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:12",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:12"
																									},
																									"nativeSrc": "4954:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:12",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:12"
																							},
																							"nativeSrc": "4950:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:12"
																					},
																					"nativeSrc": "4937:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:12"
																				},
																				"nativeSrc": "4937:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:12"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:12",
																	"nodeType": "YulCase",
																	"src": "4365:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:12",
																		"nodeType": "YulBlock",
																		"src": "5000:222:12",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:12",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:12",
																					"nodeType": "YulBlock",
																					"src": "5051:67:12",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:12",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:12"
																										},
																										"nativeSrc": "5084:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:12"
																								},
																								"nativeSrc": "5078:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:12"
																				},
																				"nativeSrc": "5041:77:12",
																				"nodeType": "YulIf",
																				"src": "5041:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:12"
																							},
																							"nativeSrc": "5144:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:12"
																					},
																					"nativeSrc": "5131:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:12"
																				},
																				"nativeSrc": "5131:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:12"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:12",
																	"nodeType": "YulCase",
																	"src": "4992:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:12"
																},
																"nativeSrc": "4342:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:12"
															},
															"nativeSrc": "4335:887:12",
															"nodeType": "YulSwitch",
															"src": "4335:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:12",
														"nodeType": "YulTypedName",
														"src": "3914:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:12",
														"nodeType": "YulTypedName",
														"src": "3920:3:12",
														"type": ""
													}
												],
												"src": "3833:1395:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280601081526020017f5369676e732047616d6520546f6b656e000000000000000000000000000000008152506040518060400160405280600481526020017f5349474e00000000000000000000000000000000000000000000000000000000815250816003908161008b9190610472565b50806004908161009b9190610472565b5050505f60055f6101000a81548160ff02191690831515021790555060016007819055506100d15f801b336100d760201b60201c565b50610541565b5f6100e883836101cd60201b60201c565b6101c357600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061016061023160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101c7565b5f90505b92915050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102b357607f821691505b6020821081036102c6576102c561026f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102ed565b61033286836102ed565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61037661037161036c8461034a565b610353565b61034a565b9050919050565b5f819050919050565b61038f8361035c565b6103a361039b8261037d565b8484546102f9565b825550505050565b5f90565b6103b76103ab565b6103c2818484610386565b505050565b5b818110156103e5576103da5f826103af565b6001810190506103c8565b5050565b601f82111561042a576103fb816102cc565b610404846102de565b81016020851015610413578190505b61042761041f856102de565b8301826103c7565b50505b505050565b5f82821c905092915050565b5f61044a5f198460080261042f565b1980831691505092915050565b5f610462838361043b565b9150826002028217905092915050565b61047b82610238565b67ffffffffffffffff81111561049457610493610242565b5b61049e825461029c565b6104a98282856103e9565b5f60209050601f8311600181146104da575f84156104c8578287015190505b6104d28582610457565b865550610539565b601f1984166104e8866102cc565b5f5b8281101561050f578489015182556001820191506020850194506020810190506104ea565b8683101561052c5784890151610528601f89168261043b565b8355505b6001600288020188555050505b505050505050565b612df68061054e5f395ff3fe608060405234801561000f575f80fd5b50600436106101e3575f3560e01c80636b2d95d41161010d578063a217fddf116100a0578063da5188291161006f578063da51882914610591578063dd62ed3e146105ad578063f968f493146105dd578063ff6fcdbd146105e7576101e3565b8063a217fddf14610509578063a9059cbb14610527578063d539139314610557578063d547741f14610575576101e3565b80638456cb59116100dc5780638456cb591461049557806391d148541461049f57806395d89b41146104cf5780639dc29fac146104ed576101e3565b80636b2d95d4146103e95780636c24a76f146104195780636e27d8891461044957806370a0823114610465576101e3565b8063313ce567116101855780633f4ba83a116101545780633f4ba83a1461038757806340c10f1914610391578063485d3834146103ad5780635c975abb146103cb576101e3565b8063313ce567146102ff57806332cb6b0c1461031d57806336568abe1461033b5780633c26835b14610357576101e3565b806318160ddd116101c157806318160ddd1461026557806323b872dd14610283578063248a9ca3146102b35780632f2ff15d146102e3576101e3565b806301ffc9a7146101e757806306fdde0314610217578063095ea7b314610235575b5f80fd5b61020160048036038101906101fc9190612015565b610605565b60405161020e919061205a565b60405180910390f35b61021f61067e565b60405161022c91906120e3565b60405180910390f35b61024f600480360381019061024a9190612190565b61070e565b60405161025c919061205a565b60405180910390f35b61026d610730565b60405161027a91906121dd565b60405180910390f35b61029d600480360381019061029891906121f6565b610739565b6040516102aa919061205a565b60405180910390f35b6102cd60048036038101906102c89190612279565b6107e9565b6040516102da91906122b3565b60405180910390f35b6102fd60048036038101906102f891906122cc565b610806565b005b610307610828565b6040516103149190612325565b60405180910390f35b610325610830565b60405161033291906121dd565b60405180910390f35b610355600480360381019061035091906122cc565b610840565b005b610371600480360381019061036c919061233e565b6108bb565b60405161037e91906121dd565b60405180910390f35b61038f610901565b005b6103ab60048036038101906103a69190612190565b610918565b005b6103b5610a66565b6040516103c291906121dd565b60405180910390f35b6103d3610a6d565b6040516103e0919061205a565b60405180910390f35b61040360048036038101906103fe919061233e565b610a82565b60405161041091906121dd565b60405180910390f35b610433600480360381019061042e919061233e565b610ac8565b60405161044091906121dd565b60405180910390f35b610463600480360381019061045e9190612369565b610b21565b005b61047f600480360381019061047a919061233e565b610cac565b60405161048c91906121dd565b60405180910390f35b61049d610cf1565b005b6104b960048036038101906104b491906122cc565b610d08565b6040516104c6919061205a565b60405180910390f35b6104d7610d6c565b6040516104e491906120e3565b60405180910390f35b61050760048036038101906105029190612190565b610dfc565b005b610511610f82565b60405161051e91906122b3565b60405180910390f35b610541600480360381019061053c9190612190565b610f88565b60405161054e919061205a565b60405180910390f35b61055f611036565b60405161056c91906122b3565b60405180910390f35b61058f600480360381019061058a91906122cc565b61105a565b005b6105ab60048036038101906105a691906124c0565b61107c565b005b6105c760048036038101906105c2919061252c565b61122b565b6040516105d491906121dd565b60405180910390f35b6105e56112ad565b005b6105ef611469565b6040516105fc91906122b3565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061067757506106768261148d565b5b9050919050565b60606003805461068d90612597565b80601f01602080910402602001604051908101604052809291908181526020018280546106b990612597565b80156107045780601f106106db57610100808354040283529160200191610704565b820191905f5260205f20905b8154815290600101906020018083116106e757829003601f168201915b5050505050905090565b5f806107186114f6565b90506107258185856114fd565b600191505092915050565b5f600254905090565b5f61074261150f565b8160085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461078a86610cac565b61079491906125f4565b10156107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90612697565b60405180910390fd5b6107e0848484611559565b90509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b61080f826107e9565b61081881611587565b610822838361159b565b50505050565b5f6012905090565b6b033b2e3c9fd0803ce800000081565b6108486114f6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108ac576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108b68282611685565b505050565b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f801b61090d81611587565b61091561176f565b50565b6109427f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610d08565b610981576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610978906126ff565b60405180910390fd5b61098961150f565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ee90612767565b60405180910390fd5b6b033b2e3c9fd0803ce800000081610a0d610730565b610a179190612785565b1115610a58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4f90612802565b60405180910390fd5b610a6282826117d0565b5050565b6201518081565b5f60055f9054906101000a900460ff16905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b1083610cac565b610b1a91906125f4565b9050919050565b610b2961150f565b610b3161184f565b5f8111610b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6a9061286a565b60405180910390fd5b80610b7d33610cac565b1015610bbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb5906128d2565b60405180910390fd5b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c0a9190612785565b925050819055504260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c82604051610c9991906121dd565b60405180910390a2610ca961189e565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f801b610cfd81611587565b610d056118a8565b50565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610d7b90612597565b80601f0160208091040260200160405190810160405280929190818152602001828054610da790612597565b8015610df25780601f10610dc957610100808354040283529160200191610df2565b820191905f5260205f20905b815481529060010190602001808311610dd557829003601f168201915b5050505050905090565b610e267fef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b133610d08565b610e65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5c9061293a565b60405180910390fd5b610e6d61150f565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610edb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed2906129a2565b60405180910390fd5b80610ee583610cac565b1015610f26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1d90612a0a565b60405180910390fd5b610f30828261190a565b8173ffffffffffffffffffffffffffffffffffffffff167ffad31924d655455395c87544c8aa1ffdb5a7505a22a3c2e03f28003b6556a75f82604051610f769190612a72565b60405180910390a25050565b5f801b81565b5f610f9161150f565b8160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610fd933610cac565b610fe391906125f4565b1015611024576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101b90612697565b60405180910390fd5b61102e8383611989565b905092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611063826107e9565b61106c81611587565b6110768383611685565b50505050565b6110a67fef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b133610d08565b6110e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dc9061293a565b60405180910390fd5b6110ed61150f565b6110f561184f565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115a90612ae8565b60405180910390fd5b6b033b2e3c9fd0803ce800000082611179610730565b6111839190612785565b11156111c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bb90612802565b60405180910390fd5b6111ce83836117d0565b8273ffffffffffffffffffffffffffffffffffffffff167f21a82678daa5235b7b5de669fdf9599453d3d885cee0826e92636d747419689c8383604051611216929190612b06565b60405180910390a261122661189e565b505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6112b561150f565b6112bd61184f565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111611340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133790612b7e565b60405180910390fd5b6201518060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461138c9190612785565b4210156113ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c590612be6565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e11958888260405161145691906121dd565b60405180910390a25061146761189e565b565b7fef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b181565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b61150a83838360016119ab565b505050565b611517610a6d565b15611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e90612c4e565b60405180910390fd5b565b5f806115636114f6565b9050611570858285611b7a565b61157b858585611c0c565b60019150509392505050565b611598816115936114f6565b611cfc565b50565b5f6115a68383610d08565b61167b57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506116186114f6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061167f565b5f90505b92915050565b5f6116908383610d08565b15611765575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117026114f6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611769565b5f90505b92915050565b611777611d4d565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6117b96114f6565b6040516117c69190612c7b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611840575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118379190612c7b565b60405180910390fd5b61184b5f8383611d96565b5050565b600260075403611894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188b90612cde565b60405180910390fd5b6002600781905550565b6001600781905550565b6118b061150f565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118f36114f6565b6040516119009190612c7b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361197a575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119719190612c7b565b60405180910390fd5b611985825f83611d96565b5050565b5f806119936114f6565b90506119a0818585611c0c565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a1b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a129190612c7b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a8b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a829190612c7b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611b74578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b6b91906121dd565b60405180910390a35b50505050565b5f611b85848461122b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611c065781811015611bf7578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611bee93929190612cfc565b60405180910390fd5b611c0584848484035f6119ab565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c7c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611c739190612c7b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cec575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611ce39190612c7b565b60405180910390fd5b611cf7838383611d96565b505050565b611d068282610d08565b611d495780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611d40929190612d31565b60405180910390fd5b5050565b611d55610a6d565b611d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8b90612da2565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611de6578060025f828254611dda9190612785565b92505081905550611eb4565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611e6f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611e6693929190612cfc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611efb578060025f8282540392505081905550611f45565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611fa291906121dd565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ff481611fc0565b8114611ffe575f80fd5b50565b5f8135905061200f81611feb565b92915050565b5f6020828403121561202a57612029611fb8565b5b5f61203784828501612001565b91505092915050565b5f8115159050919050565b61205481612040565b82525050565b5f60208201905061206d5f83018461204b565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6120b582612073565b6120bf818561207d565b93506120cf81856020860161208d565b6120d88161209b565b840191505092915050565b5f6020820190508181035f8301526120fb81846120ab565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61212c82612103565b9050919050565b61213c81612122565b8114612146575f80fd5b50565b5f8135905061215781612133565b92915050565b5f819050919050565b61216f8161215d565b8114612179575f80fd5b50565b5f8135905061218a81612166565b92915050565b5f80604083850312156121a6576121a5611fb8565b5b5f6121b385828601612149565b92505060206121c48582860161217c565b9150509250929050565b6121d78161215d565b82525050565b5f6020820190506121f05f8301846121ce565b92915050565b5f805f6060848603121561220d5761220c611fb8565b5b5f61221a86828701612149565b935050602061222b86828701612149565b925050604061223c8682870161217c565b9150509250925092565b5f819050919050565b61225881612246565b8114612262575f80fd5b50565b5f813590506122738161224f565b92915050565b5f6020828403121561228e5761228d611fb8565b5b5f61229b84828501612265565b91505092915050565b6122ad81612246565b82525050565b5f6020820190506122c65f8301846122a4565b92915050565b5f80604083850312156122e2576122e1611fb8565b5b5f6122ef85828601612265565b925050602061230085828601612149565b9150509250929050565b5f60ff82169050919050565b61231f8161230a565b82525050565b5f6020820190506123385f830184612316565b92915050565b5f6020828403121561235357612352611fb8565b5b5f61236084828501612149565b91505092915050565b5f6020828403121561237e5761237d611fb8565b5b5f61238b8482850161217c565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6123d28261209b565b810181811067ffffffffffffffff821117156123f1576123f061239c565b5b80604052505050565b5f612403611faf565b905061240f82826123c9565b919050565b5f67ffffffffffffffff82111561242e5761242d61239c565b5b6124378261209b565b9050602081019050919050565b828183375f83830152505050565b5f61246461245f84612414565b6123fa565b9050828152602081018484840111156124805761247f612398565b5b61248b848285612444565b509392505050565b5f82601f8301126124a7576124a6612394565b5b81356124b7848260208601612452565b91505092915050565b5f805f606084860312156124d7576124d6611fb8565b5b5f6124e486828701612149565b93505060206124f58682870161217c565b925050604084013567ffffffffffffffff81111561251657612515611fbc565b5b61252286828701612493565b9150509250925092565b5f806040838503121561254257612541611fb8565b5b5f61254f85828601612149565b925050602061256085828601612149565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806125ae57607f821691505b6020821081036125c1576125c061256a565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125fe8261215d565b91506126098361215d565b9250828203905081811115612621576126206125c7565b5b92915050565b7f5472616e7366657220616d6f756e74206578636565647320617661696c61626c5f8201527f652062616c616e63650000000000000000000000000000000000000000000000602082015250565b5f61268160298361207d565b915061268c82612627565b604082019050919050565b5f6020820190508181035f8301526126ae81612675565b9050919050565b7f43616c6c6572206973206e6f742061206d696e746572000000000000000000005f82015250565b5f6126e960168361207d565b91506126f4826126b5565b602082019050919050565b5f6020820190508181035f830152612716816126dd565b9050919050565b7f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000005f82015250565b5f612751601b8361207d565b915061275c8261271d565b602082019050919050565b5f6020820190508181035f83015261277e81612745565b9050919050565b5f61278f8261215d565b915061279a8361215d565b92508282019050808211156127b2576127b16125c7565b5b92915050565b7f576f756c6420657863656564206d617820737570706c790000000000000000005f82015250565b5f6127ec60178361207d565b91506127f7826127b8565b602082019050919050565b5f6020820190508181035f830152612819816127e0565b9050919050565b7f43616e6e6f74206c6f636b207a65726f20746f6b656e730000000000000000005f82015250565b5f61285460178361207d565b915061285f82612820565b602082019050919050565b5f6020820190508181035f83015261288181612848565b9050919050565b7f496e73756666696369656e742062616c616e636520746f206c6f636b000000005f82015250565b5f6128bc601c8361207d565b91506128c782612888565b602082019050919050565b5f6020820190508181035f8301526128e9816128b0565b9050919050565b7f43616c6c6572206973206e6f7420612067616d65206d616e61676572000000005f82015250565b5f612924601c8361207d565b915061292f826128f0565b602082019050919050565b5f6020820190508181035f83015261295181612918565b9050919050565b7f43616e6e6f74206275726e2066726f6d207a65726f20616464726573730000005f82015250565b5f61298c601d8361207d565b915061299782612958565b602082019050919050565b5f6020820190508181035f8301526129b981612980565b9050919050565b7f496e73756666696369656e742062616c616e636520746f206275726e000000005f82015250565b5f6129f4601c8361207d565b91506129ff826129c0565b602082019050919050565b5f6020820190508181035f830152612a21816129e8565b9050919050565b7f47616d65206d656368616e696373206275726e000000000000000000000000005f82015250565b5f612a5c60138361207d565b9150612a6782612a28565b602082019050919050565b5f604082019050612a855f8301846121ce565b8181036020830152612a9681612a50565b905092915050565b7f43616e6e6f7420726577617264207a65726f20616464726573730000000000005f82015250565b5f612ad2601a8361207d565b9150612add82612a9e565b602082019050919050565b5f6020820190508181035f830152612aff81612ac6565b9050919050565b5f604082019050612b195f8301856121ce565b8181036020830152612b2b81846120ab565b90509392505050565b7f4e6f20746f6b656e73206c6f636b6564000000000000000000000000000000005f82015250565b5f612b6860108361207d565b9150612b7382612b34565b602082019050919050565b5f6020820190508181035f830152612b9581612b5c565b9050919050565b7f546f6b656e73207374696c6c206c6f636b6564000000000000000000000000005f82015250565b5f612bd060138361207d565b9150612bdb82612b9c565b602082019050919050565b5f6020820190508181035f830152612bfd81612bc4565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612c3860108361207d565b9150612c4382612c04565b602082019050919050565b5f6020820190508181035f830152612c6581612c2c565b9050919050565b612c7581612122565b82525050565b5f602082019050612c8e5f830184612c6c565b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612cc8601f8361207d565b9150612cd382612c94565b602082019050919050565b5f6020820190508181035f830152612cf581612cbc565b9050919050565b5f606082019050612d0f5f830186612c6c565b612d1c60208301856121ce565b612d2960408301846121ce565b949350505050565b5f604082019050612d445f830185612c6c565b612d5160208301846122a4565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612d8c60148361207d565b9150612d9782612d58565b602082019050919050565b5f6020820190508181035f830152612db981612d80565b905091905056fea26469706673582212209f3d22d095fd0518dbec04174f58017e74d524cf9f47ff75b19d8d6c9eddc6f464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5369676E732047616D6520546F6B656E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5349474E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x472 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x472 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xD1 PUSH0 DUP1 SHL CALLER PUSH2 0xD7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x541 JUMP JUMPDEST PUSH0 PUSH2 0xE8 DUP4 DUP4 PUSH2 0x1CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1C3 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 PUSH2 0x231 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1C7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x26F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x328 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x332 DUP7 DUP4 PUSH2 0x2ED JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x376 PUSH2 0x371 PUSH2 0x36C DUP5 PUSH2 0x34A JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38F DUP4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x39B DUP3 PUSH2 0x37D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2F9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x3C2 DUP2 DUP5 DUP5 PUSH2 0x386 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3DA PUSH0 DUP3 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3C8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x42A JUMPI PUSH2 0x3FB DUP2 PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x404 DUP5 PUSH2 0x2DE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x413 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x427 PUSH2 0x41F DUP6 PUSH2 0x2DE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3C7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x44A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x42F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x462 DUP4 DUP4 PUSH2 0x43B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47B DUP3 PUSH2 0x238 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x494 JUMPI PUSH2 0x493 PUSH2 0x242 JUMP JUMPDEST JUMPDEST PUSH2 0x49E DUP3 SLOAD PUSH2 0x29C JUMP JUMPDEST PUSH2 0x4A9 DUP3 DUP3 DUP6 PUSH2 0x3E9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4DA JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4C8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4D2 DUP6 DUP3 PUSH2 0x457 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x539 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4E8 DUP7 PUSH2 0x2CC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x50F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4EA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x52C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x528 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x43B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2DF6 DUP1 PUSH2 0x54E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B2D95D4 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDA518829 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDA518829 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xFF6FCDBD EQ PUSH2 0x5E7 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x575 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x4ED JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x6B2D95D4 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x6C24A76F EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x465 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x485D3834 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3CB JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x3C26835B EQ PUSH2 0x357 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2E3 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x307 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH2 0x901 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B5 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xCF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D7 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x507 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x511 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55F PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0x107C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x252C JUMP JUMPDEST PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E5 PUSH2 0x12AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5EF PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x677 JUMPI POP PUSH2 0x676 DUP3 PUSH2 0x148D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x68D SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B9 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x704 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x704 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x718 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x725 DUP2 DUP6 DUP6 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x742 PUSH2 0x150F JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x78A DUP7 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST LT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E0 DUP5 DUP5 DUP5 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80F DUP3 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x818 DUP2 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x822 DUP4 DUP4 PUSH2 0x159B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH2 0x848 PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B6 DUP3 DUP3 PUSH2 0x1685 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x90D DUP2 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x915 PUSH2 0x176F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x942 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP1 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x989 PUSH2 0x150F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EE SWAP1 PUSH2 0x2767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 PUSH2 0xA0D PUSH2 0x730 JUMP JUMPDEST PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST GT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4F SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA62 DUP3 DUP3 PUSH2 0x17D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB10 DUP4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB29 PUSH2 0x150F JUMP JUMPDEST PUSH2 0xB31 PUSH2 0x184F JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6A SWAP1 PUSH2 0x286A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xB7D CALLER PUSH2 0xCAC JUMP JUMPDEST LT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB5 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC0A SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C DUP3 PUSH1 0x40 MLOAD PUSH2 0xC99 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xCA9 PUSH2 0x189E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xCFD DUP2 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0xD05 PUSH2 0x18A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD7B SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDA7 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDF2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDC9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDD5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE26 PUSH32 0xEF17B1F3C5A412F9C8E887E3ABD186802AFEC7DC657FD3B7002BF87B128DD0B1 CALLER PUSH2 0xD08 JUMP JUMPDEST PUSH2 0xE65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5C SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6D PUSH2 0x150F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED2 SWAP1 PUSH2 0x29A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xEE5 DUP4 PUSH2 0xCAC JUMP JUMPDEST LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1D SWAP1 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF30 DUP3 DUP3 PUSH2 0x190A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAD31924D655455395C87544C8AA1FFDB5A7505A22A3C2E03F28003B6556A75F DUP3 PUSH1 0x40 MLOAD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xF91 PUSH2 0x150F JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xFD9 CALLER PUSH2 0xCAC JUMP JUMPDEST PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST LT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x102E DUP4 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1063 DUP3 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x106C DUP2 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x1076 DUP4 DUP4 PUSH2 0x1685 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x10A6 PUSH32 0xEF17B1F3C5A412F9C8E887E3ABD186802AFEC7DC657FD3B7002BF87B128DD0B1 CALLER PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DC SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10ED PUSH2 0x150F JUMP JUMPDEST PUSH2 0x10F5 PUSH2 0x184F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115A SWAP1 PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP3 PUSH2 0x1179 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x1183 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST GT ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11CE DUP4 DUP4 PUSH2 0x17D0 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21A82678DAA5235B7B5DE669FDF9599453D3D885CEE0826E92636D747419689C DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1216 SWAP3 SWAP2 SWAP1 PUSH2 0x2B06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1226 PUSH2 0x189E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B5 PUSH2 0x150F JUMP JUMPDEST PUSH2 0x12BD PUSH2 0x184F JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1340 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1337 SWAP1 PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x138C SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C5 SWAP1 PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1456 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1467 PUSH2 0x189E JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xEF17B1F3C5A412F9C8E887E3ABD186802AFEC7DC657FD3B7002BF87B128DD0B1 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x150A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1517 PUSH2 0xA6D JUMP JUMPDEST ISZERO PUSH2 0x1557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP1 PUSH2 0x2C4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1563 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1570 DUP6 DUP3 DUP6 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x157B DUP6 DUP6 DUP6 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1598 DUP2 PUSH2 0x1593 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x1CFC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15A6 DUP4 DUP4 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x167B JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1618 PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x167F JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1690 DUP4 DUP4 PUSH2 0xD08 JUMP JUMPDEST ISZERO PUSH2 0x1765 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1702 PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1769 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1777 PUSH2 0x1D4D JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x17B9 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C6 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1840 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1837 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x184B PUSH0 DUP4 DUP4 PUSH2 0x1D96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0x1894 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188B SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x18B0 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18F3 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1900 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x197A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1971 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1985 DUP3 PUSH0 DUP4 PUSH2 0x1D96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1993 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x19A0 DUP2 DUP6 DUP6 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A1B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A12 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A82 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B74 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B6B SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B85 DUP5 DUP5 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1C06 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1BF7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C05 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x19AB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C7C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C73 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CEC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE3 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CF7 DUP4 DUP4 DUP4 PUSH2 0x1D96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D06 DUP3 DUP3 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x1D49 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D40 SWAP3 SWAP2 SWAP1 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1D55 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x1D94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8B SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DE6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1DDA SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EB4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E6F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E66 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EFB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F45 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FA2 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF4 DUP2 PUSH2 0x1FC0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x200F DUP2 PUSH2 0x1FEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202A JUMPI PUSH2 0x2029 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2037 DUP5 DUP3 DUP6 ADD PUSH2 0x2001 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2054 DUP2 PUSH2 0x2040 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x206D PUSH0 DUP4 ADD DUP5 PUSH2 0x204B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20B5 DUP3 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x20BF DUP2 DUP6 PUSH2 0x207D JUMP JUMPDEST SWAP4 POP PUSH2 0x20CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x208D JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x209B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20FB DUP2 DUP5 PUSH2 0x20AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212C DUP3 PUSH2 0x2103 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213C DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP2 EQ PUSH2 0x2146 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2157 DUP2 PUSH2 0x2133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216F DUP2 PUSH2 0x215D JUMP JUMPDEST DUP2 EQ PUSH2 0x2179 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x218A DUP2 PUSH2 0x2166 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21B3 DUP6 DUP3 DUP7 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21C4 DUP6 DUP3 DUP7 ADD PUSH2 0x217C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D7 DUP2 PUSH2 0x215D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x220D JUMPI PUSH2 0x220C PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x221A DUP7 DUP3 DUP8 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x222B DUP7 DUP3 DUP8 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x223C DUP7 DUP3 DUP8 ADD PUSH2 0x217C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2258 DUP2 PUSH2 0x2246 JUMP JUMPDEST DUP2 EQ PUSH2 0x2262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2273 DUP2 PUSH2 0x224F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228E JUMPI PUSH2 0x228D PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x229B DUP5 DUP3 DUP6 ADD PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22AD DUP2 PUSH2 0x2246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x22A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22EF DUP6 DUP3 DUP7 ADD PUSH2 0x2265 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2300 DUP6 DUP3 DUP7 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x231F DUP2 PUSH2 0x230A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2338 PUSH0 DUP4 ADD DUP5 PUSH2 0x2316 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2353 JUMPI PUSH2 0x2352 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2360 DUP5 DUP3 DUP6 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237E JUMPI PUSH2 0x237D PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x238B DUP5 DUP3 DUP6 ADD PUSH2 0x217C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x23D2 DUP3 PUSH2 0x209B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x239C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2403 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP PUSH2 0x240F DUP3 DUP3 PUSH2 0x23C9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x242E JUMPI PUSH2 0x242D PUSH2 0x239C JUMP JUMPDEST JUMPDEST PUSH2 0x2437 DUP3 PUSH2 0x209B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2464 PUSH2 0x245F DUP5 PUSH2 0x2414 JUMP JUMPDEST PUSH2 0x23FA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2480 JUMPI PUSH2 0x247F PUSH2 0x2398 JUMP JUMPDEST JUMPDEST PUSH2 0x248B DUP5 DUP3 DUP6 PUSH2 0x2444 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24A7 JUMPI PUSH2 0x24A6 PUSH2 0x2394 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24B7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24D7 JUMPI PUSH2 0x24D6 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24E4 DUP7 DUP3 DUP8 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x24F5 DUP7 DUP3 DUP8 ADD PUSH2 0x217C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x1FBC JUMP JUMPDEST JUMPDEST PUSH2 0x2522 DUP7 DUP3 DUP8 ADD PUSH2 0x2493 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2542 JUMPI PUSH2 0x2541 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x254F DUP6 DUP3 DUP7 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2560 DUP6 DUP3 DUP7 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25C1 JUMPI PUSH2 0x25C0 PUSH2 0x256A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25FE DUP3 PUSH2 0x215D JUMP JUMPDEST SWAP2 POP PUSH2 0x2609 DUP4 PUSH2 0x215D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2621 JUMPI PUSH2 0x2620 PUSH2 0x25C7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206578636565647320617661696C61626C PUSH0 DUP3 ADD MSTORE PUSH32 0x652062616C616E63650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2681 PUSH1 0x29 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x268C DUP3 PUSH2 0x2627 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26AE DUP2 PUSH2 0x2675 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742061206D696E74657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E9 PUSH1 0x16 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x26F4 DUP3 PUSH2 0x26B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2716 DUP2 PUSH2 0x26DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2751 PUSH1 0x1B DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x275C DUP3 PUSH2 0x271D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x277E DUP2 PUSH2 0x2745 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x278F DUP3 PUSH2 0x215D JUMP JUMPDEST SWAP2 POP PUSH2 0x279A DUP4 PUSH2 0x215D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27B2 JUMPI PUSH2 0x27B1 PUSH2 0x25C7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x576F756C6420657863656564206D617820737570706C79000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27EC PUSH1 0x17 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x27F7 DUP3 PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2819 DUP2 PUSH2 0x27E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206C6F636B207A65726F20746F6B656E73000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2854 PUSH1 0x17 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x285F DUP3 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2881 DUP2 PUSH2 0x2848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206C6F636B00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28BC PUSH1 0x1C DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x28C7 DUP3 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28E9 DUP2 PUSH2 0x28B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612067616D65206D616E6167657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2924 PUSH1 0x1C DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x292F DUP3 PUSH2 0x28F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2951 DUP2 PUSH2 0x2918 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206275726E2066726F6D207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x298C PUSH1 0x1D DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2997 DUP3 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29B9 DUP2 PUSH2 0x2980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29F4 PUSH1 0x1C DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x29FF DUP3 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A21 DUP2 PUSH2 0x29E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D65206D656368616E696373206275726E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5C PUSH1 0x13 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A67 DUP3 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A85 PUSH0 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2A96 DUP2 PUSH2 0x2A50 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726577617264207A65726F2061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD2 PUSH1 0x1A DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADD DUP3 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AFF DUP2 PUSH2 0x2AC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B19 PUSH0 DUP4 ADD DUP6 PUSH2 0x21CE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B2B DUP2 DUP5 PUSH2 0x20AB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73206C6F636B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B68 PUSH1 0x10 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B73 DUP3 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B95 DUP2 PUSH2 0x2B5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73207374696C6C206C6F636B656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD0 PUSH1 0x13 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDB DUP3 PUSH2 0x2B9C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BFD DUP2 PUSH2 0x2BC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C38 PUSH1 0x10 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C43 DUP3 PUSH2 0x2C04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C65 DUP2 PUSH2 0x2C2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C75 DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C8E PUSH0 DUP4 ADD DUP5 PUSH2 0x2C6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CC8 PUSH1 0x1F DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD3 DUP3 PUSH2 0x2C94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CF5 DUP2 PUSH2 0x2CBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D0F PUSH0 DUP4 ADD DUP7 PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x2D1C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2D29 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D44 PUSH0 DUP4 ADD DUP6 PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x2D51 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D8C PUSH1 0x14 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2D97 DUP3 PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DB9 DUP2 PUSH2 0x2D80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 RETURNDATASIZE 0x22 0xD0 SWAP6 REVERT SDIV XOR 0xDB 0xEC DIV OR 0x4F PC ADD PUSH31 0x74D524CF9F47FF75B19D8D6C9EDDC6F464736F6C634300081A003300000000 ",
							"sourceMap": "416:6175:11:-:0;;;1271:109;;;;;;;;;;1601:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1006:5:3;996:7;;:15;;;;;;;;;;;;;;;;;;1716:1:4;1821:7;:22;;;;1330:42:11::1;2232:4:0;1341:18:11::0;::::1;1361:10;1330;;;:42;;:::i;:::-;;416:6175:::0;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;416:6175:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3970,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GAME_MANAGER_ROLE_1398": {
									"entryPoint": 5225,
									"id": 1398,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LOCK_DURATION_1437": {
									"entryPoint": 2662,
									"id": 1437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_1444": {
									"entryPoint": 2096,
									"id": 1444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1393": {
									"entryPoint": 4150,
									"id": 1393,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1094": {
									"entryPoint": 5373,
									"id": 1094,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1154": {
									"entryPoint": 6571,
									"id": 1154,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1076": {
									"entryPoint": 6410,
									"id": 1076,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 7420,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5511,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 5531,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1043": {
									"entryPoint": 6096,
									"id": 1043,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1319": {
									"entryPoint": 5366,
									"id": 1319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_676": {
									"entryPoint": 6302,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_668": {
									"entryPoint": 6223,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_606": {
									"entryPoint": 6312,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_579": {
									"entryPoint": 5391,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_590": {
									"entryPoint": 7501,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 5765,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1202": {
									"entryPoint": 7034,
									"id": 1202,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_933": {
									"entryPoint": 7180,
									"id": 933,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_622": {
									"entryPoint": 5999,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1010": {
									"entryPoint": 7574,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_830": {
									"entryPoint": 4651,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_854": {
									"entryPoint": 1806,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_789": {
									"entryPoint": 3244,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1565": {
									"entryPoint": 3580,
									"id": 1565,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_767": {
									"entryPoint": 2088,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAvailableBalance_1754": {
									"entryPoint": 2760,
									"id": 1754,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLockTimestamp_1737": {
									"entryPoint": 2235,
									"id": 1737,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLockedTokens_1724": {
									"entryPoint": 2690,
									"id": 1724,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2025,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2054,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3336,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lockTokens_1662": {
									"entryPoint": 2849,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mint_1522": {
									"entryPoint": 2328,
									"id": 1522,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_749": {
									"entryPoint": 1662,
									"id": 749,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1833": {
									"entryPoint": 3313,
									"id": 1833,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_567": {
									"entryPoint": 2669,
									"id": 567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payReward_1613": {
									"entryPoint": 4220,
									"id": 1613,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2112,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4186,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1360": {
									"entryPoint": 5261,
									"id": 1360,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1541,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_758": {
									"entryPoint": 3436,
									"id": 758,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_776": {
									"entryPoint": 1840,
									"id": 776,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1823": {
									"entryPoint": 1849,
									"id": 1823,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_886": {
									"entryPoint": 5465,
									"id": 886,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1788": {
									"entryPoint": 3976,
									"id": 1788,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_813": {
									"entryPoint": 6537,
									"id": 813,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlockTokens_1711": {
									"entryPoint": 4781,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1843": {
									"entryPoint": 2305,
									"id": 1843,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 9298,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 9363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr": {
									"entryPoint": 9408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 11569,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11516,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11014,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 9236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9284,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8333,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 11608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a": {
									"entryPoint": 11060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371": {
									"entryPoint": 10376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2": {
									"entryPoint": 10910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9": {
									"entryPoint": 10013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d": {
									"entryPoint": 11164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a": {
									"entryPoint": 9767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467": {
									"entryPoint": 10272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84": {
									"entryPoint": 10584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 11268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf": {
									"entryPoint": 9909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081": {
									"entryPoint": 10480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27": {
									"entryPoint": 10792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5": {
									"entryPoint": 10688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3": {
									"entryPoint": 10168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:29544:12",
										"nodeType": "YulBlock",
										"src": "0:29544:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:77:12",
													"nodeType": "YulBlock",
													"src": "1860:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:12"
																},
																"nativeSrc": "1871:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:12"
															},
															"nativeSrc": "1871:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:12"
																		},
																		"nativeSrc": "1910:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:12"
																},
																"nativeSrc": "1903:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:12"
															},
															"nativeSrc": "1903:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:139:12"
											},
											{
												"body": {
													"nativeSrc": "1991:54:12",
													"nodeType": "YulBlock",
													"src": "1991:54:12",
													"statements": [
														{
															"nativeSrc": "2001:38:12",
															"nodeType": "YulAssignment",
															"src": "2001:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:12"
																		},
																		"nativeSrc": "2015:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:12"
																		},
																		"nativeSrc": "2031:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:12"
																},
																"nativeSrc": "2011:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:12",
														"nodeType": "YulTypedName",
														"src": "1974:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:12",
														"nodeType": "YulTypedName",
														"src": "1984:6:12",
														"type": ""
													}
												],
												"src": "1943:102:12"
											},
											{
												"body": {
													"nativeSrc": "2143:285:12",
													"nodeType": "YulBlock",
													"src": "2143:285:12",
													"statements": [
														{
															"nativeSrc": "2153:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:12"
																},
																"nativeSrc": "2167:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:12",
															"nodeType": "YulAssignment",
															"src": "2215:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:12"
																},
																"nativeSrc": "2222:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:12"
																		},
																		"nativeSrc": "2337:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:12"
																},
																"nativeSrc": "2302:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:12"
															},
															"nativeSrc": "2302:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:12"
														},
														{
															"nativeSrc": "2376:46:12",
															"nodeType": "YulAssignment",
															"src": "2376:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:12"
																		},
																		"nativeSrc": "2392:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:12"
																},
																"nativeSrc": "2383:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:12",
														"nodeType": "YulTypedName",
														"src": "2124:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:12",
														"nodeType": "YulTypedName",
														"src": "2131:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:12",
														"nodeType": "YulTypedName",
														"src": "2139:3:12",
														"type": ""
													}
												],
												"src": "2051:377:12"
											},
											{
												"body": {
													"nativeSrc": "2552:195:12",
													"nodeType": "YulBlock",
													"src": "2552:195:12",
													"statements": [
														{
															"nativeSrc": "2562:26:12",
															"nodeType": "YulAssignment",
															"src": "2562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:12"
																},
																"nativeSrc": "2570:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:12"
																		},
																		"nativeSrc": "2605:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:12"
																		},
																		"nativeSrc": "2624:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:12"
																},
																"nativeSrc": "2598:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:12"
															},
															"nativeSrc": "2598:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:12"
														},
														{
															"nativeSrc": "2654:86:12",
															"nodeType": "YulAssignment",
															"src": "2654:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:12"
																},
																"nativeSrc": "2662:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:12",
														"nodeType": "YulTypedName",
														"src": "2524:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:12",
														"nodeType": "YulTypedName",
														"src": "2536:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:12",
														"nodeType": "YulTypedName",
														"src": "2547:4:12",
														"type": ""
													}
												],
												"src": "2434:313:12"
											},
											{
												"body": {
													"nativeSrc": "2798:81:12",
													"nodeType": "YulBlock",
													"src": "2798:81:12",
													"statements": [
														{
															"nativeSrc": "2808:65:12",
															"nodeType": "YulAssignment",
															"src": "2808:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:12"
																},
																"nativeSrc": "2819:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:12",
														"nodeType": "YulTypedName",
														"src": "2780:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:12",
														"nodeType": "YulTypedName",
														"src": "2790:7:12",
														"type": ""
													}
												],
												"src": "2753:126:12"
											},
											{
												"body": {
													"nativeSrc": "2930:51:12",
													"nodeType": "YulBlock",
													"src": "2930:51:12",
													"statements": [
														{
															"nativeSrc": "2940:35:12",
															"nodeType": "YulAssignment",
															"src": "2940:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:12"
																},
																"nativeSrc": "2951:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:12",
														"nodeType": "YulTypedName",
														"src": "2912:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:12",
														"nodeType": "YulTypedName",
														"src": "2922:7:12",
														"type": ""
													}
												],
												"src": "2885:96:12"
											},
											{
												"body": {
													"nativeSrc": "3030:79:12",
													"nodeType": "YulBlock",
													"src": "3030:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:12",
																"nodeType": "YulBlock",
																"src": "3087:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:12"
																			},
																			"nativeSrc": "3089:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:12"
																		},
																		"nativeSrc": "3089:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:12"
																				},
																				"nativeSrc": "3060:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:12"
																		},
																		"nativeSrc": "3050:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:12"
																},
																"nativeSrc": "3043:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:12"
															},
															"nativeSrc": "3040:63:12",
															"nodeType": "YulIf",
															"src": "3040:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:12",
														"nodeType": "YulTypedName",
														"src": "3023:5:12",
														"type": ""
													}
												],
												"src": "2987:122:12"
											},
											{
												"body": {
													"nativeSrc": "3167:87:12",
													"nodeType": "YulBlock",
													"src": "3167:87:12",
													"statements": [
														{
															"nativeSrc": "3177:29:12",
															"nodeType": "YulAssignment",
															"src": "3177:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:12"
																},
																"nativeSrc": "3186:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:12"
																},
																"nativeSrc": "3215:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:12"
															},
															"nativeSrc": "3215:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:12",
														"nodeType": "YulTypedName",
														"src": "3145:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:12",
														"nodeType": "YulTypedName",
														"src": "3153:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:12",
														"nodeType": "YulTypedName",
														"src": "3161:5:12",
														"type": ""
													}
												],
												"src": "3115:139:12"
											},
											{
												"body": {
													"nativeSrc": "3305:32:12",
													"nodeType": "YulBlock",
													"src": "3305:32:12",
													"statements": [
														{
															"nativeSrc": "3315:16:12",
															"nodeType": "YulAssignment",
															"src": "3315:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:12",
																"nodeType": "YulIdentifier",
																"src": "3326:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:12",
														"nodeType": "YulTypedName",
														"src": "3287:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:12",
														"nodeType": "YulTypedName",
														"src": "3297:7:12",
														"type": ""
													}
												],
												"src": "3260:77:12"
											},
											{
												"body": {
													"nativeSrc": "3386:79:12",
													"nodeType": "YulBlock",
													"src": "3386:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:12",
																"nodeType": "YulBlock",
																"src": "3443:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:12"
																			},
																			"nativeSrc": "3445:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:12"
																		},
																		"nativeSrc": "3445:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:12"
																				},
																				"nativeSrc": "3416:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:12"
																		},
																		"nativeSrc": "3406:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:12"
																},
																"nativeSrc": "3399:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:12"
															},
															"nativeSrc": "3396:63:12",
															"nodeType": "YulIf",
															"src": "3396:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:12",
														"nodeType": "YulTypedName",
														"src": "3379:5:12",
														"type": ""
													}
												],
												"src": "3343:122:12"
											},
											{
												"body": {
													"nativeSrc": "3523:87:12",
													"nodeType": "YulBlock",
													"src": "3523:87:12",
													"statements": [
														{
															"nativeSrc": "3533:29:12",
															"nodeType": "YulAssignment",
															"src": "3533:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:12"
																},
																"nativeSrc": "3542:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:12"
																},
																"nativeSrc": "3571:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:12"
															},
															"nativeSrc": "3571:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:12",
														"nodeType": "YulTypedName",
														"src": "3501:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:12",
														"nodeType": "YulTypedName",
														"src": "3509:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:12",
														"nodeType": "YulTypedName",
														"src": "3517:5:12",
														"type": ""
													}
												],
												"src": "3471:139:12"
											},
											{
												"body": {
													"nativeSrc": "3699:391:12",
													"nodeType": "YulBlock",
													"src": "3699:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:12",
																"nodeType": "YulBlock",
																"src": "3745:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:12"
																			},
																			"nativeSrc": "3747:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:12"
																		},
																		"nativeSrc": "3747:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:12"
																		},
																		"nativeSrc": "3716:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:12"
																},
																"nativeSrc": "3712:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:12"
															},
															"nativeSrc": "3709:119:12",
															"nodeType": "YulIf",
															"src": "3709:119:12"
														},
														{
															"nativeSrc": "3838:117:12",
															"nodeType": "YulBlock",
															"src": "3838:117:12",
															"statements": [
																{
																	"nativeSrc": "3853:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:12"
																				},
																				"nativeSrc": "3913:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:12"
																		},
																		"nativeSrc": "3892:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:12",
															"nodeType": "YulBlock",
															"src": "3965:118:12",
															"statements": [
																{
																	"nativeSrc": "3980:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:12"
																				},
																				"nativeSrc": "4041:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:12"
																		},
																		"nativeSrc": "4020:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:12",
														"nodeType": "YulTypedName",
														"src": "3661:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:12",
														"nodeType": "YulTypedName",
														"src": "3672:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:12",
														"nodeType": "YulTypedName",
														"src": "3684:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:12",
														"nodeType": "YulTypedName",
														"src": "3692:6:12",
														"type": ""
													}
												],
												"src": "3616:474:12"
											},
											{
												"body": {
													"nativeSrc": "4161:53:12",
													"nodeType": "YulBlock",
													"src": "4161:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:12"
																		},
																		"nativeSrc": "4183:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:12"
																},
																"nativeSrc": "4171:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:12"
															},
															"nativeSrc": "4171:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:12",
														"nodeType": "YulTypedName",
														"src": "4149:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:12",
														"nodeType": "YulTypedName",
														"src": "4156:3:12",
														"type": ""
													}
												],
												"src": "4096:118:12"
											},
											{
												"body": {
													"nativeSrc": "4318:124:12",
													"nodeType": "YulBlock",
													"src": "4318:124:12",
													"statements": [
														{
															"nativeSrc": "4328:26:12",
															"nodeType": "YulAssignment",
															"src": "4328:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:12"
																},
																"nativeSrc": "4336:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:12"
																		},
																		"nativeSrc": "4417:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:12"
																},
																"nativeSrc": "4364:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:12"
															},
															"nativeSrc": "4364:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:12",
														"nodeType": "YulTypedName",
														"src": "4290:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:12",
														"nodeType": "YulTypedName",
														"src": "4302:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:12",
														"nodeType": "YulTypedName",
														"src": "4313:4:12",
														"type": ""
													}
												],
												"src": "4220:222:12"
											},
											{
												"body": {
													"nativeSrc": "4548:519:12",
													"nodeType": "YulBlock",
													"src": "4548:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:12",
																"nodeType": "YulBlock",
																"src": "4594:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:12"
																			},
																			"nativeSrc": "4596:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:12"
																		},
																		"nativeSrc": "4596:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:12"
																		},
																		"nativeSrc": "4565:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:12"
																},
																"nativeSrc": "4561:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:12"
															},
															"nativeSrc": "4558:119:12",
															"nodeType": "YulIf",
															"src": "4558:119:12"
														},
														{
															"nativeSrc": "4687:117:12",
															"nodeType": "YulBlock",
															"src": "4687:117:12",
															"statements": [
																{
																	"nativeSrc": "4702:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:12"
																				},
																				"nativeSrc": "4762:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:12"
																		},
																		"nativeSrc": "4741:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:12",
															"nodeType": "YulBlock",
															"src": "4814:118:12",
															"statements": [
																{
																	"nativeSrc": "4829:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:12"
																				},
																				"nativeSrc": "4890:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:12"
																		},
																		"nativeSrc": "4869:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:12",
															"nodeType": "YulBlock",
															"src": "4942:118:12",
															"statements": [
																{
																	"nativeSrc": "4957:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:12"
																				},
																				"nativeSrc": "5018:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:12"
																		},
																		"nativeSrc": "4997:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:12",
														"nodeType": "YulTypedName",
														"src": "4502:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:12",
														"nodeType": "YulTypedName",
														"src": "4513:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:12",
														"nodeType": "YulTypedName",
														"src": "4525:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:12",
														"nodeType": "YulTypedName",
														"src": "4533:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:12",
														"nodeType": "YulTypedName",
														"src": "4541:6:12",
														"type": ""
													}
												],
												"src": "4448:619:12"
											},
											{
												"body": {
													"nativeSrc": "5118:32:12",
													"nodeType": "YulBlock",
													"src": "5118:32:12",
													"statements": [
														{
															"nativeSrc": "5128:16:12",
															"nodeType": "YulAssignment",
															"src": "5128:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:12",
																"nodeType": "YulIdentifier",
																"src": "5139:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:12",
														"nodeType": "YulTypedName",
														"src": "5100:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:12",
														"nodeType": "YulTypedName",
														"src": "5110:7:12",
														"type": ""
													}
												],
												"src": "5073:77:12"
											},
											{
												"body": {
													"nativeSrc": "5199:79:12",
													"nodeType": "YulBlock",
													"src": "5199:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:12",
																"nodeType": "YulBlock",
																"src": "5256:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:12"
																			},
																			"nativeSrc": "5258:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:12"
																		},
																		"nativeSrc": "5258:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:12"
																				},
																				"nativeSrc": "5229:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:12"
																		},
																		"nativeSrc": "5219:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:12"
																},
																"nativeSrc": "5212:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:12"
															},
															"nativeSrc": "5209:63:12",
															"nodeType": "YulIf",
															"src": "5209:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:12",
														"nodeType": "YulTypedName",
														"src": "5192:5:12",
														"type": ""
													}
												],
												"src": "5156:122:12"
											},
											{
												"body": {
													"nativeSrc": "5336:87:12",
													"nodeType": "YulBlock",
													"src": "5336:87:12",
													"statements": [
														{
															"nativeSrc": "5346:29:12",
															"nodeType": "YulAssignment",
															"src": "5346:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:12"
																},
																"nativeSrc": "5355:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:12"
																},
																"nativeSrc": "5384:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:12"
															},
															"nativeSrc": "5384:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:12",
														"nodeType": "YulTypedName",
														"src": "5314:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:12",
														"nodeType": "YulTypedName",
														"src": "5322:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:12",
														"nodeType": "YulTypedName",
														"src": "5330:5:12",
														"type": ""
													}
												],
												"src": "5284:139:12"
											},
											{
												"body": {
													"nativeSrc": "5495:263:12",
													"nodeType": "YulBlock",
													"src": "5495:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:12",
																"nodeType": "YulBlock",
																"src": "5541:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:12"
																			},
																			"nativeSrc": "5543:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:12"
																		},
																		"nativeSrc": "5543:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:12"
																		},
																		"nativeSrc": "5512:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:12"
																},
																"nativeSrc": "5508:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:12"
															},
															"nativeSrc": "5505:119:12",
															"nodeType": "YulIf",
															"src": "5505:119:12"
														},
														{
															"nativeSrc": "5634:117:12",
															"nodeType": "YulBlock",
															"src": "5634:117:12",
															"statements": [
																{
																	"nativeSrc": "5649:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:12"
																				},
																				"nativeSrc": "5709:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:12"
																		},
																		"nativeSrc": "5688:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:12",
														"nodeType": "YulTypedName",
														"src": "5465:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:12",
														"nodeType": "YulTypedName",
														"src": "5476:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:12",
														"nodeType": "YulTypedName",
														"src": "5488:6:12",
														"type": ""
													}
												],
												"src": "5429:329:12"
											},
											{
												"body": {
													"nativeSrc": "5829:53:12",
													"nodeType": "YulBlock",
													"src": "5829:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:12"
																		},
																		"nativeSrc": "5851:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:12"
																},
																"nativeSrc": "5839:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:12"
															},
															"nativeSrc": "5839:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:12",
														"nodeType": "YulTypedName",
														"src": "5817:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:12",
														"nodeType": "YulTypedName",
														"src": "5824:3:12",
														"type": ""
													}
												],
												"src": "5764:118:12"
											},
											{
												"body": {
													"nativeSrc": "5986:124:12",
													"nodeType": "YulBlock",
													"src": "5986:124:12",
													"statements": [
														{
															"nativeSrc": "5996:26:12",
															"nodeType": "YulAssignment",
															"src": "5996:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:12"
																},
																"nativeSrc": "6004:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:12"
																		},
																		"nativeSrc": "6085:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:12"
																},
																"nativeSrc": "6032:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:12"
															},
															"nativeSrc": "6032:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:12",
														"nodeType": "YulTypedName",
														"src": "5958:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:12",
														"nodeType": "YulTypedName",
														"src": "5970:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:12",
														"nodeType": "YulTypedName",
														"src": "5981:4:12",
														"type": ""
													}
												],
												"src": "5888:222:12"
											},
											{
												"body": {
													"nativeSrc": "6199:391:12",
													"nodeType": "YulBlock",
													"src": "6199:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6245:83:12",
																"nodeType": "YulBlock",
																"src": "6245:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6247:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6247:77:12"
																			},
																			"nativeSrc": "6247:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6247:79:12"
																		},
																		"nativeSrc": "6247:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6220:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6220:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6229:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6229:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6216:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:12"
																		},
																		"nativeSrc": "6216:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6212:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:12"
																},
																"nativeSrc": "6212:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6212:32:12"
															},
															"nativeSrc": "6209:119:12",
															"nodeType": "YulIf",
															"src": "6209:119:12"
														},
														{
															"nativeSrc": "6338:117:12",
															"nodeType": "YulBlock",
															"src": "6338:117:12",
															"statements": [
																{
																	"nativeSrc": "6353:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6353:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6367:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6357:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6357:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6382:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6382:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6417:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6417:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6428:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6428:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6413:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6413:3:12"
																				},
																				"nativeSrc": "6413:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6413:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6437:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6437:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6392:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6392:20:12"
																		},
																		"nativeSrc": "6392:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6382:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6465:118:12",
															"nodeType": "YulBlock",
															"src": "6465:118:12",
															"statements": [
																{
																	"nativeSrc": "6480:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6494:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6484:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6510:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6510:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6545:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6556:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6541:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:12"
																				},
																				"nativeSrc": "6541:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6520:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6520:20:12"
																		},
																		"nativeSrc": "6520:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6510:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6510:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6116:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:12",
														"nodeType": "YulTypedName",
														"src": "6161:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:12",
														"nodeType": "YulTypedName",
														"src": "6172:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:12",
														"nodeType": "YulTypedName",
														"src": "6184:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6192:6:12",
														"nodeType": "YulTypedName",
														"src": "6192:6:12",
														"type": ""
													}
												],
												"src": "6116:474:12"
											},
											{
												"body": {
													"nativeSrc": "6639:43:12",
													"nodeType": "YulBlock",
													"src": "6639:43:12",
													"statements": [
														{
															"nativeSrc": "6649:27:12",
															"nodeType": "YulAssignment",
															"src": "6649:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6664:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6660:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:12"
																},
																"nativeSrc": "6660:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6660:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6649:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6596:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6621:5:12",
														"nodeType": "YulTypedName",
														"src": "6621:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6631:7:12",
														"nodeType": "YulTypedName",
														"src": "6631:7:12",
														"type": ""
													}
												],
												"src": "6596:86:12"
											},
											{
												"body": {
													"nativeSrc": "6749:51:12",
													"nodeType": "YulBlock",
													"src": "6749:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6787:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6771:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "6771:15:12"
																		},
																		"nativeSrc": "6771:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:12"
																},
																"nativeSrc": "6759:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6759:35:12"
															},
															"nativeSrc": "6759:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6759:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6688:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:12",
														"nodeType": "YulTypedName",
														"src": "6737:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:12",
														"nodeType": "YulTypedName",
														"src": "6744:3:12",
														"type": ""
													}
												],
												"src": "6688:112:12"
											},
											{
												"body": {
													"nativeSrc": "6900:120:12",
													"nodeType": "YulBlock",
													"src": "6900:120:12",
													"statements": [
														{
															"nativeSrc": "6910:26:12",
															"nodeType": "YulAssignment",
															"src": "6910:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:12"
																},
																"nativeSrc": "6918:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6986:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:12"
																		},
																		"nativeSrc": "6995:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:12"
																},
																"nativeSrc": "6946:67:12",
																"nodeType": "YulFunctionCall",
																"src": "6946:67:12"
															},
															"nativeSrc": "6946:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "6946:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6806:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6872:9:12",
														"nodeType": "YulTypedName",
														"src": "6872:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6884:6:12",
														"nodeType": "YulTypedName",
														"src": "6884:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6895:4:12",
														"nodeType": "YulTypedName",
														"src": "6895:4:12",
														"type": ""
													}
												],
												"src": "6806:214:12"
											},
											{
												"body": {
													"nativeSrc": "7092:263:12",
													"nodeType": "YulBlock",
													"src": "7092:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7138:83:12",
																"nodeType": "YulBlock",
																"src": "7138:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7140:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7140:77:12"
																			},
																			"nativeSrc": "7140:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7140:79:12"
																		},
																		"nativeSrc": "7140:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7140:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7113:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7113:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7122:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7122:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7109:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:12"
																		},
																		"nativeSrc": "7109:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7134:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7105:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:12"
																},
																"nativeSrc": "7105:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7105:32:12"
															},
															"nativeSrc": "7102:119:12",
															"nodeType": "YulIf",
															"src": "7102:119:12"
														},
														{
															"nativeSrc": "7231:117:12",
															"nodeType": "YulBlock",
															"src": "7231:117:12",
															"statements": [
																{
																	"nativeSrc": "7246:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7246:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7260:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7260:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7250:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7250:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7275:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7275:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7310:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7310:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7321:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7321:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:12"
																				},
																				"nativeSrc": "7306:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7330:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7330:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7285:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7285:20:12"
																		},
																		"nativeSrc": "7285:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7285:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7275:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7275:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7026:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7062:9:12",
														"nodeType": "YulTypedName",
														"src": "7062:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7073:7:12",
														"nodeType": "YulTypedName",
														"src": "7073:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7085:6:12",
														"nodeType": "YulTypedName",
														"src": "7085:6:12",
														"type": ""
													}
												],
												"src": "7026:329:12"
											},
											{
												"body": {
													"nativeSrc": "7427:263:12",
													"nodeType": "YulBlock",
													"src": "7427:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7473:83:12",
																"nodeType": "YulBlock",
																"src": "7473:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7475:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7475:77:12"
																			},
																			"nativeSrc": "7475:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7475:79:12"
																		},
																		"nativeSrc": "7475:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7475:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7448:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7448:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7457:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7457:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7444:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7444:3:12"
																		},
																		"nativeSrc": "7444:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7444:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7469:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7469:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7440:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:12"
																},
																"nativeSrc": "7440:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7440:32:12"
															},
															"nativeSrc": "7437:119:12",
															"nodeType": "YulIf",
															"src": "7437:119:12"
														},
														{
															"nativeSrc": "7566:117:12",
															"nodeType": "YulBlock",
															"src": "7566:117:12",
															"statements": [
																{
																	"nativeSrc": "7581:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7581:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7595:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7595:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7585:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7585:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7610:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7610:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7645:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7645:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7656:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7656:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7641:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7641:3:12"
																				},
																				"nativeSrc": "7641:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7641:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7665:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7665:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7620:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7620:20:12"
																		},
																		"nativeSrc": "7620:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7620:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7610:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7610:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7361:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7397:9:12",
														"nodeType": "YulTypedName",
														"src": "7397:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7408:7:12",
														"nodeType": "YulTypedName",
														"src": "7408:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7420:6:12",
														"nodeType": "YulTypedName",
														"src": "7420:6:12",
														"type": ""
													}
												],
												"src": "7361:329:12"
											},
											{
												"body": {
													"nativeSrc": "7785:28:12",
													"nodeType": "YulBlock",
													"src": "7785:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7802:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7802:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7805:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7805:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7795:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7795:6:12"
																},
																"nativeSrc": "7795:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7795:12:12"
															},
															"nativeSrc": "7795:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "7795:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7696:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7696:117:12"
											},
											{
												"body": {
													"nativeSrc": "7908:28:12",
													"nodeType": "YulBlock",
													"src": "7908:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7925:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7925:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7928:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7918:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7918:6:12"
																},
																"nativeSrc": "7918:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7918:12:12"
															},
															"nativeSrc": "7918:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "7918:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7819:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7819:117:12"
											},
											{
												"body": {
													"nativeSrc": "7970:152:12",
													"nodeType": "YulBlock",
													"src": "7970:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7987:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7987:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7990:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7990:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7980:6:12"
																},
																"nativeSrc": "7980:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7980:88:12"
															},
															"nativeSrc": "7980:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7980:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8084:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8084:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8087:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8087:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8077:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8077:6:12"
																},
																"nativeSrc": "8077:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8077:15:12"
															},
															"nativeSrc": "8077:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8077:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8108:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8108:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8111:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8111:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8101:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8101:6:12"
																},
																"nativeSrc": "8101:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8101:15:12"
															},
															"nativeSrc": "8101:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8101:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7942:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7942:180:12"
											},
											{
												"body": {
													"nativeSrc": "8171:238:12",
													"nodeType": "YulBlock",
													"src": "8171:238:12",
													"statements": [
														{
															"nativeSrc": "8181:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8181:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8203:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8203:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8233:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8233:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8211:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "8211:21:12"
																		},
																		"nativeSrc": "8211:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8211:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8199:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8199:3:12"
																},
																"nativeSrc": "8199:40:12",
																"nodeType": "YulFunctionCall",
																"src": "8199:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8185:10:12",
																	"nodeType": "YulTypedName",
																	"src": "8185:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8350:22:12",
																"nodeType": "YulBlock",
																"src": "8350:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8352:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8352:16:12"
																			},
																			"nativeSrc": "8352:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8352:18:12"
																		},
																		"nativeSrc": "8352:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8352:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8293:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "8293:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8305:18:12",
																				"nodeType": "YulLiteral",
																				"src": "8305:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8290:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8290:2:12"
																		},
																		"nativeSrc": "8290:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8290:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8329:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "8329:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8341:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8341:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8326:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8326:2:12"
																		},
																		"nativeSrc": "8326:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8326:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8287:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8287:2:12"
																},
																"nativeSrc": "8287:62:12",
																"nodeType": "YulFunctionCall",
																"src": "8287:62:12"
															},
															"nativeSrc": "8284:88:12",
															"nodeType": "YulIf",
															"src": "8284:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8388:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8388:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8392:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "8392:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8381:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8381:6:12"
																},
																"nativeSrc": "8381:22:12",
																"nodeType": "YulFunctionCall",
																"src": "8381:22:12"
															},
															"nativeSrc": "8381:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "8381:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8128:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8157:6:12",
														"nodeType": "YulTypedName",
														"src": "8157:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8165:4:12",
														"nodeType": "YulTypedName",
														"src": "8165:4:12",
														"type": ""
													}
												],
												"src": "8128:281:12"
											},
											{
												"body": {
													"nativeSrc": "8456:88:12",
													"nodeType": "YulBlock",
													"src": "8456:88:12",
													"statements": [
														{
															"nativeSrc": "8466:30:12",
															"nodeType": "YulAssignment",
															"src": "8466:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8476:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "8476:18:12"
																},
																"nativeSrc": "8476:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8476:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8466:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8466:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8525:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8525:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8533:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8533:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8505:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "8505:19:12"
																},
																"nativeSrc": "8505:33:12",
																"nodeType": "YulFunctionCall",
																"src": "8505:33:12"
															},
															"nativeSrc": "8505:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "8505:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8415:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8440:4:12",
														"nodeType": "YulTypedName",
														"src": "8440:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8449:6:12",
														"nodeType": "YulTypedName",
														"src": "8449:6:12",
														"type": ""
													}
												],
												"src": "8415:129:12"
											},
											{
												"body": {
													"nativeSrc": "8617:241:12",
													"nodeType": "YulBlock",
													"src": "8617:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8722:22:12",
																"nodeType": "YulBlock",
																"src": "8722:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8724:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8724:16:12"
																			},
																			"nativeSrc": "8724:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8724:18:12"
																		},
																		"nativeSrc": "8724:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8724:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8694:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8694:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8702:18:12",
																		"nodeType": "YulLiteral",
																		"src": "8702:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8691:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8691:2:12"
																},
																"nativeSrc": "8691:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8691:30:12"
															},
															"nativeSrc": "8688:56:12",
															"nodeType": "YulIf",
															"src": "8688:56:12"
														},
														{
															"nativeSrc": "8754:37:12",
															"nodeType": "YulAssignment",
															"src": "8754:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8784:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8762:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "8762:21:12"
																},
																"nativeSrc": "8762:29:12",
																"nodeType": "YulFunctionCall",
																"src": "8762:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8754:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8754:4:12"
																}
															]
														},
														{
															"nativeSrc": "8828:23:12",
															"nodeType": "YulAssignment",
															"src": "8828:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8840:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8840:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8846:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8846:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8836:3:12"
																},
																"nativeSrc": "8836:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8836:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8828:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8828:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "8550:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8601:6:12",
														"nodeType": "YulTypedName",
														"src": "8601:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8612:4:12",
														"nodeType": "YulTypedName",
														"src": "8612:4:12",
														"type": ""
													}
												],
												"src": "8550:308:12"
											},
											{
												"body": {
													"nativeSrc": "8928:84:12",
													"nodeType": "YulBlock",
													"src": "8928:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8952:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8952:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8957:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8957:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8962:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8962:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8939:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8939:12:12"
																},
																"nativeSrc": "8939:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8939:30:12"
															},
															"nativeSrc": "8939:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8939:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8989:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8989:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8994:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8994:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8985:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8985:3:12"
																		},
																		"nativeSrc": "8985:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8985:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9003:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9003:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8978:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8978:6:12"
																},
																"nativeSrc": "8978:27:12",
																"nodeType": "YulFunctionCall",
																"src": "8978:27:12"
															},
															"nativeSrc": "8978:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "8978:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8864:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8910:3:12",
														"nodeType": "YulTypedName",
														"src": "8910:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8915:3:12",
														"nodeType": "YulTypedName",
														"src": "8915:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8920:6:12",
														"nodeType": "YulTypedName",
														"src": "8920:6:12",
														"type": ""
													}
												],
												"src": "8864:148:12"
											},
											{
												"body": {
													"nativeSrc": "9102:341:12",
													"nodeType": "YulBlock",
													"src": "9102:341:12",
													"statements": [
														{
															"nativeSrc": "9112:75:12",
															"nodeType": "YulAssignment",
															"src": "9112:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9179:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9179:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "9137:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "9137:41:12"
																		},
																		"nativeSrc": "9137:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9137:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9121:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "9121:15:12"
																},
																"nativeSrc": "9121:66:12",
																"nodeType": "YulFunctionCall",
																"src": "9121:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9112:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9112:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9203:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9203:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9210:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9210:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9196:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9196:6:12"
																},
																"nativeSrc": "9196:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9196:21:12"
															},
															"nativeSrc": "9196:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9196:21:12"
														},
														{
															"nativeSrc": "9226:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9226:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9241:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9241:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9248:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9248:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9237:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9237:3:12"
																},
																"nativeSrc": "9237:16:12",
																"nodeType": "YulFunctionCall",
																"src": "9237:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9230:3:12",
																	"nodeType": "YulTypedName",
																	"src": "9230:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9291:83:12",
																"nodeType": "YulBlock",
																"src": "9291:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9293:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9293:77:12"
																			},
																			"nativeSrc": "9293:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9293:79:12"
																		},
																		"nativeSrc": "9293:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9293:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9272:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9272:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9277:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9277:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9268:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9268:3:12"
																		},
																		"nativeSrc": "9268:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9268:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9286:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9286:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9265:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9265:2:12"
																},
																"nativeSrc": "9265:25:12",
																"nodeType": "YulFunctionCall",
																"src": "9265:25:12"
															},
															"nativeSrc": "9262:112:12",
															"nodeType": "YulIf",
															"src": "9262:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9420:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9420:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9425:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9425:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9430:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9430:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9383:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "9383:36:12"
																},
																"nativeSrc": "9383:54:12",
																"nodeType": "YulFunctionCall",
																"src": "9383:54:12"
															},
															"nativeSrc": "9383:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "9383:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "9018:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9075:3:12",
														"nodeType": "YulTypedName",
														"src": "9075:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9080:6:12",
														"nodeType": "YulTypedName",
														"src": "9080:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9088:3:12",
														"nodeType": "YulTypedName",
														"src": "9088:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9096:5:12",
														"nodeType": "YulTypedName",
														"src": "9096:5:12",
														"type": ""
													}
												],
												"src": "9018:425:12"
											},
											{
												"body": {
													"nativeSrc": "9525:278:12",
													"nodeType": "YulBlock",
													"src": "9525:278:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9574:83:12",
																"nodeType": "YulBlock",
																"src": "9574:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9576:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9576:77:12"
																			},
																			"nativeSrc": "9576:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9576:79:12"
																		},
																		"nativeSrc": "9576:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9576:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9553:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9553:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9561:4:12",
																						"nodeType": "YulLiteral",
																						"src": "9561:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9549:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9549:3:12"
																				},
																				"nativeSrc": "9549:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9549:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9568:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9568:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9545:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9545:3:12"
																		},
																		"nativeSrc": "9545:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9545:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9538:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9538:6:12"
																},
																"nativeSrc": "9538:35:12",
																"nodeType": "YulFunctionCall",
																"src": "9538:35:12"
															},
															"nativeSrc": "9535:122:12",
															"nodeType": "YulIf",
															"src": "9535:122:12"
														},
														{
															"nativeSrc": "9666:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9666:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9693:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9693:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9680:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "9680:12:12"
																},
																"nativeSrc": "9680:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9680:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9670:6:12",
																	"nodeType": "YulTypedName",
																	"src": "9670:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9709:88:12",
															"nodeType": "YulAssignment",
															"src": "9709:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9770:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9770:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9778:4:12",
																				"nodeType": "YulLiteral",
																				"src": "9778:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9766:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9766:3:12"
																		},
																		"nativeSrc": "9766:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9766:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9785:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9785:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9793:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9793:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9718:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "9718:47:12"
																},
																"nativeSrc": "9718:79:12",
																"nodeType": "YulFunctionCall",
																"src": "9718:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9709:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9709:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "9463:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9503:6:12",
														"nodeType": "YulTypedName",
														"src": "9503:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9511:3:12",
														"nodeType": "YulTypedName",
														"src": "9511:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9519:5:12",
														"nodeType": "YulTypedName",
														"src": "9519:5:12",
														"type": ""
													}
												],
												"src": "9463:340:12"
											},
											{
												"body": {
													"nativeSrc": "9919:689:12",
													"nodeType": "YulBlock",
													"src": "9919:689:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9965:83:12",
																"nodeType": "YulBlock",
																"src": "9965:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9967:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9967:77:12"
																			},
																			"nativeSrc": "9967:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:79:12"
																		},
																		"nativeSrc": "9967:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9940:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9940:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9949:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9949:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9936:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9936:3:12"
																		},
																		"nativeSrc": "9936:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9936:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9961:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9961:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9932:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:12"
																},
																"nativeSrc": "9932:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9932:32:12"
															},
															"nativeSrc": "9929:119:12",
															"nodeType": "YulIf",
															"src": "9929:119:12"
														},
														{
															"nativeSrc": "10058:117:12",
															"nodeType": "YulBlock",
															"src": "10058:117:12",
															"statements": [
																{
																	"nativeSrc": "10073:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10073:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10087:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10087:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10077:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10077:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10102:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10102:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10137:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10137:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10148:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10148:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10133:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10133:3:12"
																				},
																				"nativeSrc": "10133:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10133:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10157:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10157:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10112:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10112:20:12"
																		},
																		"nativeSrc": "10112:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10112:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10102:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10102:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10185:118:12",
															"nodeType": "YulBlock",
															"src": "10185:118:12",
															"statements": [
																{
																	"nativeSrc": "10200:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10200:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10214:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10204:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10204:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10230:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10230:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10265:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10265:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10276:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10276:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10261:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10261:3:12"
																				},
																				"nativeSrc": "10261:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10261:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10285:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10285:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10240:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10240:20:12"
																		},
																		"nativeSrc": "10240:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10240:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10230:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10230:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10313:288:12",
															"nodeType": "YulBlock",
															"src": "10313:288:12",
															"statements": [
																{
																	"nativeSrc": "10328:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10328:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10359:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10359:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10370:2:12",
																						"nodeType": "YulLiteral",
																						"src": "10370:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10355:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10355:3:12"
																				},
																				"nativeSrc": "10355:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10355:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10342:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "10342:12:12"
																		},
																		"nativeSrc": "10342:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10342:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10332:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10332:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10421:83:12",
																		"nodeType": "YulBlock",
																		"src": "10421:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10423:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "10423:77:12"
																					},
																					"nativeSrc": "10423:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "10423:79:12"
																				},
																				"nativeSrc": "10423:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "10423:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10393:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10393:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10401:18:12",
																				"nodeType": "YulLiteral",
																				"src": "10401:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10390:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10390:2:12"
																		},
																		"nativeSrc": "10390:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10390:30:12"
																	},
																	"nativeSrc": "10387:117:12",
																	"nodeType": "YulIf",
																	"src": "10387:117:12"
																},
																{
																	"nativeSrc": "10518:73:12",
																	"nodeType": "YulAssignment",
																	"src": "10518:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10563:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10563:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10574:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10574:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10559:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10559:3:12"
																				},
																				"nativeSrc": "10559:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10559:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10583:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10583:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10528:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "10528:30:12"
																		},
																		"nativeSrc": "10528:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10528:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10518:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10518:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptr",
												"nativeSrc": "9809:799:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9873:9:12",
														"nodeType": "YulTypedName",
														"src": "9873:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9884:7:12",
														"nodeType": "YulTypedName",
														"src": "9884:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9896:6:12",
														"nodeType": "YulTypedName",
														"src": "9896:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9904:6:12",
														"nodeType": "YulTypedName",
														"src": "9904:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9912:6:12",
														"nodeType": "YulTypedName",
														"src": "9912:6:12",
														"type": ""
													}
												],
												"src": "9809:799:12"
											},
											{
												"body": {
													"nativeSrc": "10697:391:12",
													"nodeType": "YulBlock",
													"src": "10697:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10743:83:12",
																"nodeType": "YulBlock",
																"src": "10743:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10745:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10745:77:12"
																			},
																			"nativeSrc": "10745:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:79:12"
																		},
																		"nativeSrc": "10745:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10745:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10718:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10718:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10727:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10727:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10714:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10714:3:12"
																		},
																		"nativeSrc": "10714:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10714:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10739:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10739:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10710:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10710:3:12"
																},
																"nativeSrc": "10710:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10710:32:12"
															},
															"nativeSrc": "10707:119:12",
															"nodeType": "YulIf",
															"src": "10707:119:12"
														},
														{
															"nativeSrc": "10836:117:12",
															"nodeType": "YulBlock",
															"src": "10836:117:12",
															"statements": [
																{
																	"nativeSrc": "10851:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10851:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10865:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10865:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10855:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10855:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10880:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10880:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10915:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10915:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10926:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10926:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10911:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10911:3:12"
																				},
																				"nativeSrc": "10911:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10911:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10935:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10935:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10890:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10890:20:12"
																		},
																		"nativeSrc": "10890:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10890:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10880:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10880:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10963:118:12",
															"nodeType": "YulBlock",
															"src": "10963:118:12",
															"statements": [
																{
																	"nativeSrc": "10978:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10978:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10992:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10992:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10982:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10982:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11008:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11008:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11043:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11043:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11054:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11054:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11039:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11039:3:12"
																				},
																				"nativeSrc": "11039:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11039:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11063:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11063:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11018:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11018:20:12"
																		},
																		"nativeSrc": "11018:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11018:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11008:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11008:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10614:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10659:9:12",
														"nodeType": "YulTypedName",
														"src": "10659:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10670:7:12",
														"nodeType": "YulTypedName",
														"src": "10670:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10682:6:12",
														"nodeType": "YulTypedName",
														"src": "10682:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10690:6:12",
														"nodeType": "YulTypedName",
														"src": "10690:6:12",
														"type": ""
													}
												],
												"src": "10614:474:12"
											},
											{
												"body": {
													"nativeSrc": "11122:152:12",
													"nodeType": "YulBlock",
													"src": "11122:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11139:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11139:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11142:77:12",
																		"nodeType": "YulLiteral",
																		"src": "11142:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11132:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11132:6:12"
																},
																"nativeSrc": "11132:88:12",
																"nodeType": "YulFunctionCall",
																"src": "11132:88:12"
															},
															"nativeSrc": "11132:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "11132:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11236:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11236:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11239:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11239:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11229:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:12"
																},
																"nativeSrc": "11229:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11229:15:12"
															},
															"nativeSrc": "11229:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11229:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11260:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11260:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11263:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11263:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11253:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11253:6:12"
																},
																"nativeSrc": "11253:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11253:15:12"
															},
															"nativeSrc": "11253:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11253:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11094:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11094:180:12"
											},
											{
												"body": {
													"nativeSrc": "11331:269:12",
													"nodeType": "YulBlock",
													"src": "11331:269:12",
													"statements": [
														{
															"nativeSrc": "11341:22:12",
															"nodeType": "YulAssignment",
															"src": "11341:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11355:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11355:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11361:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11361:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11351:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11351:3:12"
																},
																"nativeSrc": "11351:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11351:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11341:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11341:6:12"
																}
															]
														},
														{
															"nativeSrc": "11372:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11372:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11402:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11402:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11408:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11408:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11398:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11398:3:12"
																},
																"nativeSrc": "11398:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11398:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11376:18:12",
																	"nodeType": "YulTypedName",
																	"src": "11376:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11449:51:12",
																"nodeType": "YulBlock",
																"src": "11449:51:12",
																"statements": [
																	{
																		"nativeSrc": "11463:27:12",
																		"nodeType": "YulAssignment",
																		"src": "11463:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11477:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "11477:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11485:4:12",
																					"nodeType": "YulLiteral",
																					"src": "11485:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11473:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11473:3:12"
																			},
																			"nativeSrc": "11473:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11473:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11463:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11463:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11429:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "11429:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11422:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11422:6:12"
																},
																"nativeSrc": "11422:26:12",
																"nodeType": "YulFunctionCall",
																"src": "11422:26:12"
															},
															"nativeSrc": "11419:81:12",
															"nodeType": "YulIf",
															"src": "11419:81:12"
														},
														{
															"body": {
																"nativeSrc": "11552:42:12",
																"nodeType": "YulBlock",
																"src": "11552:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11566:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11566:16:12"
																			},
																			"nativeSrc": "11566:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11566:18:12"
																		},
																		"nativeSrc": "11566:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11566:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11516:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "11516:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11539:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11539:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11547:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11536:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11536:2:12"
																		},
																		"nativeSrc": "11536:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11536:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11513:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11513:2:12"
																},
																"nativeSrc": "11513:38:12",
																"nodeType": "YulFunctionCall",
																"src": "11513:38:12"
															},
															"nativeSrc": "11510:84:12",
															"nodeType": "YulIf",
															"src": "11510:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11280:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11315:4:12",
														"nodeType": "YulTypedName",
														"src": "11315:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11324:6:12",
														"nodeType": "YulTypedName",
														"src": "11324:6:12",
														"type": ""
													}
												],
												"src": "11280:320:12"
											},
											{
												"body": {
													"nativeSrc": "11634:152:12",
													"nodeType": "YulBlock",
													"src": "11634:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11651:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11651:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11654:77:12",
																		"nodeType": "YulLiteral",
																		"src": "11654:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11644:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11644:6:12"
																},
																"nativeSrc": "11644:88:12",
																"nodeType": "YulFunctionCall",
																"src": "11644:88:12"
															},
															"nativeSrc": "11644:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "11644:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11748:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11748:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11751:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11751:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11741:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11741:6:12"
																},
																"nativeSrc": "11741:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11741:15:12"
															},
															"nativeSrc": "11741:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11741:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11772:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11772:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11775:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11775:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11765:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11765:6:12"
																},
																"nativeSrc": "11765:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11765:15:12"
															},
															"nativeSrc": "11765:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11765:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11606:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11606:180:12"
											},
											{
												"body": {
													"nativeSrc": "11837:149:12",
													"nodeType": "YulBlock",
													"src": "11837:149:12",
													"statements": [
														{
															"nativeSrc": "11847:25:12",
															"nodeType": "YulAssignment",
															"src": "11847:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11870:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11870:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11852:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11852:17:12"
																},
																"nativeSrc": "11852:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11852:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11847:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11847:1:12"
																}
															]
														},
														{
															"nativeSrc": "11881:25:12",
															"nodeType": "YulAssignment",
															"src": "11881:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11904:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11904:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11886:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11886:17:12"
																},
																"nativeSrc": "11886:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11886:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11881:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11881:1:12"
																}
															]
														},
														{
															"nativeSrc": "11915:17:12",
															"nodeType": "YulAssignment",
															"src": "11915:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11927:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11927:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11930:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11930:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11923:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11923:3:12"
																},
																"nativeSrc": "11923:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11923:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11915:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11915:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11957:22:12",
																"nodeType": "YulBlock",
																"src": "11957:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11959:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11959:16:12"
																			},
																			"nativeSrc": "11959:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11959:18:12"
																		},
																		"nativeSrc": "11959:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11959:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11948:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11948:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11954:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11954:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11945:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11945:2:12"
																},
																"nativeSrc": "11945:11:12",
																"nodeType": "YulFunctionCall",
																"src": "11945:11:12"
															},
															"nativeSrc": "11942:37:12",
															"nodeType": "YulIf",
															"src": "11942:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11792:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11823:1:12",
														"nodeType": "YulTypedName",
														"src": "11823:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11826:1:12",
														"nodeType": "YulTypedName",
														"src": "11826:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11832:4:12",
														"nodeType": "YulTypedName",
														"src": "11832:4:12",
														"type": ""
													}
												],
												"src": "11792:194:12"
											},
											{
												"body": {
													"nativeSrc": "12098:122:12",
													"nodeType": "YulBlock",
													"src": "12098:122:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12120:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12120:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12128:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12128:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12116:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12116:3:12"
																		},
																		"nativeSrc": "12116:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12116:14:12"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206578636565647320617661696c61626c",
																		"kind": "string",
																		"nativeSrc": "12132:34:12",
																		"nodeType": "YulLiteral",
																		"src": "12132:34:12",
																		"type": "",
																		"value": "Transfer amount exceeds availabl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12109:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12109:6:12"
																},
																"nativeSrc": "12109:58:12",
																"nodeType": "YulFunctionCall",
																"src": "12109:58:12"
															},
															"nativeSrc": "12109:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "12109:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12188:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12188:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12196:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12196:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12184:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12184:3:12"
																		},
																		"nativeSrc": "12184:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12184:15:12"
																	},
																	{
																		"hexValue": "652062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12201:11:12",
																		"nodeType": "YulLiteral",
																		"src": "12201:11:12",
																		"type": "",
																		"value": "e balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12177:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12177:6:12"
																},
																"nativeSrc": "12177:36:12",
																"nodeType": "YulFunctionCall",
																"src": "12177:36:12"
															},
															"nativeSrc": "12177:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "12177:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a",
												"nativeSrc": "11992:228:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12090:6:12",
														"nodeType": "YulTypedName",
														"src": "12090:6:12",
														"type": ""
													}
												],
												"src": "11992:228:12"
											},
											{
												"body": {
													"nativeSrc": "12372:220:12",
													"nodeType": "YulBlock",
													"src": "12372:220:12",
													"statements": [
														{
															"nativeSrc": "12382:74:12",
															"nodeType": "YulAssignment",
															"src": "12382:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12448:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12448:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12453:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12453:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12389:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12389:58:12"
																},
																"nativeSrc": "12389:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12389:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12382:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12382:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12554:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a",
																	"nativeSrc": "12465:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12465:88:12"
																},
																"nativeSrc": "12465:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12465:93:12"
															},
															"nativeSrc": "12465:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12465:93:12"
														},
														{
															"nativeSrc": "12567:19:12",
															"nodeType": "YulAssignment",
															"src": "12567:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12578:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12578:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12583:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12583:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12574:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12574:3:12"
																},
																"nativeSrc": "12574:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12574:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12567:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12567:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12226:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12360:3:12",
														"nodeType": "YulTypedName",
														"src": "12360:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12368:3:12",
														"nodeType": "YulTypedName",
														"src": "12368:3:12",
														"type": ""
													}
												],
												"src": "12226:366:12"
											},
											{
												"body": {
													"nativeSrc": "12769:248:12",
													"nodeType": "YulBlock",
													"src": "12769:248:12",
													"statements": [
														{
															"nativeSrc": "12779:26:12",
															"nodeType": "YulAssignment",
															"src": "12779:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12791:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12791:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12802:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12802:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12787:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12787:3:12"
																},
																"nativeSrc": "12787:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12787:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12779:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12779:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12826:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12826:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12837:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12837:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12822:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12822:3:12"
																		},
																		"nativeSrc": "12822:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12822:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12845:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12845:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12851:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12851:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12841:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12841:3:12"
																		},
																		"nativeSrc": "12841:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12841:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12815:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12815:6:12"
																},
																"nativeSrc": "12815:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12815:47:12"
															},
															"nativeSrc": "12815:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12815:47:12"
														},
														{
															"nativeSrc": "12871:139:12",
															"nodeType": "YulAssignment",
															"src": "12871:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13005:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13005:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12879:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12879:124:12"
																},
																"nativeSrc": "12879:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12879:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12871:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12871:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12598:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12749:9:12",
														"nodeType": "YulTypedName",
														"src": "12749:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12764:4:12",
														"nodeType": "YulTypedName",
														"src": "12764:4:12",
														"type": ""
													}
												],
												"src": "12598:419:12"
											},
											{
												"body": {
													"nativeSrc": "13129:66:12",
													"nodeType": "YulBlock",
													"src": "13129:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13151:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13151:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13159:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13159:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13147:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13147:3:12"
																		},
																		"nativeSrc": "13147:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13147:14:12"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742061206d696e746572",
																		"kind": "string",
																		"nativeSrc": "13163:24:12",
																		"nodeType": "YulLiteral",
																		"src": "13163:24:12",
																		"type": "",
																		"value": "Caller is not a minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13140:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13140:6:12"
																},
																"nativeSrc": "13140:48:12",
																"nodeType": "YulFunctionCall",
																"src": "13140:48:12"
															},
															"nativeSrc": "13140:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "13140:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
												"nativeSrc": "13023:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13121:6:12",
														"nodeType": "YulTypedName",
														"src": "13121:6:12",
														"type": ""
													}
												],
												"src": "13023:172:12"
											},
											{
												"body": {
													"nativeSrc": "13347:220:12",
													"nodeType": "YulBlock",
													"src": "13347:220:12",
													"statements": [
														{
															"nativeSrc": "13357:74:12",
															"nodeType": "YulAssignment",
															"src": "13357:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13423:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13423:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13428:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13428:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13364:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13364:58:12"
																},
																"nativeSrc": "13364:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13364:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13357:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13357:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13529:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13529:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
																	"nativeSrc": "13440:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13440:88:12"
																},
																"nativeSrc": "13440:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13440:93:12"
															},
															"nativeSrc": "13440:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13440:93:12"
														},
														{
															"nativeSrc": "13542:19:12",
															"nodeType": "YulAssignment",
															"src": "13542:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13553:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13553:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13558:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13558:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13549:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13549:3:12"
																},
																"nativeSrc": "13549:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13549:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13542:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13542:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13201:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13335:3:12",
														"nodeType": "YulTypedName",
														"src": "13335:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13343:3:12",
														"nodeType": "YulTypedName",
														"src": "13343:3:12",
														"type": ""
													}
												],
												"src": "13201:366:12"
											},
											{
												"body": {
													"nativeSrc": "13744:248:12",
													"nodeType": "YulBlock",
													"src": "13744:248:12",
													"statements": [
														{
															"nativeSrc": "13754:26:12",
															"nodeType": "YulAssignment",
															"src": "13754:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13766:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13766:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13777:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13777:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13762:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13762:3:12"
																},
																"nativeSrc": "13762:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13762:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13754:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13754:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13801:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13801:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13812:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13812:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13797:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13797:3:12"
																		},
																		"nativeSrc": "13797:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13797:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13820:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13820:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13826:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13826:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13816:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13816:3:12"
																		},
																		"nativeSrc": "13816:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13816:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13790:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13790:6:12"
																},
																"nativeSrc": "13790:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13790:47:12"
															},
															"nativeSrc": "13790:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13790:47:12"
														},
														{
															"nativeSrc": "13846:139:12",
															"nodeType": "YulAssignment",
															"src": "13846:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13980:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13980:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13854:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13854:124:12"
																},
																"nativeSrc": "13854:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13854:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13846:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13846:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13573:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13724:9:12",
														"nodeType": "YulTypedName",
														"src": "13724:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13739:4:12",
														"nodeType": "YulTypedName",
														"src": "13739:4:12",
														"type": ""
													}
												],
												"src": "13573:419:12"
											},
											{
												"body": {
													"nativeSrc": "14104:71:12",
													"nodeType": "YulBlock",
													"src": "14104:71:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14126:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14126:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14134:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14134:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14122:3:12"
																		},
																		"nativeSrc": "14122:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14122:14:12"
																	},
																	{
																		"hexValue": "43616e6e6f74206d696e7420746f207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "14138:29:12",
																		"nodeType": "YulLiteral",
																		"src": "14138:29:12",
																		"type": "",
																		"value": "Cannot mint to zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14115:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14115:6:12"
																},
																"nativeSrc": "14115:53:12",
																"nodeType": "YulFunctionCall",
																"src": "14115:53:12"
															},
															"nativeSrc": "14115:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "14115:53:12"
														}
													]
												},
												"name": "store_literal_in_memory_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9",
												"nativeSrc": "13998:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14096:6:12",
														"nodeType": "YulTypedName",
														"src": "14096:6:12",
														"type": ""
													}
												],
												"src": "13998:177:12"
											},
											{
												"body": {
													"nativeSrc": "14327:220:12",
													"nodeType": "YulBlock",
													"src": "14327:220:12",
													"statements": [
														{
															"nativeSrc": "14337:74:12",
															"nodeType": "YulAssignment",
															"src": "14337:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14403:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14403:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14408:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14408:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14344:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14344:58:12"
																},
																"nativeSrc": "14344:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14344:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14337:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14337:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14509:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14509:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9",
																	"nativeSrc": "14420:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14420:88:12"
																},
																"nativeSrc": "14420:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14420:93:12"
															},
															"nativeSrc": "14420:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14420:93:12"
														},
														{
															"nativeSrc": "14522:19:12",
															"nodeType": "YulAssignment",
															"src": "14522:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14533:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14533:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14538:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14538:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14529:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14529:3:12"
																},
																"nativeSrc": "14529:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14529:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14522:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14522:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14181:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14315:3:12",
														"nodeType": "YulTypedName",
														"src": "14315:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14323:3:12",
														"nodeType": "YulTypedName",
														"src": "14323:3:12",
														"type": ""
													}
												],
												"src": "14181:366:12"
											},
											{
												"body": {
													"nativeSrc": "14724:248:12",
													"nodeType": "YulBlock",
													"src": "14724:248:12",
													"statements": [
														{
															"nativeSrc": "14734:26:12",
															"nodeType": "YulAssignment",
															"src": "14734:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14746:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14746:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14757:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14757:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14742:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14742:3:12"
																},
																"nativeSrc": "14742:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14742:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14734:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14734:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14781:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14781:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14792:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14792:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14777:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14777:3:12"
																		},
																		"nativeSrc": "14777:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14777:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14800:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14800:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14806:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14806:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14796:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14796:3:12"
																		},
																		"nativeSrc": "14796:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14796:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14770:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14770:6:12"
																},
																"nativeSrc": "14770:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14770:47:12"
															},
															"nativeSrc": "14770:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14770:47:12"
														},
														{
															"nativeSrc": "14826:139:12",
															"nodeType": "YulAssignment",
															"src": "14826:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14960:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14960:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14834:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14834:124:12"
																},
																"nativeSrc": "14834:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14834:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14826:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14826:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14553:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14704:9:12",
														"nodeType": "YulTypedName",
														"src": "14704:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14719:4:12",
														"nodeType": "YulTypedName",
														"src": "14719:4:12",
														"type": ""
													}
												],
												"src": "14553:419:12"
											},
											{
												"body": {
													"nativeSrc": "15022:147:12",
													"nodeType": "YulBlock",
													"src": "15022:147:12",
													"statements": [
														{
															"nativeSrc": "15032:25:12",
															"nodeType": "YulAssignment",
															"src": "15032:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15055:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15055:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15037:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15037:17:12"
																},
																"nativeSrc": "15037:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15037:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15032:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15032:1:12"
																}
															]
														},
														{
															"nativeSrc": "15066:25:12",
															"nodeType": "YulAssignment",
															"src": "15066:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15089:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15089:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15071:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15071:17:12"
																},
																"nativeSrc": "15071:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15071:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15066:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15066:1:12"
																}
															]
														},
														{
															"nativeSrc": "15100:16:12",
															"nodeType": "YulAssignment",
															"src": "15100:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15111:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15111:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15114:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15114:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15107:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15107:3:12"
																},
																"nativeSrc": "15107:9:12",
																"nodeType": "YulFunctionCall",
																"src": "15107:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15100:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15100:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15140:22:12",
																"nodeType": "YulBlock",
																"src": "15140:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15142:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15142:16:12"
																			},
																			"nativeSrc": "15142:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15142:18:12"
																		},
																		"nativeSrc": "15142:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15142:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15132:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15132:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15135:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15135:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15129:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15129:2:12"
																},
																"nativeSrc": "15129:10:12",
																"nodeType": "YulFunctionCall",
																"src": "15129:10:12"
															},
															"nativeSrc": "15126:36:12",
															"nodeType": "YulIf",
															"src": "15126:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14978:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15009:1:12",
														"nodeType": "YulTypedName",
														"src": "15009:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15012:1:12",
														"nodeType": "YulTypedName",
														"src": "15012:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15018:3:12",
														"nodeType": "YulTypedName",
														"src": "15018:3:12",
														"type": ""
													}
												],
												"src": "14978:191:12"
											},
											{
												"body": {
													"nativeSrc": "15281:67:12",
													"nodeType": "YulBlock",
													"src": "15281:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15303:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15303:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15311:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15311:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15299:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15299:3:12"
																		},
																		"nativeSrc": "15299:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15299:14:12"
																	},
																	{
																		"hexValue": "576f756c6420657863656564206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "15315:25:12",
																		"nodeType": "YulLiteral",
																		"src": "15315:25:12",
																		"type": "",
																		"value": "Would exceed max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15292:6:12"
																},
																"nativeSrc": "15292:49:12",
																"nodeType": "YulFunctionCall",
																"src": "15292:49:12"
															},
															"nativeSrc": "15292:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "15292:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3",
												"nativeSrc": "15175:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15273:6:12",
														"nodeType": "YulTypedName",
														"src": "15273:6:12",
														"type": ""
													}
												],
												"src": "15175:173:12"
											},
											{
												"body": {
													"nativeSrc": "15500:220:12",
													"nodeType": "YulBlock",
													"src": "15500:220:12",
													"statements": [
														{
															"nativeSrc": "15510:74:12",
															"nodeType": "YulAssignment",
															"src": "15510:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15576:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15576:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15581:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15581:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15517:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15517:58:12"
																},
																"nativeSrc": "15517:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15517:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15510:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15510:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15682:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15682:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3",
																	"nativeSrc": "15593:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15593:88:12"
																},
																"nativeSrc": "15593:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15593:93:12"
															},
															"nativeSrc": "15593:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15593:93:12"
														},
														{
															"nativeSrc": "15695:19:12",
															"nodeType": "YulAssignment",
															"src": "15695:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15706:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15706:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15711:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15711:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15702:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15702:3:12"
																},
																"nativeSrc": "15702:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15702:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15695:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15695:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15354:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15488:3:12",
														"nodeType": "YulTypedName",
														"src": "15488:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15496:3:12",
														"nodeType": "YulTypedName",
														"src": "15496:3:12",
														"type": ""
													}
												],
												"src": "15354:366:12"
											},
											{
												"body": {
													"nativeSrc": "15897:248:12",
													"nodeType": "YulBlock",
													"src": "15897:248:12",
													"statements": [
														{
															"nativeSrc": "15907:26:12",
															"nodeType": "YulAssignment",
															"src": "15907:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15919:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15919:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15930:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15930:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15915:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15915:3:12"
																},
																"nativeSrc": "15915:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15915:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15907:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15907:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15954:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15954:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15965:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15965:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15950:3:12"
																		},
																		"nativeSrc": "15950:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15950:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15973:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15973:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15979:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15979:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15969:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15969:3:12"
																		},
																		"nativeSrc": "15969:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15969:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15943:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15943:6:12"
																},
																"nativeSrc": "15943:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15943:47:12"
															},
															"nativeSrc": "15943:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15943:47:12"
														},
														{
															"nativeSrc": "15999:139:12",
															"nodeType": "YulAssignment",
															"src": "15999:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16133:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16133:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16007:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16007:124:12"
																},
																"nativeSrc": "16007:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16007:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15999:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15999:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15726:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15877:9:12",
														"nodeType": "YulTypedName",
														"src": "15877:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15892:4:12",
														"nodeType": "YulTypedName",
														"src": "15892:4:12",
														"type": ""
													}
												],
												"src": "15726:419:12"
											},
											{
												"body": {
													"nativeSrc": "16257:67:12",
													"nodeType": "YulBlock",
													"src": "16257:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16279:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16279:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16287:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16287:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16275:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16275:3:12"
																		},
																		"nativeSrc": "16275:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16275:14:12"
																	},
																	{
																		"hexValue": "43616e6e6f74206c6f636b207a65726f20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "16291:25:12",
																		"nodeType": "YulLiteral",
																		"src": "16291:25:12",
																		"type": "",
																		"value": "Cannot lock zero tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16268:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16268:6:12"
																},
																"nativeSrc": "16268:49:12",
																"nodeType": "YulFunctionCall",
																"src": "16268:49:12"
															},
															"nativeSrc": "16268:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "16268:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467",
												"nativeSrc": "16151:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16249:6:12",
														"nodeType": "YulTypedName",
														"src": "16249:6:12",
														"type": ""
													}
												],
												"src": "16151:173:12"
											},
											{
												"body": {
													"nativeSrc": "16476:220:12",
													"nodeType": "YulBlock",
													"src": "16476:220:12",
													"statements": [
														{
															"nativeSrc": "16486:74:12",
															"nodeType": "YulAssignment",
															"src": "16486:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16552:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16552:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16557:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16557:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16493:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16493:58:12"
																},
																"nativeSrc": "16493:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16493:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16486:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16658:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16658:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467",
																	"nativeSrc": "16569:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16569:88:12"
																},
																"nativeSrc": "16569:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16569:93:12"
															},
															"nativeSrc": "16569:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16569:93:12"
														},
														{
															"nativeSrc": "16671:19:12",
															"nodeType": "YulAssignment",
															"src": "16671:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16682:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16682:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16687:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16687:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16678:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16678:3:12"
																},
																"nativeSrc": "16678:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16678:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16671:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16671:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16330:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16464:3:12",
														"nodeType": "YulTypedName",
														"src": "16464:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16472:3:12",
														"nodeType": "YulTypedName",
														"src": "16472:3:12",
														"type": ""
													}
												],
												"src": "16330:366:12"
											},
											{
												"body": {
													"nativeSrc": "16873:248:12",
													"nodeType": "YulBlock",
													"src": "16873:248:12",
													"statements": [
														{
															"nativeSrc": "16883:26:12",
															"nodeType": "YulAssignment",
															"src": "16883:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16895:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16895:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16906:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16906:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16891:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16891:3:12"
																},
																"nativeSrc": "16891:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16891:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16883:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16883:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16930:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16930:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16941:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16941:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16926:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16926:3:12"
																		},
																		"nativeSrc": "16926:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16926:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16949:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16949:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16955:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16955:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16945:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16945:3:12"
																		},
																		"nativeSrc": "16945:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16945:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16919:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16919:6:12"
																},
																"nativeSrc": "16919:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16919:47:12"
															},
															"nativeSrc": "16919:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16919:47:12"
														},
														{
															"nativeSrc": "16975:139:12",
															"nodeType": "YulAssignment",
															"src": "16975:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17109:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17109:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16983:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16983:124:12"
																},
																"nativeSrc": "16983:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16983:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16975:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16975:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16702:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16853:9:12",
														"nodeType": "YulTypedName",
														"src": "16853:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16868:4:12",
														"nodeType": "YulTypedName",
														"src": "16868:4:12",
														"type": ""
													}
												],
												"src": "16702:419:12"
											},
											{
												"body": {
													"nativeSrc": "17233:72:12",
													"nodeType": "YulBlock",
													"src": "17233:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17255:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17255:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17263:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17263:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17251:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17251:3:12"
																		},
																		"nativeSrc": "17251:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17251:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f206c6f636b",
																		"kind": "string",
																		"nativeSrc": "17267:30:12",
																		"nodeType": "YulLiteral",
																		"src": "17267:30:12",
																		"type": "",
																		"value": "Insufficient balance to lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17244:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17244:6:12"
																},
																"nativeSrc": "17244:54:12",
																"nodeType": "YulFunctionCall",
																"src": "17244:54:12"
															},
															"nativeSrc": "17244:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "17244:54:12"
														}
													]
												},
												"name": "store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371",
												"nativeSrc": "17127:178:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17225:6:12",
														"nodeType": "YulTypedName",
														"src": "17225:6:12",
														"type": ""
													}
												],
												"src": "17127:178:12"
											},
											{
												"body": {
													"nativeSrc": "17457:220:12",
													"nodeType": "YulBlock",
													"src": "17457:220:12",
													"statements": [
														{
															"nativeSrc": "17467:74:12",
															"nodeType": "YulAssignment",
															"src": "17467:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17533:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17533:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17538:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17538:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17474:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17474:58:12"
																},
																"nativeSrc": "17474:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17474:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17467:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17467:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17639:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17639:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371",
																	"nativeSrc": "17550:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17550:88:12"
																},
																"nativeSrc": "17550:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17550:93:12"
															},
															"nativeSrc": "17550:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17550:93:12"
														},
														{
															"nativeSrc": "17652:19:12",
															"nodeType": "YulAssignment",
															"src": "17652:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17663:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17663:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17668:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17668:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17659:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17659:3:12"
																},
																"nativeSrc": "17659:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17659:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17652:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17652:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17311:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17445:3:12",
														"nodeType": "YulTypedName",
														"src": "17445:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17453:3:12",
														"nodeType": "YulTypedName",
														"src": "17453:3:12",
														"type": ""
													}
												],
												"src": "17311:366:12"
											},
											{
												"body": {
													"nativeSrc": "17854:248:12",
													"nodeType": "YulBlock",
													"src": "17854:248:12",
													"statements": [
														{
															"nativeSrc": "17864:26:12",
															"nodeType": "YulAssignment",
															"src": "17864:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17876:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17876:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17887:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17887:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17872:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17872:3:12"
																},
																"nativeSrc": "17872:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17872:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17864:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17864:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17911:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17911:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17922:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17922:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17907:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17907:3:12"
																		},
																		"nativeSrc": "17907:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17907:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17930:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17930:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17936:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17936:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17926:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17926:3:12"
																		},
																		"nativeSrc": "17926:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17926:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17900:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17900:6:12"
																},
																"nativeSrc": "17900:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17900:47:12"
															},
															"nativeSrc": "17900:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17900:47:12"
														},
														{
															"nativeSrc": "17956:139:12",
															"nodeType": "YulAssignment",
															"src": "17956:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18090:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18090:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17964:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17964:124:12"
																},
																"nativeSrc": "17964:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17964:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17956:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17956:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17683:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17834:9:12",
														"nodeType": "YulTypedName",
														"src": "17834:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17849:4:12",
														"nodeType": "YulTypedName",
														"src": "17849:4:12",
														"type": ""
													}
												],
												"src": "17683:419:12"
											},
											{
												"body": {
													"nativeSrc": "18214:72:12",
													"nodeType": "YulBlock",
													"src": "18214:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18236:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18236:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18244:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18244:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18232:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18232:3:12"
																		},
																		"nativeSrc": "18232:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18232:14:12"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420612067616d65206d616e61676572",
																		"kind": "string",
																		"nativeSrc": "18248:30:12",
																		"nodeType": "YulLiteral",
																		"src": "18248:30:12",
																		"type": "",
																		"value": "Caller is not a game manager"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18225:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18225:6:12"
																},
																"nativeSrc": "18225:54:12",
																"nodeType": "YulFunctionCall",
																"src": "18225:54:12"
															},
															"nativeSrc": "18225:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "18225:54:12"
														}
													]
												},
												"name": "store_literal_in_memory_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081",
												"nativeSrc": "18108:178:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18206:6:12",
														"nodeType": "YulTypedName",
														"src": "18206:6:12",
														"type": ""
													}
												],
												"src": "18108:178:12"
											},
											{
												"body": {
													"nativeSrc": "18438:220:12",
													"nodeType": "YulBlock",
													"src": "18438:220:12",
													"statements": [
														{
															"nativeSrc": "18448:74:12",
															"nodeType": "YulAssignment",
															"src": "18448:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18514:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18514:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18519:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18519:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18455:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "18455:58:12"
																},
																"nativeSrc": "18455:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18455:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18448:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18448:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18620:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18620:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081",
																	"nativeSrc": "18531:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "18531:88:12"
																},
																"nativeSrc": "18531:93:12",
																"nodeType": "YulFunctionCall",
																"src": "18531:93:12"
															},
															"nativeSrc": "18531:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "18531:93:12"
														},
														{
															"nativeSrc": "18633:19:12",
															"nodeType": "YulAssignment",
															"src": "18633:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18644:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18644:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18649:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18649:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18640:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18640:3:12"
																},
																"nativeSrc": "18640:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18640:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18633:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18292:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18426:3:12",
														"nodeType": "YulTypedName",
														"src": "18426:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18434:3:12",
														"nodeType": "YulTypedName",
														"src": "18434:3:12",
														"type": ""
													}
												],
												"src": "18292:366:12"
											},
											{
												"body": {
													"nativeSrc": "18835:248:12",
													"nodeType": "YulBlock",
													"src": "18835:248:12",
													"statements": [
														{
															"nativeSrc": "18845:26:12",
															"nodeType": "YulAssignment",
															"src": "18845:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18857:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18857:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18868:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18868:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18853:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18853:3:12"
																},
																"nativeSrc": "18853:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18853:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18845:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18845:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18892:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18892:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18903:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18903:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18888:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18888:3:12"
																		},
																		"nativeSrc": "18888:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18888:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18911:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18911:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18917:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18917:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18907:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18907:3:12"
																		},
																		"nativeSrc": "18907:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18907:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18881:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18881:6:12"
																},
																"nativeSrc": "18881:47:12",
																"nodeType": "YulFunctionCall",
																"src": "18881:47:12"
															},
															"nativeSrc": "18881:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "18881:47:12"
														},
														{
															"nativeSrc": "18937:139:12",
															"nodeType": "YulAssignment",
															"src": "18937:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19071:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19071:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18945:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "18945:124:12"
																},
																"nativeSrc": "18945:131:12",
																"nodeType": "YulFunctionCall",
																"src": "18945:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18937:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18937:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18664:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18815:9:12",
														"nodeType": "YulTypedName",
														"src": "18815:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18830:4:12",
														"nodeType": "YulTypedName",
														"src": "18830:4:12",
														"type": ""
													}
												],
												"src": "18664:419:12"
											},
											{
												"body": {
													"nativeSrc": "19195:73:12",
													"nodeType": "YulBlock",
													"src": "19195:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19217:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "19217:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19225:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19225:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19213:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19213:3:12"
																		},
																		"nativeSrc": "19213:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19213:14:12"
																	},
																	{
																		"hexValue": "43616e6e6f74206275726e2066726f6d207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "19229:31:12",
																		"nodeType": "YulLiteral",
																		"src": "19229:31:12",
																		"type": "",
																		"value": "Cannot burn from zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19206:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19206:6:12"
																},
																"nativeSrc": "19206:55:12",
																"nodeType": "YulFunctionCall",
																"src": "19206:55:12"
															},
															"nativeSrc": "19206:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "19206:55:12"
														}
													]
												},
												"name": "store_literal_in_memory_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84",
												"nativeSrc": "19089:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19187:6:12",
														"nodeType": "YulTypedName",
														"src": "19187:6:12",
														"type": ""
													}
												],
												"src": "19089:179:12"
											},
											{
												"body": {
													"nativeSrc": "19420:220:12",
													"nodeType": "YulBlock",
													"src": "19420:220:12",
													"statements": [
														{
															"nativeSrc": "19430:74:12",
															"nodeType": "YulAssignment",
															"src": "19430:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19496:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19496:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19501:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19501:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19437:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "19437:58:12"
																},
																"nativeSrc": "19437:67:12",
																"nodeType": "YulFunctionCall",
																"src": "19437:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19430:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19430:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19602:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19602:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84",
																	"nativeSrc": "19513:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "19513:88:12"
																},
																"nativeSrc": "19513:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19513:93:12"
															},
															"nativeSrc": "19513:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "19513:93:12"
														},
														{
															"nativeSrc": "19615:19:12",
															"nodeType": "YulAssignment",
															"src": "19615:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19626:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19626:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19631:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19631:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19622:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19622:3:12"
																},
																"nativeSrc": "19622:12:12",
																"nodeType": "YulFunctionCall",
																"src": "19622:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19615:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19274:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19408:3:12",
														"nodeType": "YulTypedName",
														"src": "19408:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19416:3:12",
														"nodeType": "YulTypedName",
														"src": "19416:3:12",
														"type": ""
													}
												],
												"src": "19274:366:12"
											},
											{
												"body": {
													"nativeSrc": "19817:248:12",
													"nodeType": "YulBlock",
													"src": "19817:248:12",
													"statements": [
														{
															"nativeSrc": "19827:26:12",
															"nodeType": "YulAssignment",
															"src": "19827:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19839:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19839:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19850:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19850:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19835:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19835:3:12"
																},
																"nativeSrc": "19835:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19835:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19827:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19827:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19874:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19874:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19885:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19885:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19870:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19870:3:12"
																		},
																		"nativeSrc": "19870:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19870:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19893:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19893:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19899:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19899:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19889:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19889:3:12"
																		},
																		"nativeSrc": "19889:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19889:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19863:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19863:6:12"
																},
																"nativeSrc": "19863:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19863:47:12"
															},
															"nativeSrc": "19863:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19863:47:12"
														},
														{
															"nativeSrc": "19919:139:12",
															"nodeType": "YulAssignment",
															"src": "19919:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20053:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20053:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19927:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "19927:124:12"
																},
																"nativeSrc": "19927:131:12",
																"nodeType": "YulFunctionCall",
																"src": "19927:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19919:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19919:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19646:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19797:9:12",
														"nodeType": "YulTypedName",
														"src": "19797:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19812:4:12",
														"nodeType": "YulTypedName",
														"src": "19812:4:12",
														"type": ""
													}
												],
												"src": "19646:419:12"
											},
											{
												"body": {
													"nativeSrc": "20177:72:12",
													"nodeType": "YulBlock",
													"src": "20177:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20199:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20199:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20207:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20207:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20195:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20195:3:12"
																		},
																		"nativeSrc": "20195:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20195:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f206275726e",
																		"kind": "string",
																		"nativeSrc": "20211:30:12",
																		"nodeType": "YulLiteral",
																		"src": "20211:30:12",
																		"type": "",
																		"value": "Insufficient balance to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20188:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20188:6:12"
																},
																"nativeSrc": "20188:54:12",
																"nodeType": "YulFunctionCall",
																"src": "20188:54:12"
															},
															"nativeSrc": "20188:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "20188:54:12"
														}
													]
												},
												"name": "store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
												"nativeSrc": "20071:178:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20169:6:12",
														"nodeType": "YulTypedName",
														"src": "20169:6:12",
														"type": ""
													}
												],
												"src": "20071:178:12"
											},
											{
												"body": {
													"nativeSrc": "20401:220:12",
													"nodeType": "YulBlock",
													"src": "20401:220:12",
													"statements": [
														{
															"nativeSrc": "20411:74:12",
															"nodeType": "YulAssignment",
															"src": "20411:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20477:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20477:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20482:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20482:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20418:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "20418:58:12"
																},
																"nativeSrc": "20418:67:12",
																"nodeType": "YulFunctionCall",
																"src": "20418:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20411:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20411:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20583:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20583:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																	"nativeSrc": "20494:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "20494:88:12"
																},
																"nativeSrc": "20494:93:12",
																"nodeType": "YulFunctionCall",
																"src": "20494:93:12"
															},
															"nativeSrc": "20494:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "20494:93:12"
														},
														{
															"nativeSrc": "20596:19:12",
															"nodeType": "YulAssignment",
															"src": "20596:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20607:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20607:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20612:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20612:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20603:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20603:3:12"
																},
																"nativeSrc": "20603:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20603:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20596:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20596:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20255:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20389:3:12",
														"nodeType": "YulTypedName",
														"src": "20389:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20397:3:12",
														"nodeType": "YulTypedName",
														"src": "20397:3:12",
														"type": ""
													}
												],
												"src": "20255:366:12"
											},
											{
												"body": {
													"nativeSrc": "20798:248:12",
													"nodeType": "YulBlock",
													"src": "20798:248:12",
													"statements": [
														{
															"nativeSrc": "20808:26:12",
															"nodeType": "YulAssignment",
															"src": "20808:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20820:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20820:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20831:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20831:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20816:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20816:3:12"
																},
																"nativeSrc": "20816:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20816:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20808:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20808:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20855:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20855:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20866:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20866:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20851:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20851:3:12"
																		},
																		"nativeSrc": "20851:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20851:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20874:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20874:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20880:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20880:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20870:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20870:3:12"
																		},
																		"nativeSrc": "20870:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20870:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20844:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20844:6:12"
																},
																"nativeSrc": "20844:47:12",
																"nodeType": "YulFunctionCall",
																"src": "20844:47:12"
															},
															"nativeSrc": "20844:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "20844:47:12"
														},
														{
															"nativeSrc": "20900:139:12",
															"nodeType": "YulAssignment",
															"src": "20900:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21034:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21034:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20908:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "20908:124:12"
																},
																"nativeSrc": "20908:131:12",
																"nodeType": "YulFunctionCall",
																"src": "20908:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20900:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20900:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20627:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20778:9:12",
														"nodeType": "YulTypedName",
														"src": "20778:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20793:4:12",
														"nodeType": "YulTypedName",
														"src": "20793:4:12",
														"type": ""
													}
												],
												"src": "20627:419:12"
											},
											{
												"body": {
													"nativeSrc": "21158:63:12",
													"nodeType": "YulBlock",
													"src": "21158:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21180:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21180:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21188:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21188:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21176:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21176:3:12"
																		},
																		"nativeSrc": "21176:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21176:14:12"
																	},
																	{
																		"hexValue": "47616d65206d656368616e696373206275726e",
																		"kind": "string",
																		"nativeSrc": "21192:21:12",
																		"nodeType": "YulLiteral",
																		"src": "21192:21:12",
																		"type": "",
																		"value": "Game mechanics burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21169:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21169:6:12"
																},
																"nativeSrc": "21169:45:12",
																"nodeType": "YulFunctionCall",
																"src": "21169:45:12"
															},
															"nativeSrc": "21169:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "21169:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27",
												"nativeSrc": "21052:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21150:6:12",
														"nodeType": "YulTypedName",
														"src": "21150:6:12",
														"type": ""
													}
												],
												"src": "21052:169:12"
											},
											{
												"body": {
													"nativeSrc": "21373:220:12",
													"nodeType": "YulBlock",
													"src": "21373:220:12",
													"statements": [
														{
															"nativeSrc": "21383:74:12",
															"nodeType": "YulAssignment",
															"src": "21383:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21449:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21449:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21454:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21454:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21390:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "21390:58:12"
																},
																"nativeSrc": "21390:67:12",
																"nodeType": "YulFunctionCall",
																"src": "21390:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21383:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21383:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21555:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21555:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27",
																	"nativeSrc": "21466:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "21466:88:12"
																},
																"nativeSrc": "21466:93:12",
																"nodeType": "YulFunctionCall",
																"src": "21466:93:12"
															},
															"nativeSrc": "21466:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "21466:93:12"
														},
														{
															"nativeSrc": "21568:19:12",
															"nodeType": "YulAssignment",
															"src": "21568:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21579:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21579:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21584:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21584:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21575:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21575:3:12"
																},
																"nativeSrc": "21575:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21575:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21568:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21568:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21227:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21361:3:12",
														"nodeType": "YulTypedName",
														"src": "21361:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21369:3:12",
														"nodeType": "YulTypedName",
														"src": "21369:3:12",
														"type": ""
													}
												],
												"src": "21227:366:12"
											},
											{
												"body": {
													"nativeSrc": "21798:330:12",
													"nodeType": "YulBlock",
													"src": "21798:330:12",
													"statements": [
														{
															"nativeSrc": "21808:26:12",
															"nodeType": "YulAssignment",
															"src": "21808:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21820:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21820:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21831:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21831:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21816:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21816:3:12"
																},
																"nativeSrc": "21816:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21816:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21808:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21808:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21888:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21888:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21901:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21901:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21912:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21912:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21897:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21897:3:12"
																		},
																		"nativeSrc": "21897:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21897:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21844:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21844:43:12"
																},
																"nativeSrc": "21844:71:12",
																"nodeType": "YulFunctionCall",
																"src": "21844:71:12"
															},
															"nativeSrc": "21844:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "21844:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21936:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21936:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21947:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21947:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21932:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21932:3:12"
																		},
																		"nativeSrc": "21932:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21932:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21956:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21956:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21962:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21962:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21952:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21952:3:12"
																		},
																		"nativeSrc": "21952:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21952:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21925:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21925:6:12"
																},
																"nativeSrc": "21925:48:12",
																"nodeType": "YulFunctionCall",
																"src": "21925:48:12"
															},
															"nativeSrc": "21925:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "21925:48:12"
														},
														{
															"nativeSrc": "21982:139:12",
															"nodeType": "YulAssignment",
															"src": "21982:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22116:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22116:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21990:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "21990:124:12"
																},
																"nativeSrc": "21990:131:12",
																"nodeType": "YulFunctionCall",
																"src": "21990:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21982:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21982:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21599:529:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21770:9:12",
														"nodeType": "YulTypedName",
														"src": "21770:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21782:6:12",
														"nodeType": "YulTypedName",
														"src": "21782:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21793:4:12",
														"nodeType": "YulTypedName",
														"src": "21793:4:12",
														"type": ""
													}
												],
												"src": "21599:529:12"
											},
											{
												"body": {
													"nativeSrc": "22240:70:12",
													"nodeType": "YulBlock",
													"src": "22240:70:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22262:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "22262:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22270:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22270:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22258:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22258:3:12"
																		},
																		"nativeSrc": "22258:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22258:14:12"
																	},
																	{
																		"hexValue": "43616e6e6f7420726577617264207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "22274:28:12",
																		"nodeType": "YulLiteral",
																		"src": "22274:28:12",
																		"type": "",
																		"value": "Cannot reward zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22251:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22251:6:12"
																},
																"nativeSrc": "22251:52:12",
																"nodeType": "YulFunctionCall",
																"src": "22251:52:12"
															},
															"nativeSrc": "22251:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "22251:52:12"
														}
													]
												},
												"name": "store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2",
												"nativeSrc": "22134:176:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22232:6:12",
														"nodeType": "YulTypedName",
														"src": "22232:6:12",
														"type": ""
													}
												],
												"src": "22134:176:12"
											},
											{
												"body": {
													"nativeSrc": "22462:220:12",
													"nodeType": "YulBlock",
													"src": "22462:220:12",
													"statements": [
														{
															"nativeSrc": "22472:74:12",
															"nodeType": "YulAssignment",
															"src": "22472:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22538:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22538:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22543:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22543:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22479:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "22479:58:12"
																},
																"nativeSrc": "22479:67:12",
																"nodeType": "YulFunctionCall",
																"src": "22479:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22472:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22472:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22644:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22644:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2",
																	"nativeSrc": "22555:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "22555:88:12"
																},
																"nativeSrc": "22555:93:12",
																"nodeType": "YulFunctionCall",
																"src": "22555:93:12"
															},
															"nativeSrc": "22555:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "22555:93:12"
														},
														{
															"nativeSrc": "22657:19:12",
															"nodeType": "YulAssignment",
															"src": "22657:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22668:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22668:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22673:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22673:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22664:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22664:3:12"
																},
																"nativeSrc": "22664:12:12",
																"nodeType": "YulFunctionCall",
																"src": "22664:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22657:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22657:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22316:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22450:3:12",
														"nodeType": "YulTypedName",
														"src": "22450:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22458:3:12",
														"nodeType": "YulTypedName",
														"src": "22458:3:12",
														"type": ""
													}
												],
												"src": "22316:366:12"
											},
											{
												"body": {
													"nativeSrc": "22859:248:12",
													"nodeType": "YulBlock",
													"src": "22859:248:12",
													"statements": [
														{
															"nativeSrc": "22869:26:12",
															"nodeType": "YulAssignment",
															"src": "22869:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22881:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22881:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22892:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22892:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22877:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22877:3:12"
																},
																"nativeSrc": "22877:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22877:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22869:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22869:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22916:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22916:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22927:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22927:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22912:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22912:3:12"
																		},
																		"nativeSrc": "22912:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22912:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22935:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22935:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22941:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22941:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22931:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22931:3:12"
																		},
																		"nativeSrc": "22931:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22931:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22905:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22905:6:12"
																},
																"nativeSrc": "22905:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22905:47:12"
															},
															"nativeSrc": "22905:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22905:47:12"
														},
														{
															"nativeSrc": "22961:139:12",
															"nodeType": "YulAssignment",
															"src": "22961:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23095:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23095:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22969:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "22969:124:12"
																},
																"nativeSrc": "22969:131:12",
																"nodeType": "YulFunctionCall",
																"src": "22969:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22961:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22961:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22688:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22839:9:12",
														"nodeType": "YulTypedName",
														"src": "22839:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22854:4:12",
														"nodeType": "YulTypedName",
														"src": "22854:4:12",
														"type": ""
													}
												],
												"src": "22688:419:12"
											},
											{
												"body": {
													"nativeSrc": "23259:277:12",
													"nodeType": "YulBlock",
													"src": "23259:277:12",
													"statements": [
														{
															"nativeSrc": "23269:26:12",
															"nodeType": "YulAssignment",
															"src": "23269:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23281:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "23281:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23292:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23292:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23277:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23277:3:12"
																},
																"nativeSrc": "23277:18:12",
																"nodeType": "YulFunctionCall",
																"src": "23277:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23269:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23269:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23349:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23349:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23362:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23362:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23373:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23373:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23358:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23358:3:12"
																		},
																		"nativeSrc": "23358:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23358:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23305:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "23305:43:12"
																},
																"nativeSrc": "23305:71:12",
																"nodeType": "YulFunctionCall",
																"src": "23305:71:12"
															},
															"nativeSrc": "23305:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "23305:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23397:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23397:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23408:2:12",
																				"nodeType": "YulLiteral",
																				"src": "23408:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23393:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23393:3:12"
																		},
																		"nativeSrc": "23393:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23393:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23417:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "23417:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23423:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23423:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23413:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23413:3:12"
																		},
																		"nativeSrc": "23413:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23413:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23386:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23386:6:12"
																},
																"nativeSrc": "23386:48:12",
																"nodeType": "YulFunctionCall",
																"src": "23386:48:12"
															},
															"nativeSrc": "23386:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "23386:48:12"
														},
														{
															"nativeSrc": "23443:86:12",
															"nodeType": "YulAssignment",
															"src": "23443:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23515:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23515:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23524:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23524:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23451:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "23451:63:12"
																},
																"nativeSrc": "23451:78:12",
																"nodeType": "YulFunctionCall",
																"src": "23451:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23443:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23443:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23113:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23223:9:12",
														"nodeType": "YulTypedName",
														"src": "23223:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23235:6:12",
														"nodeType": "YulTypedName",
														"src": "23235:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23243:6:12",
														"nodeType": "YulTypedName",
														"src": "23243:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23254:4:12",
														"nodeType": "YulTypedName",
														"src": "23254:4:12",
														"type": ""
													}
												],
												"src": "23113:423:12"
											},
											{
												"body": {
													"nativeSrc": "23648:60:12",
													"nodeType": "YulBlock",
													"src": "23648:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "23670:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23678:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23678:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23666:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23666:3:12"
																		},
																		"nativeSrc": "23666:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23666:14:12"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "23682:18:12",
																		"nodeType": "YulLiteral",
																		"src": "23682:18:12",
																		"type": "",
																		"value": "No tokens locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23659:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23659:6:12"
																},
																"nativeSrc": "23659:42:12",
																"nodeType": "YulFunctionCall",
																"src": "23659:42:12"
															},
															"nativeSrc": "23659:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "23659:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a",
												"nativeSrc": "23542:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23640:6:12",
														"nodeType": "YulTypedName",
														"src": "23640:6:12",
														"type": ""
													}
												],
												"src": "23542:166:12"
											},
											{
												"body": {
													"nativeSrc": "23860:220:12",
													"nodeType": "YulBlock",
													"src": "23860:220:12",
													"statements": [
														{
															"nativeSrc": "23870:74:12",
															"nodeType": "YulAssignment",
															"src": "23870:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23936:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23936:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23941:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23941:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23877:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "23877:58:12"
																},
																"nativeSrc": "23877:67:12",
																"nodeType": "YulFunctionCall",
																"src": "23877:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23870:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23870:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24042:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24042:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a",
																	"nativeSrc": "23953:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "23953:88:12"
																},
																"nativeSrc": "23953:93:12",
																"nodeType": "YulFunctionCall",
																"src": "23953:93:12"
															},
															"nativeSrc": "23953:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "23953:93:12"
														},
														{
															"nativeSrc": "24055:19:12",
															"nodeType": "YulAssignment",
															"src": "24055:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24066:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24066:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24071:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24071:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24062:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24062:3:12"
																},
																"nativeSrc": "24062:12:12",
																"nodeType": "YulFunctionCall",
																"src": "24062:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24055:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24055:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23714:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23848:3:12",
														"nodeType": "YulTypedName",
														"src": "23848:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23856:3:12",
														"nodeType": "YulTypedName",
														"src": "23856:3:12",
														"type": ""
													}
												],
												"src": "23714:366:12"
											},
											{
												"body": {
													"nativeSrc": "24257:248:12",
													"nodeType": "YulBlock",
													"src": "24257:248:12",
													"statements": [
														{
															"nativeSrc": "24267:26:12",
															"nodeType": "YulAssignment",
															"src": "24267:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24279:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "24279:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24290:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24290:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24275:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24275:3:12"
																},
																"nativeSrc": "24275:18:12",
																"nodeType": "YulFunctionCall",
																"src": "24275:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24267:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24267:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24314:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24314:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24325:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24325:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24310:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24310:3:12"
																		},
																		"nativeSrc": "24310:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24310:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24333:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "24333:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24339:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24339:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24329:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24329:3:12"
																		},
																		"nativeSrc": "24329:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24329:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24303:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24303:6:12"
																},
																"nativeSrc": "24303:47:12",
																"nodeType": "YulFunctionCall",
																"src": "24303:47:12"
															},
															"nativeSrc": "24303:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "24303:47:12"
														},
														{
															"nativeSrc": "24359:139:12",
															"nodeType": "YulAssignment",
															"src": "24359:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24493:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24493:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24367:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "24367:124:12"
																},
																"nativeSrc": "24367:131:12",
																"nodeType": "YulFunctionCall",
																"src": "24367:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24359:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24359:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24086:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24237:9:12",
														"nodeType": "YulTypedName",
														"src": "24237:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24252:4:12",
														"nodeType": "YulTypedName",
														"src": "24252:4:12",
														"type": ""
													}
												],
												"src": "24086:419:12"
											},
											{
												"body": {
													"nativeSrc": "24617:63:12",
													"nodeType": "YulBlock",
													"src": "24617:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24639:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "24639:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24647:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24647:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24635:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24635:3:12"
																		},
																		"nativeSrc": "24635:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24635:14:12"
																	},
																	{
																		"hexValue": "546f6b656e73207374696c6c206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "24651:21:12",
																		"nodeType": "YulLiteral",
																		"src": "24651:21:12",
																		"type": "",
																		"value": "Tokens still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24628:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24628:6:12"
																},
																"nativeSrc": "24628:45:12",
																"nodeType": "YulFunctionCall",
																"src": "24628:45:12"
															},
															"nativeSrc": "24628:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "24628:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d",
												"nativeSrc": "24511:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24609:6:12",
														"nodeType": "YulTypedName",
														"src": "24609:6:12",
														"type": ""
													}
												],
												"src": "24511:169:12"
											},
											{
												"body": {
													"nativeSrc": "24832:220:12",
													"nodeType": "YulBlock",
													"src": "24832:220:12",
													"statements": [
														{
															"nativeSrc": "24842:74:12",
															"nodeType": "YulAssignment",
															"src": "24842:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24908:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24908:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24913:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24913:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24849:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "24849:58:12"
																},
																"nativeSrc": "24849:67:12",
																"nodeType": "YulFunctionCall",
																"src": "24849:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24842:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24842:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25014:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25014:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d",
																	"nativeSrc": "24925:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "24925:88:12"
																},
																"nativeSrc": "24925:93:12",
																"nodeType": "YulFunctionCall",
																"src": "24925:93:12"
															},
															"nativeSrc": "24925:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "24925:93:12"
														},
														{
															"nativeSrc": "25027:19:12",
															"nodeType": "YulAssignment",
															"src": "25027:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25038:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25038:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25043:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25043:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25034:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25034:3:12"
																},
																"nativeSrc": "25034:12:12",
																"nodeType": "YulFunctionCall",
																"src": "25034:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25027:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25027:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24686:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24820:3:12",
														"nodeType": "YulTypedName",
														"src": "24820:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24828:3:12",
														"nodeType": "YulTypedName",
														"src": "24828:3:12",
														"type": ""
													}
												],
												"src": "24686:366:12"
											},
											{
												"body": {
													"nativeSrc": "25229:248:12",
													"nodeType": "YulBlock",
													"src": "25229:248:12",
													"statements": [
														{
															"nativeSrc": "25239:26:12",
															"nodeType": "YulAssignment",
															"src": "25239:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25251:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "25251:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25262:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25262:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25247:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25247:3:12"
																},
																"nativeSrc": "25247:18:12",
																"nodeType": "YulFunctionCall",
																"src": "25247:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25239:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25239:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25286:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25286:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25297:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25297:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25282:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25282:3:12"
																		},
																		"nativeSrc": "25282:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25282:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25305:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "25305:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25311:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25311:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25301:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25301:3:12"
																		},
																		"nativeSrc": "25301:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25301:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25275:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25275:6:12"
																},
																"nativeSrc": "25275:47:12",
																"nodeType": "YulFunctionCall",
																"src": "25275:47:12"
															},
															"nativeSrc": "25275:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "25275:47:12"
														},
														{
															"nativeSrc": "25331:139:12",
															"nodeType": "YulAssignment",
															"src": "25331:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25465:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25465:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25339:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "25339:124:12"
																},
																"nativeSrc": "25339:131:12",
																"nodeType": "YulFunctionCall",
																"src": "25339:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25331:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25331:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25058:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25209:9:12",
														"nodeType": "YulTypedName",
														"src": "25209:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25224:4:12",
														"nodeType": "YulTypedName",
														"src": "25224:4:12",
														"type": ""
													}
												],
												"src": "25058:419:12"
											},
											{
												"body": {
													"nativeSrc": "25589:60:12",
													"nodeType": "YulBlock",
													"src": "25589:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25611:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "25611:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25619:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25619:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25607:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25607:3:12"
																		},
																		"nativeSrc": "25607:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25607:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "25623:18:12",
																		"nodeType": "YulLiteral",
																		"src": "25623:18:12",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25600:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25600:6:12"
																},
																"nativeSrc": "25600:42:12",
																"nodeType": "YulFunctionCall",
																"src": "25600:42:12"
															},
															"nativeSrc": "25600:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "25600:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "25483:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25581:6:12",
														"nodeType": "YulTypedName",
														"src": "25581:6:12",
														"type": ""
													}
												],
												"src": "25483:166:12"
											},
											{
												"body": {
													"nativeSrc": "25801:220:12",
													"nodeType": "YulBlock",
													"src": "25801:220:12",
													"statements": [
														{
															"nativeSrc": "25811:74:12",
															"nodeType": "YulAssignment",
															"src": "25811:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25877:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25882:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25882:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25818:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "25818:58:12"
																},
																"nativeSrc": "25818:67:12",
																"nodeType": "YulFunctionCall",
																"src": "25818:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25811:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25811:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25983:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "25894:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "25894:88:12"
																},
																"nativeSrc": "25894:93:12",
																"nodeType": "YulFunctionCall",
																"src": "25894:93:12"
															},
															"nativeSrc": "25894:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "25894:93:12"
														},
														{
															"nativeSrc": "25996:19:12",
															"nodeType": "YulAssignment",
															"src": "25996:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26007:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26007:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26012:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26012:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26003:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26003:3:12"
																},
																"nativeSrc": "26003:12:12",
																"nodeType": "YulFunctionCall",
																"src": "26003:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25996:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25996:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25655:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25789:3:12",
														"nodeType": "YulTypedName",
														"src": "25789:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25797:3:12",
														"nodeType": "YulTypedName",
														"src": "25797:3:12",
														"type": ""
													}
												],
												"src": "25655:366:12"
											},
											{
												"body": {
													"nativeSrc": "26198:248:12",
													"nodeType": "YulBlock",
													"src": "26198:248:12",
													"statements": [
														{
															"nativeSrc": "26208:26:12",
															"nodeType": "YulAssignment",
															"src": "26208:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26220:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26220:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26231:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26231:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26216:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26216:3:12"
																},
																"nativeSrc": "26216:18:12",
																"nodeType": "YulFunctionCall",
																"src": "26216:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26208:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26208:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26255:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26255:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26266:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26266:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26251:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26251:3:12"
																		},
																		"nativeSrc": "26251:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26251:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26274:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "26274:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26280:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26280:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26270:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26270:3:12"
																		},
																		"nativeSrc": "26270:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26270:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26244:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26244:6:12"
																},
																"nativeSrc": "26244:47:12",
																"nodeType": "YulFunctionCall",
																"src": "26244:47:12"
															},
															"nativeSrc": "26244:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "26244:47:12"
														},
														{
															"nativeSrc": "26300:139:12",
															"nodeType": "YulAssignment",
															"src": "26300:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26434:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "26434:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26308:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "26308:124:12"
																},
																"nativeSrc": "26308:131:12",
																"nodeType": "YulFunctionCall",
																"src": "26308:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26300:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26300:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26027:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26178:9:12",
														"nodeType": "YulTypedName",
														"src": "26178:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26193:4:12",
														"nodeType": "YulTypedName",
														"src": "26193:4:12",
														"type": ""
													}
												],
												"src": "26027:419:12"
											},
											{
												"body": {
													"nativeSrc": "26517:53:12",
													"nodeType": "YulBlock",
													"src": "26517:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26534:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26534:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "26557:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "26557:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "26539:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "26539:17:12"
																		},
																		"nativeSrc": "26539:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26539:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26527:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26527:6:12"
																},
																"nativeSrc": "26527:37:12",
																"nodeType": "YulFunctionCall",
																"src": "26527:37:12"
															},
															"nativeSrc": "26527:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "26527:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "26452:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26505:5:12",
														"nodeType": "YulTypedName",
														"src": "26505:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "26512:3:12",
														"nodeType": "YulTypedName",
														"src": "26512:3:12",
														"type": ""
													}
												],
												"src": "26452:118:12"
											},
											{
												"body": {
													"nativeSrc": "26674:124:12",
													"nodeType": "YulBlock",
													"src": "26674:124:12",
													"statements": [
														{
															"nativeSrc": "26684:26:12",
															"nodeType": "YulAssignment",
															"src": "26684:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26696:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26696:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26707:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26707:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26692:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26692:3:12"
																},
																"nativeSrc": "26692:18:12",
																"nodeType": "YulFunctionCall",
																"src": "26692:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26684:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26684:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26764:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26764:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26777:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26777:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26788:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26788:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26773:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26773:3:12"
																		},
																		"nativeSrc": "26773:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26773:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26720:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26720:43:12"
																},
																"nativeSrc": "26720:71:12",
																"nodeType": "YulFunctionCall",
																"src": "26720:71:12"
															},
															"nativeSrc": "26720:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "26720:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "26576:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26646:9:12",
														"nodeType": "YulTypedName",
														"src": "26646:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26658:6:12",
														"nodeType": "YulTypedName",
														"src": "26658:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26669:4:12",
														"nodeType": "YulTypedName",
														"src": "26669:4:12",
														"type": ""
													}
												],
												"src": "26576:222:12"
											},
											{
												"body": {
													"nativeSrc": "26910:75:12",
													"nodeType": "YulBlock",
													"src": "26910:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26932:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "26932:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26940:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26940:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26928:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26928:3:12"
																		},
																		"nativeSrc": "26928:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26928:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "26944:33:12",
																		"nodeType": "YulLiteral",
																		"src": "26944:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26921:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26921:6:12"
																},
																"nativeSrc": "26921:57:12",
																"nodeType": "YulFunctionCall",
																"src": "26921:57:12"
															},
															"nativeSrc": "26921:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "26921:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "26804:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26902:6:12",
														"nodeType": "YulTypedName",
														"src": "26902:6:12",
														"type": ""
													}
												],
												"src": "26804:181:12"
											},
											{
												"body": {
													"nativeSrc": "27137:220:12",
													"nodeType": "YulBlock",
													"src": "27137:220:12",
													"statements": [
														{
															"nativeSrc": "27147:74:12",
															"nodeType": "YulAssignment",
															"src": "27147:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27213:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27213:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27218:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27218:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27154:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "27154:58:12"
																},
																"nativeSrc": "27154:67:12",
																"nodeType": "YulFunctionCall",
																"src": "27154:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27147:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27147:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27319:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27319:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "27230:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "27230:88:12"
																},
																"nativeSrc": "27230:93:12",
																"nodeType": "YulFunctionCall",
																"src": "27230:93:12"
															},
															"nativeSrc": "27230:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "27230:93:12"
														},
														{
															"nativeSrc": "27332:19:12",
															"nodeType": "YulAssignment",
															"src": "27332:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27343:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27343:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27348:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27348:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27339:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27339:3:12"
																},
																"nativeSrc": "27339:12:12",
																"nodeType": "YulFunctionCall",
																"src": "27339:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27332:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27332:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26991:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27125:3:12",
														"nodeType": "YulTypedName",
														"src": "27125:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27133:3:12",
														"nodeType": "YulTypedName",
														"src": "27133:3:12",
														"type": ""
													}
												],
												"src": "26991:366:12"
											},
											{
												"body": {
													"nativeSrc": "27534:248:12",
													"nodeType": "YulBlock",
													"src": "27534:248:12",
													"statements": [
														{
															"nativeSrc": "27544:26:12",
															"nodeType": "YulAssignment",
															"src": "27544:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27556:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "27556:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27567:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27567:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27552:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27552:3:12"
																},
																"nativeSrc": "27552:18:12",
																"nodeType": "YulFunctionCall",
																"src": "27552:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27544:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27544:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27591:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27591:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27602:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27602:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27587:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27587:3:12"
																		},
																		"nativeSrc": "27587:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27587:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27610:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "27610:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27616:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27616:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27606:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27606:3:12"
																		},
																		"nativeSrc": "27606:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27606:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27580:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27580:6:12"
																},
																"nativeSrc": "27580:47:12",
																"nodeType": "YulFunctionCall",
																"src": "27580:47:12"
															},
															"nativeSrc": "27580:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "27580:47:12"
														},
														{
															"nativeSrc": "27636:139:12",
															"nodeType": "YulAssignment",
															"src": "27636:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27770:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "27770:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27644:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "27644:124:12"
																},
																"nativeSrc": "27644:131:12",
																"nodeType": "YulFunctionCall",
																"src": "27644:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27636:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27636:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27363:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27514:9:12",
														"nodeType": "YulTypedName",
														"src": "27514:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27529:4:12",
														"nodeType": "YulTypedName",
														"src": "27529:4:12",
														"type": ""
													}
												],
												"src": "27363:419:12"
											},
											{
												"body": {
													"nativeSrc": "27942:288:12",
													"nodeType": "YulBlock",
													"src": "27942:288:12",
													"statements": [
														{
															"nativeSrc": "27952:26:12",
															"nodeType": "YulAssignment",
															"src": "27952:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27964:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "27964:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27975:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27975:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27960:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27960:3:12"
																},
																"nativeSrc": "27960:18:12",
																"nodeType": "YulFunctionCall",
																"src": "27960:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27952:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27952:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28032:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28032:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28045:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28045:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28056:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28056:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28041:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28041:3:12"
																		},
																		"nativeSrc": "28041:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28041:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27988:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "27988:43:12"
																},
																"nativeSrc": "27988:71:12",
																"nodeType": "YulFunctionCall",
																"src": "27988:71:12"
															},
															"nativeSrc": "27988:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "27988:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28113:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28113:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28126:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28126:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28137:2:12",
																				"nodeType": "YulLiteral",
																				"src": "28137:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28122:3:12"
																		},
																		"nativeSrc": "28122:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28122:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28069:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28069:43:12"
																},
																"nativeSrc": "28069:72:12",
																"nodeType": "YulFunctionCall",
																"src": "28069:72:12"
															},
															"nativeSrc": "28069:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "28069:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28195:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28195:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28208:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28208:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28219:2:12",
																				"nodeType": "YulLiteral",
																				"src": "28219:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28204:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28204:3:12"
																		},
																		"nativeSrc": "28204:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28204:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28151:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28151:43:12"
																},
																"nativeSrc": "28151:72:12",
																"nodeType": "YulFunctionCall",
																"src": "28151:72:12"
															},
															"nativeSrc": "28151:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "28151:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "27788:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27898:9:12",
														"nodeType": "YulTypedName",
														"src": "27898:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27910:6:12",
														"nodeType": "YulTypedName",
														"src": "27910:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27918:6:12",
														"nodeType": "YulTypedName",
														"src": "27918:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27926:6:12",
														"nodeType": "YulTypedName",
														"src": "27926:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27937:4:12",
														"nodeType": "YulTypedName",
														"src": "27937:4:12",
														"type": ""
													}
												],
												"src": "27788:442:12"
											},
											{
												"body": {
													"nativeSrc": "28362:206:12",
													"nodeType": "YulBlock",
													"src": "28362:206:12",
													"statements": [
														{
															"nativeSrc": "28372:26:12",
															"nodeType": "YulAssignment",
															"src": "28372:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28384:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "28384:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28395:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28395:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28380:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28380:3:12"
																},
																"nativeSrc": "28380:18:12",
																"nodeType": "YulFunctionCall",
																"src": "28380:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28372:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28372:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28452:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28452:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28465:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28465:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28476:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28476:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28461:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28461:3:12"
																		},
																		"nativeSrc": "28461:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28461:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28408:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28408:43:12"
																},
																"nativeSrc": "28408:71:12",
																"nodeType": "YulFunctionCall",
																"src": "28408:71:12"
															},
															"nativeSrc": "28408:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "28408:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28533:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28533:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28546:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28546:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28557:2:12",
																				"nodeType": "YulLiteral",
																				"src": "28557:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28542:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28542:3:12"
																		},
																		"nativeSrc": "28542:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28542:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "28489:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28489:43:12"
																},
																"nativeSrc": "28489:72:12",
																"nodeType": "YulFunctionCall",
																"src": "28489:72:12"
															},
															"nativeSrc": "28489:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "28489:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "28236:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28326:9:12",
														"nodeType": "YulTypedName",
														"src": "28326:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28338:6:12",
														"nodeType": "YulTypedName",
														"src": "28338:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28346:6:12",
														"nodeType": "YulTypedName",
														"src": "28346:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28357:4:12",
														"nodeType": "YulTypedName",
														"src": "28357:4:12",
														"type": ""
													}
												],
												"src": "28236:332:12"
											},
											{
												"body": {
													"nativeSrc": "28680:64:12",
													"nodeType": "YulBlock",
													"src": "28680:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28702:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "28702:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28710:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28710:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28698:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28698:3:12"
																		},
																		"nativeSrc": "28698:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28698:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "28714:22:12",
																		"nodeType": "YulLiteral",
																		"src": "28714:22:12",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28691:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "28691:6:12"
																},
																"nativeSrc": "28691:46:12",
																"nodeType": "YulFunctionCall",
																"src": "28691:46:12"
															},
															"nativeSrc": "28691:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "28691:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "28574:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28672:6:12",
														"nodeType": "YulTypedName",
														"src": "28672:6:12",
														"type": ""
													}
												],
												"src": "28574:170:12"
											},
											{
												"body": {
													"nativeSrc": "28896:220:12",
													"nodeType": "YulBlock",
													"src": "28896:220:12",
													"statements": [
														{
															"nativeSrc": "28906:74:12",
															"nodeType": "YulAssignment",
															"src": "28906:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28972:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28972:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28977:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28977:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28913:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "28913:58:12"
																},
																"nativeSrc": "28913:67:12",
																"nodeType": "YulFunctionCall",
																"src": "28913:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28906:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28906:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29078:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29078:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "28989:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "28989:88:12"
																},
																"nativeSrc": "28989:93:12",
																"nodeType": "YulFunctionCall",
																"src": "28989:93:12"
															},
															"nativeSrc": "28989:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "28989:93:12"
														},
														{
															"nativeSrc": "29091:19:12",
															"nodeType": "YulAssignment",
															"src": "29091:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29102:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29102:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29107:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29107:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29098:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29098:3:12"
																},
																"nativeSrc": "29098:12:12",
																"nodeType": "YulFunctionCall",
																"src": "29098:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29091:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29091:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28750:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28884:3:12",
														"nodeType": "YulTypedName",
														"src": "28884:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28892:3:12",
														"nodeType": "YulTypedName",
														"src": "28892:3:12",
														"type": ""
													}
												],
												"src": "28750:366:12"
											},
											{
												"body": {
													"nativeSrc": "29293:248:12",
													"nodeType": "YulBlock",
													"src": "29293:248:12",
													"statements": [
														{
															"nativeSrc": "29303:26:12",
															"nodeType": "YulAssignment",
															"src": "29303:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29315:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "29315:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29326:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29326:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29311:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29311:3:12"
																},
																"nativeSrc": "29311:18:12",
																"nodeType": "YulFunctionCall",
																"src": "29311:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29303:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "29303:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29350:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "29350:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29361:1:12",
																				"nodeType": "YulLiteral",
																				"src": "29361:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29346:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29346:3:12"
																		},
																		"nativeSrc": "29346:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29346:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29369:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "29369:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29375:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "29375:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29365:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29365:3:12"
																		},
																		"nativeSrc": "29365:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29365:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29339:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "29339:6:12"
																},
																"nativeSrc": "29339:47:12",
																"nodeType": "YulFunctionCall",
																"src": "29339:47:12"
															},
															"nativeSrc": "29339:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "29339:47:12"
														},
														{
															"nativeSrc": "29395:139:12",
															"nodeType": "YulAssignment",
															"src": "29395:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29529:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "29529:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29403:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "29403:124:12"
																},
																"nativeSrc": "29403:131:12",
																"nodeType": "YulFunctionCall",
																"src": "29403:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29395:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "29395:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29122:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29273:9:12",
														"nodeType": "YulTypedName",
														"src": "29273:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29288:4:12",
														"nodeType": "YulTypedName",
														"src": "29288:4:12",
														"type": ""
													}
												],
												"src": "29122:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer amount exceeds availabl\")\n\n        mstore(add(memPtr, 32), \"e balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a minter\")\n\n    }\n\n    function abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot mint to zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Would exceed max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot lock zero tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to lock\")\n\n    }\n\n    function abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a game manager\")\n\n    }\n\n    function abi_encode_t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot burn from zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game mechanics burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot reward zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens still locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101e3575f3560e01c80636b2d95d41161010d578063a217fddf116100a0578063da5188291161006f578063da51882914610591578063dd62ed3e146105ad578063f968f493146105dd578063ff6fcdbd146105e7576101e3565b8063a217fddf14610509578063a9059cbb14610527578063d539139314610557578063d547741f14610575576101e3565b80638456cb59116100dc5780638456cb591461049557806391d148541461049f57806395d89b41146104cf5780639dc29fac146104ed576101e3565b80636b2d95d4146103e95780636c24a76f146104195780636e27d8891461044957806370a0823114610465576101e3565b8063313ce567116101855780633f4ba83a116101545780633f4ba83a1461038757806340c10f1914610391578063485d3834146103ad5780635c975abb146103cb576101e3565b8063313ce567146102ff57806332cb6b0c1461031d57806336568abe1461033b5780633c26835b14610357576101e3565b806318160ddd116101c157806318160ddd1461026557806323b872dd14610283578063248a9ca3146102b35780632f2ff15d146102e3576101e3565b806301ffc9a7146101e757806306fdde0314610217578063095ea7b314610235575b5f80fd5b61020160048036038101906101fc9190612015565b610605565b60405161020e919061205a565b60405180910390f35b61021f61067e565b60405161022c91906120e3565b60405180910390f35b61024f600480360381019061024a9190612190565b61070e565b60405161025c919061205a565b60405180910390f35b61026d610730565b60405161027a91906121dd565b60405180910390f35b61029d600480360381019061029891906121f6565b610739565b6040516102aa919061205a565b60405180910390f35b6102cd60048036038101906102c89190612279565b6107e9565b6040516102da91906122b3565b60405180910390f35b6102fd60048036038101906102f891906122cc565b610806565b005b610307610828565b6040516103149190612325565b60405180910390f35b610325610830565b60405161033291906121dd565b60405180910390f35b610355600480360381019061035091906122cc565b610840565b005b610371600480360381019061036c919061233e565b6108bb565b60405161037e91906121dd565b60405180910390f35b61038f610901565b005b6103ab60048036038101906103a69190612190565b610918565b005b6103b5610a66565b6040516103c291906121dd565b60405180910390f35b6103d3610a6d565b6040516103e0919061205a565b60405180910390f35b61040360048036038101906103fe919061233e565b610a82565b60405161041091906121dd565b60405180910390f35b610433600480360381019061042e919061233e565b610ac8565b60405161044091906121dd565b60405180910390f35b610463600480360381019061045e9190612369565b610b21565b005b61047f600480360381019061047a919061233e565b610cac565b60405161048c91906121dd565b60405180910390f35b61049d610cf1565b005b6104b960048036038101906104b491906122cc565b610d08565b6040516104c6919061205a565b60405180910390f35b6104d7610d6c565b6040516104e491906120e3565b60405180910390f35b61050760048036038101906105029190612190565b610dfc565b005b610511610f82565b60405161051e91906122b3565b60405180910390f35b610541600480360381019061053c9190612190565b610f88565b60405161054e919061205a565b60405180910390f35b61055f611036565b60405161056c91906122b3565b60405180910390f35b61058f600480360381019061058a91906122cc565b61105a565b005b6105ab60048036038101906105a691906124c0565b61107c565b005b6105c760048036038101906105c2919061252c565b61122b565b6040516105d491906121dd565b60405180910390f35b6105e56112ad565b005b6105ef611469565b6040516105fc91906122b3565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061067757506106768261148d565b5b9050919050565b60606003805461068d90612597565b80601f01602080910402602001604051908101604052809291908181526020018280546106b990612597565b80156107045780601f106106db57610100808354040283529160200191610704565b820191905f5260205f20905b8154815290600101906020018083116106e757829003601f168201915b5050505050905090565b5f806107186114f6565b90506107258185856114fd565b600191505092915050565b5f600254905090565b5f61074261150f565b8160085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461078a86610cac565b61079491906125f4565b10156107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90612697565b60405180910390fd5b6107e0848484611559565b90509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b61080f826107e9565b61081881611587565b610822838361159b565b50505050565b5f6012905090565b6b033b2e3c9fd0803ce800000081565b6108486114f6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108ac576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108b68282611685565b505050565b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f801b61090d81611587565b61091561176f565b50565b6109427f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610d08565b610981576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610978906126ff565b60405180910390fd5b61098961150f565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ee90612767565b60405180910390fd5b6b033b2e3c9fd0803ce800000081610a0d610730565b610a179190612785565b1115610a58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4f90612802565b60405180910390fd5b610a6282826117d0565b5050565b6201518081565b5f60055f9054906101000a900460ff16905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b1083610cac565b610b1a91906125f4565b9050919050565b610b2961150f565b610b3161184f565b5f8111610b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6a9061286a565b60405180910390fd5b80610b7d33610cac565b1015610bbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb5906128d2565b60405180910390fd5b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c0a9190612785565b925050819055504260095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c82604051610c9991906121dd565b60405180910390a2610ca961189e565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f801b610cfd81611587565b610d056118a8565b50565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610d7b90612597565b80601f0160208091040260200160405190810160405280929190818152602001828054610da790612597565b8015610df25780601f10610dc957610100808354040283529160200191610df2565b820191905f5260205f20905b815481529060010190602001808311610dd557829003601f168201915b5050505050905090565b610e267fef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b133610d08565b610e65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5c9061293a565b60405180910390fd5b610e6d61150f565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610edb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed2906129a2565b60405180910390fd5b80610ee583610cac565b1015610f26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1d90612a0a565b60405180910390fd5b610f30828261190a565b8173ffffffffffffffffffffffffffffffffffffffff167ffad31924d655455395c87544c8aa1ffdb5a7505a22a3c2e03f28003b6556a75f82604051610f769190612a72565b60405180910390a25050565b5f801b81565b5f610f9161150f565b8160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610fd933610cac565b610fe391906125f4565b1015611024576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101b90612697565b60405180910390fd5b61102e8383611989565b905092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611063826107e9565b61106c81611587565b6110768383611685565b50505050565b6110a67fef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b133610d08565b6110e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dc9061293a565b60405180910390fd5b6110ed61150f565b6110f561184f565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115a90612ae8565b60405180910390fd5b6b033b2e3c9fd0803ce800000082611179610730565b6111839190612785565b11156111c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bb90612802565b60405180910390fd5b6111ce83836117d0565b8273ffffffffffffffffffffffffffffffffffffffff167f21a82678daa5235b7b5de669fdf9599453d3d885cee0826e92636d747419689c8383604051611216929190612b06565b60405180910390a261122661189e565b505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6112b561150f565b6112bd61184f565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111611340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133790612b7e565b60405180910390fd5b6201518060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461138c9190612785565b4210156113ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c590612be6565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e11958888260405161145691906121dd565b60405180910390a25061146761189e565b565b7fef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b181565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b61150a83838360016119ab565b505050565b611517610a6d565b15611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e90612c4e565b60405180910390fd5b565b5f806115636114f6565b9050611570858285611b7a565b61157b858585611c0c565b60019150509392505050565b611598816115936114f6565b611cfc565b50565b5f6115a68383610d08565b61167b57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506116186114f6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061167f565b5f90505b92915050565b5f6116908383610d08565b15611765575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117026114f6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611769565b5f90505b92915050565b611777611d4d565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6117b96114f6565b6040516117c69190612c7b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611840575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118379190612c7b565b60405180910390fd5b61184b5f8383611d96565b5050565b600260075403611894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188b90612cde565b60405180910390fd5b6002600781905550565b6001600781905550565b6118b061150f565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118f36114f6565b6040516119009190612c7b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361197a575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119719190612c7b565b60405180910390fd5b611985825f83611d96565b5050565b5f806119936114f6565b90506119a0818585611c0c565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a1b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a129190612c7b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a8b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a829190612c7b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611b74578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b6b91906121dd565b60405180910390a35b50505050565b5f611b85848461122b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611c065781811015611bf7578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611bee93929190612cfc565b60405180910390fd5b611c0584848484035f6119ab565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c7c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611c739190612c7b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cec575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611ce39190612c7b565b60405180910390fd5b611cf7838383611d96565b505050565b611d068282610d08565b611d495780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611d40929190612d31565b60405180910390fd5b5050565b611d55610a6d565b611d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8b90612da2565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611de6578060025f828254611dda9190612785565b92505081905550611eb4565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611e6f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611e6693929190612cfc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611efb578060025f8282540392505081905550611f45565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611fa291906121dd565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ff481611fc0565b8114611ffe575f80fd5b50565b5f8135905061200f81611feb565b92915050565b5f6020828403121561202a57612029611fb8565b5b5f61203784828501612001565b91505092915050565b5f8115159050919050565b61205481612040565b82525050565b5f60208201905061206d5f83018461204b565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6120b582612073565b6120bf818561207d565b93506120cf81856020860161208d565b6120d88161209b565b840191505092915050565b5f6020820190508181035f8301526120fb81846120ab565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61212c82612103565b9050919050565b61213c81612122565b8114612146575f80fd5b50565b5f8135905061215781612133565b92915050565b5f819050919050565b61216f8161215d565b8114612179575f80fd5b50565b5f8135905061218a81612166565b92915050565b5f80604083850312156121a6576121a5611fb8565b5b5f6121b385828601612149565b92505060206121c48582860161217c565b9150509250929050565b6121d78161215d565b82525050565b5f6020820190506121f05f8301846121ce565b92915050565b5f805f6060848603121561220d5761220c611fb8565b5b5f61221a86828701612149565b935050602061222b86828701612149565b925050604061223c8682870161217c565b9150509250925092565b5f819050919050565b61225881612246565b8114612262575f80fd5b50565b5f813590506122738161224f565b92915050565b5f6020828403121561228e5761228d611fb8565b5b5f61229b84828501612265565b91505092915050565b6122ad81612246565b82525050565b5f6020820190506122c65f8301846122a4565b92915050565b5f80604083850312156122e2576122e1611fb8565b5b5f6122ef85828601612265565b925050602061230085828601612149565b9150509250929050565b5f60ff82169050919050565b61231f8161230a565b82525050565b5f6020820190506123385f830184612316565b92915050565b5f6020828403121561235357612352611fb8565b5b5f61236084828501612149565b91505092915050565b5f6020828403121561237e5761237d611fb8565b5b5f61238b8482850161217c565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6123d28261209b565b810181811067ffffffffffffffff821117156123f1576123f061239c565b5b80604052505050565b5f612403611faf565b905061240f82826123c9565b919050565b5f67ffffffffffffffff82111561242e5761242d61239c565b5b6124378261209b565b9050602081019050919050565b828183375f83830152505050565b5f61246461245f84612414565b6123fa565b9050828152602081018484840111156124805761247f612398565b5b61248b848285612444565b509392505050565b5f82601f8301126124a7576124a6612394565b5b81356124b7848260208601612452565b91505092915050565b5f805f606084860312156124d7576124d6611fb8565b5b5f6124e486828701612149565b93505060206124f58682870161217c565b925050604084013567ffffffffffffffff81111561251657612515611fbc565b5b61252286828701612493565b9150509250925092565b5f806040838503121561254257612541611fb8565b5b5f61254f85828601612149565b925050602061256085828601612149565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806125ae57607f821691505b6020821081036125c1576125c061256a565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125fe8261215d565b91506126098361215d565b9250828203905081811115612621576126206125c7565b5b92915050565b7f5472616e7366657220616d6f756e74206578636565647320617661696c61626c5f8201527f652062616c616e63650000000000000000000000000000000000000000000000602082015250565b5f61268160298361207d565b915061268c82612627565b604082019050919050565b5f6020820190508181035f8301526126ae81612675565b9050919050565b7f43616c6c6572206973206e6f742061206d696e746572000000000000000000005f82015250565b5f6126e960168361207d565b91506126f4826126b5565b602082019050919050565b5f6020820190508181035f830152612716816126dd565b9050919050565b7f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000005f82015250565b5f612751601b8361207d565b915061275c8261271d565b602082019050919050565b5f6020820190508181035f83015261277e81612745565b9050919050565b5f61278f8261215d565b915061279a8361215d565b92508282019050808211156127b2576127b16125c7565b5b92915050565b7f576f756c6420657863656564206d617820737570706c790000000000000000005f82015250565b5f6127ec60178361207d565b91506127f7826127b8565b602082019050919050565b5f6020820190508181035f830152612819816127e0565b9050919050565b7f43616e6e6f74206c6f636b207a65726f20746f6b656e730000000000000000005f82015250565b5f61285460178361207d565b915061285f82612820565b602082019050919050565b5f6020820190508181035f83015261288181612848565b9050919050565b7f496e73756666696369656e742062616c616e636520746f206c6f636b000000005f82015250565b5f6128bc601c8361207d565b91506128c782612888565b602082019050919050565b5f6020820190508181035f8301526128e9816128b0565b9050919050565b7f43616c6c6572206973206e6f7420612067616d65206d616e61676572000000005f82015250565b5f612924601c8361207d565b915061292f826128f0565b602082019050919050565b5f6020820190508181035f83015261295181612918565b9050919050565b7f43616e6e6f74206275726e2066726f6d207a65726f20616464726573730000005f82015250565b5f61298c601d8361207d565b915061299782612958565b602082019050919050565b5f6020820190508181035f8301526129b981612980565b9050919050565b7f496e73756666696369656e742062616c616e636520746f206275726e000000005f82015250565b5f6129f4601c8361207d565b91506129ff826129c0565b602082019050919050565b5f6020820190508181035f830152612a21816129e8565b9050919050565b7f47616d65206d656368616e696373206275726e000000000000000000000000005f82015250565b5f612a5c60138361207d565b9150612a6782612a28565b602082019050919050565b5f604082019050612a855f8301846121ce565b8181036020830152612a9681612a50565b905092915050565b7f43616e6e6f7420726577617264207a65726f20616464726573730000000000005f82015250565b5f612ad2601a8361207d565b9150612add82612a9e565b602082019050919050565b5f6020820190508181035f830152612aff81612ac6565b9050919050565b5f604082019050612b195f8301856121ce565b8181036020830152612b2b81846120ab565b90509392505050565b7f4e6f20746f6b656e73206c6f636b6564000000000000000000000000000000005f82015250565b5f612b6860108361207d565b9150612b7382612b34565b602082019050919050565b5f6020820190508181035f830152612b9581612b5c565b9050919050565b7f546f6b656e73207374696c6c206c6f636b6564000000000000000000000000005f82015250565b5f612bd060138361207d565b9150612bdb82612b9c565b602082019050919050565b5f6020820190508181035f830152612bfd81612bc4565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612c3860108361207d565b9150612c4382612c04565b602082019050919050565b5f6020820190508181035f830152612c6581612c2c565b9050919050565b612c7581612122565b82525050565b5f602082019050612c8e5f830184612c6c565b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612cc8601f8361207d565b9150612cd382612c94565b602082019050919050565b5f6020820190508181035f830152612cf581612cbc565b9050919050565b5f606082019050612d0f5f830186612c6c565b612d1c60208301856121ce565b612d2960408301846121ce565b949350505050565b5f604082019050612d445f830185612c6c565b612d5160208301846122a4565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612d8c60148361207d565b9150612d9782612d58565b602082019050919050565b5f6020820190508181035f830152612db981612d80565b905091905056fea26469706673582212209f3d22d095fd0518dbec04174f58017e74d524cf9f47ff75b19d8d6c9eddc6f464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B2D95D4 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDA518829 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDA518829 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xFF6FCDBD EQ PUSH2 0x5E7 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x575 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x4ED JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x6B2D95D4 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x6C24A76F EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x465 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x485D3834 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3CB JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x3C26835B EQ PUSH2 0x357 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2E3 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x307 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH2 0x901 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B5 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xCF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D7 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x507 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x511 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55F PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0x107C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x252C JUMP JUMPDEST PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E5 PUSH2 0x12AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5EF PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x677 JUMPI POP PUSH2 0x676 DUP3 PUSH2 0x148D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x68D SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B9 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x704 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x704 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x718 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x725 DUP2 DUP6 DUP6 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x742 PUSH2 0x150F JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x78A DUP7 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST LT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E0 DUP5 DUP5 DUP5 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80F DUP3 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x818 DUP2 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x822 DUP4 DUP4 PUSH2 0x159B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH2 0x848 PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B6 DUP3 DUP3 PUSH2 0x1685 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x90D DUP2 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x915 PUSH2 0x176F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x942 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP1 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x989 PUSH2 0x150F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EE SWAP1 PUSH2 0x2767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 PUSH2 0xA0D PUSH2 0x730 JUMP JUMPDEST PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST GT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4F SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA62 DUP3 DUP3 PUSH2 0x17D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB10 DUP4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB29 PUSH2 0x150F JUMP JUMPDEST PUSH2 0xB31 PUSH2 0x184F JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6A SWAP1 PUSH2 0x286A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xB7D CALLER PUSH2 0xCAC JUMP JUMPDEST LT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB5 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC0A SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C DUP3 PUSH1 0x40 MLOAD PUSH2 0xC99 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xCA9 PUSH2 0x189E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xCFD DUP2 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0xD05 PUSH2 0x18A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD7B SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDA7 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDF2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDC9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDD5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE26 PUSH32 0xEF17B1F3C5A412F9C8E887E3ABD186802AFEC7DC657FD3B7002BF87B128DD0B1 CALLER PUSH2 0xD08 JUMP JUMPDEST PUSH2 0xE65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5C SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6D PUSH2 0x150F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED2 SWAP1 PUSH2 0x29A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xEE5 DUP4 PUSH2 0xCAC JUMP JUMPDEST LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1D SWAP1 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF30 DUP3 DUP3 PUSH2 0x190A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAD31924D655455395C87544C8AA1FFDB5A7505A22A3C2E03F28003B6556A75F DUP3 PUSH1 0x40 MLOAD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xF91 PUSH2 0x150F JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xFD9 CALLER PUSH2 0xCAC JUMP JUMPDEST PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST LT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x102E DUP4 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1063 DUP3 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x106C DUP2 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x1076 DUP4 DUP4 PUSH2 0x1685 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x10A6 PUSH32 0xEF17B1F3C5A412F9C8E887E3ABD186802AFEC7DC657FD3B7002BF87B128DD0B1 CALLER PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DC SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10ED PUSH2 0x150F JUMP JUMPDEST PUSH2 0x10F5 PUSH2 0x184F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115A SWAP1 PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP3 PUSH2 0x1179 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x1183 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST GT ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11CE DUP4 DUP4 PUSH2 0x17D0 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21A82678DAA5235B7B5DE669FDF9599453D3D885CEE0826E92636D747419689C DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1216 SWAP3 SWAP2 SWAP1 PUSH2 0x2B06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1226 PUSH2 0x189E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B5 PUSH2 0x150F JUMP JUMPDEST PUSH2 0x12BD PUSH2 0x184F JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1340 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1337 SWAP1 PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x138C SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C5 SWAP1 PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1456 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1467 PUSH2 0x189E JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xEF17B1F3C5A412F9C8E887E3ABD186802AFEC7DC657FD3B7002BF87B128DD0B1 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x150A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1517 PUSH2 0xA6D JUMP JUMPDEST ISZERO PUSH2 0x1557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP1 PUSH2 0x2C4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1563 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1570 DUP6 DUP3 DUP6 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x157B DUP6 DUP6 DUP6 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1598 DUP2 PUSH2 0x1593 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x1CFC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15A6 DUP4 DUP4 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x167B JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1618 PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x167F JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1690 DUP4 DUP4 PUSH2 0xD08 JUMP JUMPDEST ISZERO PUSH2 0x1765 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1702 PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1769 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1777 PUSH2 0x1D4D JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x17B9 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C6 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1840 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1837 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x184B PUSH0 DUP4 DUP4 PUSH2 0x1D96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0x1894 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188B SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x18B0 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18F3 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1900 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x197A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1971 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1985 DUP3 PUSH0 DUP4 PUSH2 0x1D96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1993 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x19A0 DUP2 DUP6 DUP6 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A1B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A12 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A82 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B74 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B6B SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B85 DUP5 DUP5 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1C06 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1BF7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C05 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x19AB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C7C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C73 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CEC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE3 SWAP2 SWAP1 PUSH2 0x2C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CF7 DUP4 DUP4 DUP4 PUSH2 0x1D96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D06 DUP3 DUP3 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x1D49 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D40 SWAP3 SWAP2 SWAP1 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1D55 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x1D94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8B SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DE6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1DDA SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EB4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E6F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E66 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EFB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F45 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FA2 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF4 DUP2 PUSH2 0x1FC0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x200F DUP2 PUSH2 0x1FEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202A JUMPI PUSH2 0x2029 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2037 DUP5 DUP3 DUP6 ADD PUSH2 0x2001 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2054 DUP2 PUSH2 0x2040 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x206D PUSH0 DUP4 ADD DUP5 PUSH2 0x204B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20B5 DUP3 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x20BF DUP2 DUP6 PUSH2 0x207D JUMP JUMPDEST SWAP4 POP PUSH2 0x20CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x208D JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x209B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20FB DUP2 DUP5 PUSH2 0x20AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212C DUP3 PUSH2 0x2103 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213C DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP2 EQ PUSH2 0x2146 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2157 DUP2 PUSH2 0x2133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216F DUP2 PUSH2 0x215D JUMP JUMPDEST DUP2 EQ PUSH2 0x2179 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x218A DUP2 PUSH2 0x2166 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21B3 DUP6 DUP3 DUP7 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21C4 DUP6 DUP3 DUP7 ADD PUSH2 0x217C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D7 DUP2 PUSH2 0x215D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x220D JUMPI PUSH2 0x220C PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x221A DUP7 DUP3 DUP8 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x222B DUP7 DUP3 DUP8 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x223C DUP7 DUP3 DUP8 ADD PUSH2 0x217C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2258 DUP2 PUSH2 0x2246 JUMP JUMPDEST DUP2 EQ PUSH2 0x2262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2273 DUP2 PUSH2 0x224F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228E JUMPI PUSH2 0x228D PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x229B DUP5 DUP3 DUP6 ADD PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22AD DUP2 PUSH2 0x2246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x22A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22EF DUP6 DUP3 DUP7 ADD PUSH2 0x2265 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2300 DUP6 DUP3 DUP7 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x231F DUP2 PUSH2 0x230A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2338 PUSH0 DUP4 ADD DUP5 PUSH2 0x2316 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2353 JUMPI PUSH2 0x2352 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2360 DUP5 DUP3 DUP6 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237E JUMPI PUSH2 0x237D PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x238B DUP5 DUP3 DUP6 ADD PUSH2 0x217C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x23D2 DUP3 PUSH2 0x209B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x239C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2403 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP PUSH2 0x240F DUP3 DUP3 PUSH2 0x23C9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x242E JUMPI PUSH2 0x242D PUSH2 0x239C JUMP JUMPDEST JUMPDEST PUSH2 0x2437 DUP3 PUSH2 0x209B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2464 PUSH2 0x245F DUP5 PUSH2 0x2414 JUMP JUMPDEST PUSH2 0x23FA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2480 JUMPI PUSH2 0x247F PUSH2 0x2398 JUMP JUMPDEST JUMPDEST PUSH2 0x248B DUP5 DUP3 DUP6 PUSH2 0x2444 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24A7 JUMPI PUSH2 0x24A6 PUSH2 0x2394 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24B7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24D7 JUMPI PUSH2 0x24D6 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24E4 DUP7 DUP3 DUP8 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x24F5 DUP7 DUP3 DUP8 ADD PUSH2 0x217C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x1FBC JUMP JUMPDEST JUMPDEST PUSH2 0x2522 DUP7 DUP3 DUP8 ADD PUSH2 0x2493 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2542 JUMPI PUSH2 0x2541 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x254F DUP6 DUP3 DUP7 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2560 DUP6 DUP3 DUP7 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25C1 JUMPI PUSH2 0x25C0 PUSH2 0x256A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25FE DUP3 PUSH2 0x215D JUMP JUMPDEST SWAP2 POP PUSH2 0x2609 DUP4 PUSH2 0x215D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2621 JUMPI PUSH2 0x2620 PUSH2 0x25C7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206578636565647320617661696C61626C PUSH0 DUP3 ADD MSTORE PUSH32 0x652062616C616E63650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2681 PUSH1 0x29 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x268C DUP3 PUSH2 0x2627 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26AE DUP2 PUSH2 0x2675 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742061206D696E74657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E9 PUSH1 0x16 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x26F4 DUP3 PUSH2 0x26B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2716 DUP2 PUSH2 0x26DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2751 PUSH1 0x1B DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x275C DUP3 PUSH2 0x271D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x277E DUP2 PUSH2 0x2745 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x278F DUP3 PUSH2 0x215D JUMP JUMPDEST SWAP2 POP PUSH2 0x279A DUP4 PUSH2 0x215D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27B2 JUMPI PUSH2 0x27B1 PUSH2 0x25C7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x576F756C6420657863656564206D617820737570706C79000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27EC PUSH1 0x17 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x27F7 DUP3 PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2819 DUP2 PUSH2 0x27E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206C6F636B207A65726F20746F6B656E73000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2854 PUSH1 0x17 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x285F DUP3 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2881 DUP2 PUSH2 0x2848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206C6F636B00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28BC PUSH1 0x1C DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x28C7 DUP3 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28E9 DUP2 PUSH2 0x28B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612067616D65206D616E6167657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2924 PUSH1 0x1C DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x292F DUP3 PUSH2 0x28F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2951 DUP2 PUSH2 0x2918 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206275726E2066726F6D207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x298C PUSH1 0x1D DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2997 DUP3 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29B9 DUP2 PUSH2 0x2980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29F4 PUSH1 0x1C DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x29FF DUP3 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A21 DUP2 PUSH2 0x29E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D65206D656368616E696373206275726E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5C PUSH1 0x13 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A67 DUP3 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A85 PUSH0 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2A96 DUP2 PUSH2 0x2A50 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726577617264207A65726F2061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD2 PUSH1 0x1A DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADD DUP3 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AFF DUP2 PUSH2 0x2AC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B19 PUSH0 DUP4 ADD DUP6 PUSH2 0x21CE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B2B DUP2 DUP5 PUSH2 0x20AB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73206C6F636B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B68 PUSH1 0x10 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B73 DUP3 PUSH2 0x2B34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B95 DUP2 PUSH2 0x2B5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73207374696C6C206C6F636B656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD0 PUSH1 0x13 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDB DUP3 PUSH2 0x2B9C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BFD DUP2 PUSH2 0x2BC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C38 PUSH1 0x10 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C43 DUP3 PUSH2 0x2C04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C65 DUP2 PUSH2 0x2C2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C75 DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C8E PUSH0 DUP4 ADD DUP5 PUSH2 0x2C6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CC8 PUSH1 0x1F DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD3 DUP3 PUSH2 0x2C94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CF5 DUP2 PUSH2 0x2CBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D0F PUSH0 DUP4 ADD DUP7 PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x2D1C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2D29 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D44 PUSH0 DUP4 ADD DUP6 PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x2D51 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D8C PUSH1 0x14 DUP4 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP PUSH2 0x2D97 DUP3 PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DB9 DUP2 PUSH2 0x2D80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 RETURNDATASIZE 0x22 0xD0 SWAP6 REVERT SDIV XOR 0xDB 0xEC DIV OR 0x4F PC ADD PUSH31 0x74D524CF9F47FF75B19D8D6C9EDDC6F464736F6C634300081A003300000000 ",
							"sourceMap": "416:6175:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5948:418:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1182:56:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5000:160:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6502:86;;;:::i;:::-;;1878:298;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1127:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4683:158:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5310:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3498:425;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6408:82:11;;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2342:370:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5568:368:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;493:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2916:444:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4018:466:11;;;:::i;:::-;;562:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:5:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;5948:418:11:-;6143:4;1239:19:3;:17;:19::i;:::-;6229:6:11::1;6206:13;:19;6220:4;6206:19;;;;;;;;;;;;;;;;6188:15;6198:4;6188:9;:15::i;:::-;:37;;;;:::i;:::-;:47;;6166:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;6322:36;6341:4;6347:2;6351:6;6322:18;:36::i;:::-;6315:43;;5948:418:::0;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2707:82:5:-;2756:5;2780:2;2773:9;;2707:82;:::o;1182:56:11:-;1219:19;1182:56;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;5000:160:11:-;5096:7;5129:14;:23;5144:7;5129:23;;;;;;;;;;;;;;;;5122:30;;5000:160;;;:::o;6502:86::-;2232:4:0;6539:18:11;;2464:16:0;2475:4;2464:10;:16::i;:::-;6570:10:11::1;:8;:10::i;:::-;6502:86:::0;:::o;1878:298::-;1600:32;531:24;1621:10;1600:7;:32::i;:::-;1592:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1239:19:3::1;:17;:19::i;:::-;2023:1:11::2;2009:16;;:2;:16;;::::0;2001:56:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1219:19;2092:6;2076:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;;2068:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2151:17;2157:2;2161:6;2151:5;:17::i;:::-;1878:298:::0;;:::o;1127:48::-;1167:8;1127:48;:::o;1615:84:3:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;4683:158:11:-;4778:7;4811:13;:22;4825:7;4811:22;;;;;;;;;;;;;;;;4804:29;;4683:158;;;:::o;5310:183::-;5409:7;5463:13;:22;5477:7;5463:22;;;;;;;;;;;;;;;;5442:18;5452:7;5442:9;:18::i;:::-;:43;;;;:::i;:::-;5435:50;;5310:183;;;:::o;3498:425::-;1239:19:3;:17;:19::i;:::-;2261:21:4::1;:19;:21::i;:::-;3634:1:11::2;3625:6;:10;3617:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;3707:6;3682:21;3692:10;3682:9;:21::i;:::-;:31;;3674:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3796:6;3767:13;:25;3781:10;3767:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;3842:15;3813:14;:26;3828:10;3813:26;;;;;;;;;;;;;;;:44;;;;3896:10;3883:32;;;3908:6;3883:32;;;;;;:::i;:::-;;;;;;;;2303:20:4::1;:18;:20::i;:::-;3498:425:11::0;:::o;3004:116:5:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;6408:82:11:-;2232:4:0;6443:18:11;;2464:16:0;2475:4;2464:10;:16::i;:::-;6474:8:11::1;:6;:8::i;:::-;6408:82:::0;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:5:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2342:370:11:-;1456:38;606:30;1483:10;1456:7;:38::i;:::-;1448:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1239:19:3::1;:17;:19::i;:::-;2496:1:11::2;2480:18;;:4;:18;;::::0;2472:60:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2570:6;2551:15;2561:4;2551:9;:15::i;:::-;:25;;2543:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2620:19;2626:4;2632:6;2620:5;:19::i;:::-;2668:4;2655:49;;;2674:6;2655:49;;;;;;:::i;:::-;;;;;;;;2342:370:::0;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;5568:368:11:-;5711:4;1239:19:3;:17;:19::i;:::-;5809:6:11::1;5780:13;:25;5794:10;5780:25;;;;;;;;;;;;;;;;5756:21;5766:10;5756:9;:21::i;:::-;:49;;;;:::i;:::-;:59;;5734:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;5902:26;5917:2;5921:6;5902:14;:26::i;:::-;5895:33;;5568:368:::0;;;;:::o;493:62::-;531:24;493:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;2916:444:11:-;1456:38;606:30;1483:10;1456:7;:38::i;:::-;1448:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1239:19:3::1;:17;:19::i;:::-;2261:21:4::2;:19;:21::i;:::-;3152:1:11::3;3138:16;;:2;:16;;::::0;3130:55:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;1219:19;3220:6;3204:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;;3196:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3289:17;3295:2;3299:6;3289:5;:17::i;:::-;3333:2;3322:30;;;3337:6;3345;3322:30;;;;;;;:::i;:::-;;;;;;;;2303:20:4::2;:18;:20::i;:::-;2916:444:11::0;;;:::o;3551:140:5:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;4018:466:11:-;1239:19:3;:17;:19::i;:::-;2261:21:4::1;:19;:21::i;:::-;4125:20:11::2;4148:13;:25;4162:10;4148:25;;;;;;;;;;;;;;;;4125:48;;4207:1;4192:12;:16;4184:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1167:8;4281:14;:26;4296:10;4281:26;;;;;;;;;;;;;;;;:42;;;;:::i;:::-;4262:15;:61;;4240:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;4419:1;4391:13;:25;4405:10;4391:25;;;;;;;;;;;;;;;:29;;;;4451:10;4436:40;;;4463:12;4436:40;;;;;;:::i;:::-;;;;;;;;4114:370;2303:20:4::1;:18;:20::i;:::-;4018:466:11:o:0;562:74::-;606:30;562:74;:::o;763:146:9:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8726:128:5:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1767:106:3:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;4776:244:5:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2433:117:3:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;7458:208:5:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;2186:115:3:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;7984:206:5:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;1945:106:3:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;6008:1107:5:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:474::-;6184:6;6192;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:53;6437:7;6428:6;6417:9;6413:22;6392:53;:::i;:::-;6382:63;;6338:117;6494:2;6520:53;6565:7;6556:6;6545:9;6541:22;6520:53;:::i;:::-;6510:63;;6465:118;6116:474;;;;;:::o;6596:86::-;6631:7;6671:4;6664:5;6660:16;6649:27;;6596:86;;;:::o;6688:112::-;6771:22;6787:5;6771:22;:::i;:::-;6766:3;6759:35;6688:112;;:::o;6806:214::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:67;7010:1;6999:9;6995:17;6986:6;6946:67;:::i;:::-;6806:214;;;;:::o;7026:329::-;7085:6;7134:2;7122:9;7113:7;7109:23;7105:32;7102:119;;;7140:79;;:::i;:::-;7102:119;7260:1;7285:53;7330:7;7321:6;7310:9;7306:22;7285:53;:::i;:::-;7275:63;;7231:117;7026:329;;;;:::o;7361:::-;7420:6;7469:2;7457:9;7448:7;7444:23;7440:32;7437:119;;;7475:79;;:::i;:::-;7437:119;7595:1;7620:53;7665:7;7656:6;7645:9;7641:22;7620:53;:::i;:::-;7610:63;;7566:117;7361:329;;;;:::o;7696:117::-;7805:1;7802;7795:12;7819:117;7928:1;7925;7918:12;7942:180;7990:77;7987:1;7980:88;8087:4;8084:1;8077:15;8111:4;8108:1;8101:15;8128:281;8211:27;8233:4;8211:27;:::i;:::-;8203:6;8199:40;8341:6;8329:10;8326:22;8305:18;8293:10;8290:34;8287:62;8284:88;;;8352:18;;:::i;:::-;8284:88;8392:10;8388:2;8381:22;8171:238;8128:281;;:::o;8415:129::-;8449:6;8476:20;;:::i;:::-;8466:30;;8505:33;8533:4;8525:6;8505:33;:::i;:::-;8415:129;;;:::o;8550:308::-;8612:4;8702:18;8694:6;8691:30;8688:56;;;8724:18;;:::i;:::-;8688:56;8762:29;8784:6;8762:29;:::i;:::-;8754:37;;8846:4;8840;8836:15;8828:23;;8550:308;;;:::o;8864:148::-;8962:6;8957:3;8952;8939:30;9003:1;8994:6;8989:3;8985:16;8978:27;8864:148;;;:::o;9018:425::-;9096:5;9121:66;9137:49;9179:6;9137:49;:::i;:::-;9121:66;:::i;:::-;9112:75;;9210:6;9203:5;9196:21;9248:4;9241:5;9237:16;9286:3;9277:6;9272:3;9268:16;9265:25;9262:112;;;9293:79;;:::i;:::-;9262:112;9383:54;9430:6;9425:3;9420;9383:54;:::i;:::-;9102:341;9018:425;;;;;:::o;9463:340::-;9519:5;9568:3;9561:4;9553:6;9549:17;9545:27;9535:122;;9576:79;;:::i;:::-;9535:122;9693:6;9680:20;9718:79;9793:3;9785:6;9778:4;9770:6;9766:17;9718:79;:::i;:::-;9709:88;;9525:278;9463:340;;;;:::o;9809:799::-;9896:6;9904;9912;9961:2;9949:9;9940:7;9936:23;9932:32;9929:119;;;9967:79;;:::i;:::-;9929:119;10087:1;10112:53;10157:7;10148:6;10137:9;10133:22;10112:53;:::i;:::-;10102:63;;10058:117;10214:2;10240:53;10285:7;10276:6;10265:9;10261:22;10240:53;:::i;:::-;10230:63;;10185:118;10370:2;10359:9;10355:18;10342:32;10401:18;10393:6;10390:30;10387:117;;;10423:79;;:::i;:::-;10387:117;10528:63;10583:7;10574:6;10563:9;10559:22;10528:63;:::i;:::-;10518:73;;10313:288;9809:799;;;;;:::o;10614:474::-;10682:6;10690;10739:2;10727:9;10718:7;10714:23;10710:32;10707:119;;;10745:79;;:::i;:::-;10707:119;10865:1;10890:53;10935:7;10926:6;10915:9;10911:22;10890:53;:::i;:::-;10880:63;;10836:117;10992:2;11018:53;11063:7;11054:6;11043:9;11039:22;11018:53;:::i;:::-;11008:63;;10963:118;10614:474;;;;;:::o;11094:180::-;11142:77;11139:1;11132:88;11239:4;11236:1;11229:15;11263:4;11260:1;11253:15;11280:320;11324:6;11361:1;11355:4;11351:12;11341:22;;11408:1;11402:4;11398:12;11429:18;11419:81;;11485:4;11477:6;11473:17;11463:27;;11419:81;11547:2;11539:6;11536:14;11516:18;11513:38;11510:84;;11566:18;;:::i;:::-;11510:84;11331:269;11280:320;;;:::o;11606:180::-;11654:77;11651:1;11644:88;11751:4;11748:1;11741:15;11775:4;11772:1;11765:15;11792:194;11832:4;11852:20;11870:1;11852:20;:::i;:::-;11847:25;;11886:20;11904:1;11886:20;:::i;:::-;11881:25;;11930:1;11927;11923:9;11915:17;;11954:1;11948:4;11945:11;11942:37;;;11959:18;;:::i;:::-;11942:37;11792:194;;;;:::o;11992:228::-;12132:34;12128:1;12120:6;12116:14;12109:58;12201:11;12196:2;12188:6;12184:15;12177:36;11992:228;:::o;12226:366::-;12368:3;12389:67;12453:2;12448:3;12389:67;:::i;:::-;12382:74;;12465:93;12554:3;12465:93;:::i;:::-;12583:2;12578:3;12574:12;12567:19;;12226:366;;;:::o;12598:419::-;12764:4;12802:2;12791:9;12787:18;12779:26;;12851:9;12845:4;12841:20;12837:1;12826:9;12822:17;12815:47;12879:131;13005:4;12879:131;:::i;:::-;12871:139;;12598:419;;;:::o;13023:172::-;13163:24;13159:1;13151:6;13147:14;13140:48;13023:172;:::o;13201:366::-;13343:3;13364:67;13428:2;13423:3;13364:67;:::i;:::-;13357:74;;13440:93;13529:3;13440:93;:::i;:::-;13558:2;13553:3;13549:12;13542:19;;13201:366;;;:::o;13573:419::-;13739:4;13777:2;13766:9;13762:18;13754:26;;13826:9;13820:4;13816:20;13812:1;13801:9;13797:17;13790:47;13854:131;13980:4;13854:131;:::i;:::-;13846:139;;13573:419;;;:::o;13998:177::-;14138:29;14134:1;14126:6;14122:14;14115:53;13998:177;:::o;14181:366::-;14323:3;14344:67;14408:2;14403:3;14344:67;:::i;:::-;14337:74;;14420:93;14509:3;14420:93;:::i;:::-;14538:2;14533:3;14529:12;14522:19;;14181:366;;;:::o;14553:419::-;14719:4;14757:2;14746:9;14742:18;14734:26;;14806:9;14800:4;14796:20;14792:1;14781:9;14777:17;14770:47;14834:131;14960:4;14834:131;:::i;:::-;14826:139;;14553:419;;;:::o;14978:191::-;15018:3;15037:20;15055:1;15037:20;:::i;:::-;15032:25;;15071:20;15089:1;15071:20;:::i;:::-;15066:25;;15114:1;15111;15107:9;15100:16;;15135:3;15132:1;15129:10;15126:36;;;15142:18;;:::i;:::-;15126:36;14978:191;;;;:::o;15175:173::-;15315:25;15311:1;15303:6;15299:14;15292:49;15175:173;:::o;15354:366::-;15496:3;15517:67;15581:2;15576:3;15517:67;:::i;:::-;15510:74;;15593:93;15682:3;15593:93;:::i;:::-;15711:2;15706:3;15702:12;15695:19;;15354:366;;;:::o;15726:419::-;15892:4;15930:2;15919:9;15915:18;15907:26;;15979:9;15973:4;15969:20;15965:1;15954:9;15950:17;15943:47;16007:131;16133:4;16007:131;:::i;:::-;15999:139;;15726:419;;;:::o;16151:173::-;16291:25;16287:1;16279:6;16275:14;16268:49;16151:173;:::o;16330:366::-;16472:3;16493:67;16557:2;16552:3;16493:67;:::i;:::-;16486:74;;16569:93;16658:3;16569:93;:::i;:::-;16687:2;16682:3;16678:12;16671:19;;16330:366;;;:::o;16702:419::-;16868:4;16906:2;16895:9;16891:18;16883:26;;16955:9;16949:4;16945:20;16941:1;16930:9;16926:17;16919:47;16983:131;17109:4;16983:131;:::i;:::-;16975:139;;16702:419;;;:::o;17127:178::-;17267:30;17263:1;17255:6;17251:14;17244:54;17127:178;:::o;17311:366::-;17453:3;17474:67;17538:2;17533:3;17474:67;:::i;:::-;17467:74;;17550:93;17639:3;17550:93;:::i;:::-;17668:2;17663:3;17659:12;17652:19;;17311:366;;;:::o;17683:419::-;17849:4;17887:2;17876:9;17872:18;17864:26;;17936:9;17930:4;17926:20;17922:1;17911:9;17907:17;17900:47;17964:131;18090:4;17964:131;:::i;:::-;17956:139;;17683:419;;;:::o;18108:178::-;18248:30;18244:1;18236:6;18232:14;18225:54;18108:178;:::o;18292:366::-;18434:3;18455:67;18519:2;18514:3;18455:67;:::i;:::-;18448:74;;18531:93;18620:3;18531:93;:::i;:::-;18649:2;18644:3;18640:12;18633:19;;18292:366;;;:::o;18664:419::-;18830:4;18868:2;18857:9;18853:18;18845:26;;18917:9;18911:4;18907:20;18903:1;18892:9;18888:17;18881:47;18945:131;19071:4;18945:131;:::i;:::-;18937:139;;18664:419;;;:::o;19089:179::-;19229:31;19225:1;19217:6;19213:14;19206:55;19089:179;:::o;19274:366::-;19416:3;19437:67;19501:2;19496:3;19437:67;:::i;:::-;19430:74;;19513:93;19602:3;19513:93;:::i;:::-;19631:2;19626:3;19622:12;19615:19;;19274:366;;;:::o;19646:419::-;19812:4;19850:2;19839:9;19835:18;19827:26;;19899:9;19893:4;19889:20;19885:1;19874:9;19870:17;19863:47;19927:131;20053:4;19927:131;:::i;:::-;19919:139;;19646:419;;;:::o;20071:178::-;20211:30;20207:1;20199:6;20195:14;20188:54;20071:178;:::o;20255:366::-;20397:3;20418:67;20482:2;20477:3;20418:67;:::i;:::-;20411:74;;20494:93;20583:3;20494:93;:::i;:::-;20612:2;20607:3;20603:12;20596:19;;20255:366;;;:::o;20627:419::-;20793:4;20831:2;20820:9;20816:18;20808:26;;20880:9;20874:4;20870:20;20866:1;20855:9;20851:17;20844:47;20908:131;21034:4;20908:131;:::i;:::-;20900:139;;20627:419;;;:::o;21052:169::-;21192:21;21188:1;21180:6;21176:14;21169:45;21052:169;:::o;21227:366::-;21369:3;21390:67;21454:2;21449:3;21390:67;:::i;:::-;21383:74;;21466:93;21555:3;21466:93;:::i;:::-;21584:2;21579:3;21575:12;21568:19;;21227:366;;;:::o;21599:529::-;21793:4;21831:2;21820:9;21816:18;21808:26;;21844:71;21912:1;21901:9;21897:17;21888:6;21844:71;:::i;:::-;21962:9;21956:4;21952:20;21947:2;21936:9;21932:18;21925:48;21990:131;22116:4;21990:131;:::i;:::-;21982:139;;21599:529;;;;:::o;22134:176::-;22274:28;22270:1;22262:6;22258:14;22251:52;22134:176;:::o;22316:366::-;22458:3;22479:67;22543:2;22538:3;22479:67;:::i;:::-;22472:74;;22555:93;22644:3;22555:93;:::i;:::-;22673:2;22668:3;22664:12;22657:19;;22316:366;;;:::o;22688:419::-;22854:4;22892:2;22881:9;22877:18;22869:26;;22941:9;22935:4;22931:20;22927:1;22916:9;22912:17;22905:47;22969:131;23095:4;22969:131;:::i;:::-;22961:139;;22688:419;;;:::o;23113:423::-;23254:4;23292:2;23281:9;23277:18;23269:26;;23305:71;23373:1;23362:9;23358:17;23349:6;23305:71;:::i;:::-;23423:9;23417:4;23413:20;23408:2;23397:9;23393:18;23386:48;23451:78;23524:4;23515:6;23451:78;:::i;:::-;23443:86;;23113:423;;;;;:::o;23542:166::-;23682:18;23678:1;23670:6;23666:14;23659:42;23542:166;:::o;23714:366::-;23856:3;23877:67;23941:2;23936:3;23877:67;:::i;:::-;23870:74;;23953:93;24042:3;23953:93;:::i;:::-;24071:2;24066:3;24062:12;24055:19;;23714:366;;;:::o;24086:419::-;24252:4;24290:2;24279:9;24275:18;24267:26;;24339:9;24333:4;24329:20;24325:1;24314:9;24310:17;24303:47;24367:131;24493:4;24367:131;:::i;:::-;24359:139;;24086:419;;;:::o;24511:169::-;24651:21;24647:1;24639:6;24635:14;24628:45;24511:169;:::o;24686:366::-;24828:3;24849:67;24913:2;24908:3;24849:67;:::i;:::-;24842:74;;24925:93;25014:3;24925:93;:::i;:::-;25043:2;25038:3;25034:12;25027:19;;24686:366;;;:::o;25058:419::-;25224:4;25262:2;25251:9;25247:18;25239:26;;25311:9;25305:4;25301:20;25297:1;25286:9;25282:17;25275:47;25339:131;25465:4;25339:131;:::i;:::-;25331:139;;25058:419;;;:::o;25483:166::-;25623:18;25619:1;25611:6;25607:14;25600:42;25483:166;:::o;25655:366::-;25797:3;25818:67;25882:2;25877:3;25818:67;:::i;:::-;25811:74;;25894:93;25983:3;25894:93;:::i;:::-;26012:2;26007:3;26003:12;25996:19;;25655:366;;;:::o;26027:419::-;26193:4;26231:2;26220:9;26216:18;26208:26;;26280:9;26274:4;26270:20;26266:1;26255:9;26251:17;26244:47;26308:131;26434:4;26308:131;:::i;:::-;26300:139;;26027:419;;;:::o;26452:118::-;26539:24;26557:5;26539:24;:::i;:::-;26534:3;26527:37;26452:118;;:::o;26576:222::-;26669:4;26707:2;26696:9;26692:18;26684:26;;26720:71;26788:1;26777:9;26773:17;26764:6;26720:71;:::i;:::-;26576:222;;;;:::o;26804:181::-;26944:33;26940:1;26932:6;26928:14;26921:57;26804:181;:::o;26991:366::-;27133:3;27154:67;27218:2;27213:3;27154:67;:::i;:::-;27147:74;;27230:93;27319:3;27230:93;:::i;:::-;27348:2;27343:3;27339:12;27332:19;;26991:366;;;:::o;27363:419::-;27529:4;27567:2;27556:9;27552:18;27544:26;;27616:9;27610:4;27606:20;27602:1;27591:9;27587:17;27580:47;27644:131;27770:4;27644:131;:::i;:::-;27636:139;;27363:419;;;:::o;27788:442::-;27937:4;27975:2;27964:9;27960:18;27952:26;;27988:71;28056:1;28045:9;28041:17;28032:6;27988:71;:::i;:::-;28069:72;28137:2;28126:9;28122:18;28113:6;28069:72;:::i;:::-;28151;28219:2;28208:9;28204:18;28195:6;28151:72;:::i;:::-;27788:442;;;;;;:::o;28236:332::-;28357:4;28395:2;28384:9;28380:18;28372:26;;28408:71;28476:1;28465:9;28461:17;28452:6;28408:71;:::i;:::-;28489:72;28557:2;28546:9;28542:18;28533:6;28489:72;:::i;:::-;28236:332;;;;;:::o;28574:170::-;28714:22;28710:1;28702:6;28698:14;28691:46;28574:170;:::o;28750:366::-;28892:3;28913:67;28977:2;28972:3;28913:67;:::i;:::-;28906:74;;28989:93;29078:3;28989:93;:::i;:::-;29107:2;29102:3;29098:12;29091:19;;28750:366;;;:::o;29122:419::-;29288:4;29326:2;29315:9;29311:18;29303:26;;29375:9;29369:4;29365:20;29361:1;29350:9;29346:17;29339:47;29403:131;29529:4;29403:131;:::i;:::-;29395:139;;29122:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2353200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "375",
								"GAME_MANAGER_ROLE()": "435",
								"LOCK_DURATION()": "414",
								"MAX_SUPPLY()": "393",
								"MINTER_ROLE()": "414",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2941",
								"burn(address,uint256)": "infinite",
								"decimals()": "384",
								"getAvailableBalance(address)": "infinite",
								"getLockTimestamp(address)": "2941",
								"getLockedTokens(address)": "2875",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"lockTokens(uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2584",
								"payReward(address,uint256,string)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unlockTokens()": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 416,
									"end": 6591,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1380,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "5369676E732047616D6520546F6B656E00000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "5349474E00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 1372,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1341,
									"end": 1359,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1341,
									"end": 1359,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1361,
									"end": 1371,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 1340,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 1330,
									"end": 1340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1330,
									"end": 1340,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 1372,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1330,
									"end": 1372,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 1372,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 1372,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1330,
									"end": 1372,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 1372,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 6591,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f3d22d095fd0518dbec04174f58017e74d524cf9f47ff75b19d8d6c9eddc6f464736f6c634300081a0033",
									".code": [
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "6B2D95D4"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "DA518829"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "DA518829"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "F968F493"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "FF6FCDBD"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "9DC29FAC"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "6B2D95D4"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "6C24A76F"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "6E27D889"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "485D3834"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "32CB6B0C"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "3C26835B"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 416,
											"end": 6591,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 5948,
											"end": 6366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 5948,
											"end": 6366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 5948,
											"end": 6366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1182,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1182,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5000,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5000,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5000,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 6502,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1878,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1878,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1127,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1127,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4683,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4683,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4683,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5310,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5310,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5310,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 3498,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 3498,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 6408,
											"end": 6490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2342,
											"end": 2712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2342,
											"end": 2712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5568,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 5568,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 5568,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 493,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 493,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2916,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2916,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4484,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 4018,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 4018,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 4018,
											"end": 4484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4484,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 4018,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4484,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 562,
											"end": 636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 562,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 562,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 562,
											"end": 636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 636,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 562,
											"end": 636,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 562,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 562,
											"end": 636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 636,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6147,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6229,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6224,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6206,
											"end": 6225,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 6198,
											"end": 6202,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 6188,
											"end": 6203,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 6188,
											"end": 6203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 6188,
											"end": 6225,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 6188,
											"end": 6225,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 6188,
											"end": 6225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6235,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 6166,
											"end": 6304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 6166,
											"end": 6304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6322,
											"end": 6358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6341,
											"end": 6345,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6349,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6351,
											"end": 6357,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6322,
											"end": 6340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 6322,
											"end": 6358,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6322,
											"end": 6358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6322,
											"end": 6358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6315,
											"end": 6358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6315,
											"end": 6358,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 6366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1238,
											"name": "PUSH",
											"source": 11,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 1182,
											"end": 1238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5143,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5151,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6557,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6539,
											"end": 6557,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 6570,
											"end": 6578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 6570,
											"end": 6580,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6570,
											"end": 6580,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 6570,
											"end": 6580,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6502,
											"end": 6588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6502,
											"end": 6588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 531,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 1621,
											"end": 1631,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1600,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1600,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 1592,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1592,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2023,
											"end": 2024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2025,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2009,
											"end": 2025,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2009,
											"end": 2011,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2009,
											"end": 2025,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2009,
											"end": 2025,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2009,
											"end": 2025,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 2001,
											"end": 2057,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2001,
											"end": 2057,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2092,
											"end": 2098,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2089,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2076,
											"end": 2087,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2076,
											"end": 2089,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2089,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2076,
											"end": 2089,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2098,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2076,
											"end": 2098,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2098,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2098,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2076,
											"end": 2098,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2098,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2076,
											"end": 2098,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2112,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2112,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2068,
											"end": 2140,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2068,
											"end": 2140,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2151,
											"end": 2168,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2157,
											"end": 2159,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2167,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2151,
											"end": 2156,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2151,
											"end": 2168,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2151,
											"end": 2168,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2151,
											"end": 2168,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 2176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1167,
											"end": 1175,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 1127,
											"end": 1175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4778,
											"end": 4785,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4825,
											"end": 4832,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4833,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4833,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5409,
											"end": 5416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5476,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5484,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 5452,
											"end": 5459,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 5442,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5460,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 5442,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 5442,
											"end": 5485,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5442,
											"end": 5485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5485,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 5442,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5435,
											"end": 5485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5435,
											"end": 5485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3631,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3617,
											"end": 3663,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3617,
											"end": 3663,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3713,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3682,
											"end": 3703,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3692,
											"end": 3702,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3682,
											"end": 3691,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 3682,
											"end": 3703,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3682,
											"end": 3703,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3682,
											"end": 3703,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3682,
											"end": 3713,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3682,
											"end": 3713,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 3674,
											"end": 3746,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 3674,
											"end": 3746,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3796,
											"end": 3802,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3791,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3767,
											"end": 3802,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3802,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3857,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3838,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3839,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3857,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3857,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3857,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3857,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3906,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "AC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
										},
										{
											"begin": 3908,
											"end": 3914,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3883,
											"end": 3915,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3915,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3923,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6474,
											"end": 6482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 6474,
											"end": 6480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 6474,
											"end": 6482,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6474,
											"end": 6482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 6474,
											"end": 6482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 606,
											"end": 636,
											"name": "PUSH",
											"source": 11,
											"value": "EF17B1F3C5A412F9C8E887E3ABD186802AFEC7DC657FD3B7002BF87B128DD0B1"
										},
										{
											"begin": 1483,
											"end": 1493,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1456,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1494,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 1456,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 1448,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2480,
											"end": 2498,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2484,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2480,
											"end": 2498,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 2472,
											"end": 2532,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 2472,
											"end": 2532,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2576,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2551,
											"end": 2566,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2561,
											"end": 2565,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2551,
											"end": 2560,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2551,
											"end": 2566,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2551,
											"end": 2566,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2551,
											"end": 2566,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2551,
											"end": 2576,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2551,
											"end": 2576,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2543,
											"end": 2609,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2543,
											"end": 2609,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2639,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2626,
											"end": 2630,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2638,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2625,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2620,
											"end": 2639,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2639,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2620,
											"end": 2639,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2668,
											"end": 2672,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FAD31924D655455395C87544C8AA1FFDB5A7505A22A3C2E03F28003B6556A75F"
										},
										{
											"begin": 2674,
											"end": 2680,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 2655,
											"end": 2704,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2704,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5711,
											"end": 5715,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5809,
											"end": 5815,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5804,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5766,
											"end": 5776,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 5756,
											"end": 5777,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5777,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5756,
											"end": 5777,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5756,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5756,
											"end": 5805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5756,
											"end": 5805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5815,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5815,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 5734,
											"end": 5884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5734,
											"end": 5884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 5928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5917,
											"end": 5919,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5927,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 5916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5902,
											"end": 5928,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 5928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5902,
											"end": 5928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 5928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 5928,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5568,
											"end": 5936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 531,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 493,
											"end": 555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 606,
											"end": 636,
											"name": "PUSH",
											"source": 11,
											"value": "EF17B1F3C5A412F9C8E887E3ABD186802AFEC7DC657FD3B7002BF87B128DD0B1"
										},
										{
											"begin": 1483,
											"end": 1493,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1456,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1494,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1456,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 1448,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 1448,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3153,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3154,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3138,
											"end": 3154,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3140,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3154,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3138,
											"end": 3154,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3154,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3130,
											"end": 3185,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3130,
											"end": 3185,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1238,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 3220,
											"end": 3226,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3217,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3204,
											"end": 3215,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3204,
											"end": 3217,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3217,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3204,
											"end": 3217,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3226,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 3204,
											"end": 3226,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3226,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3226,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3204,
											"end": 3226,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3226,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 3204,
											"end": 3226,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3240,
											"modifierDepth": 3,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3240,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 3196,
											"end": 3268,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 3196,
											"end": 3268,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3306,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 3295,
											"end": 3297,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3305,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3294,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3289,
											"end": 3306,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3306,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 3289,
											"end": 3306,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3333,
											"end": 3335,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "21A82678DAA5235B7B5DE669FDF9599453D3D885CEE0826E92636D747419689C"
										},
										{
											"begin": 3337,
											"end": 3343,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3345,
											"end": 3351,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3322,
											"end": 3352,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3352,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2916,
											"end": 3360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4484,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 4018,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4145,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4161,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4172,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4173,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4173,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4173,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4207,
											"end": 4208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4204,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4208,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4184,
											"end": 4229,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4184,
											"end": 4229,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1167,
											"end": 1175,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 4281,
											"end": 4295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4306,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4307,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4281,
											"end": 4323,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4323,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 4281,
											"end": 4323,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4323,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4281,
											"end": 4323,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4277,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4323,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4323,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4240,
											"end": 4370,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4240,
											"end": 4370,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4420,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4404,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4415,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4416,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4420,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4420,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4420,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4420,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4461,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
										},
										{
											"begin": 4463,
											"end": 4475,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4436,
											"end": 4476,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4476,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 4114,
											"end": 4484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 562,
											"end": 636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 606,
											"end": 636,
											"name": "PUSH",
											"source": 11,
											"value": "EF17B1F3C5A412F9C8E887E3ABD186802AFEC7DC657FD3B7002BF87B128DD0B1"
										},
										{
											"begin": 562,
											"end": 636,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 562,
											"end": 636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 6247,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 6392,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 6520,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6465,
											"end": 6583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6676,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 6771,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6759,
											"end": 6794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6995,
											"end": 7012,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 6946,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7136,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7120,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7109,
											"end": 7132,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7105,
											"end": 7137,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 7140,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7306,
											"end": 7328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 7285,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7420,
											"end": 7426,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7448,
											"end": 7455,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7440,
											"end": 7472,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 7475,
											"end": 7554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 7665,
											"end": 7672,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7662,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7663,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 7620,
											"end": 7673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7673,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7566,
											"end": 7683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7696,
											"end": 7813,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 7696,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7805,
											"end": 7806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7803,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7795,
											"end": 7807,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 7936,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 7819,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7926,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7930,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7942,
											"end": 8122,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 7942,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7990,
											"end": 8067,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7987,
											"end": 7988,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 8068,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8087,
											"end": 8091,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 8084,
											"end": 8085,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8077,
											"end": 8092,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8111,
											"end": 8115,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8101,
											"end": 8116,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8128,
											"end": 8409,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 8128,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8211,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 8233,
											"end": 8237,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8211,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 8211,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8211,
											"end": 8238,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 8211,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8203,
											"end": 8209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8199,
											"end": 8239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8329,
											"end": 8339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8326,
											"end": 8348,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8305,
											"end": 8323,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8293,
											"end": 8303,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8290,
											"end": 8324,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8287,
											"end": 8349,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 8284,
											"end": 8372,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8284,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 8284,
											"end": 8372,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8352,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 8352,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8352,
											"end": 8370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8352,
											"end": 8370,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 8352,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8284,
											"end": 8372,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 8284,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8392,
											"end": 8402,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8390,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8381,
											"end": 8403,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8171,
											"end": 8409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8128,
											"end": 8409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8128,
											"end": 8409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8128,
											"end": 8409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8544,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 8415,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8449,
											"end": 8455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 8476,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 8476,
											"end": 8496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8476,
											"end": 8496,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 8476,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8466,
											"end": 8496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8466,
											"end": 8496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8505,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 8533,
											"end": 8537,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8525,
											"end": 8531,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8505,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 8505,
											"end": 8538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8505,
											"end": 8538,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 8505,
											"end": 8538,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8544,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8544,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8550,
											"end": 8858,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 8550,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8694,
											"end": 8700,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8691,
											"end": 8721,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8744,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 8688,
											"end": 8744,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8724,
											"end": 8742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8744,
											"name": "tag",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 8688,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8762,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 8784,
											"end": 8790,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8762,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 8762,
											"end": 8791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8762,
											"end": 8791,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 8762,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8754,
											"end": 8791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8754,
											"end": 8791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8850,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8840,
											"end": 8844,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8828,
											"end": 8851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8828,
											"end": 8851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8550,
											"end": 8858,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8550,
											"end": 8858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8550,
											"end": 8858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8550,
											"end": 8858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8864,
											"end": 9012,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 8864,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8962,
											"end": 8968,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8957,
											"end": 8960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 8955,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8939,
											"end": 8969,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 9003,
											"end": 9004,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8994,
											"end": 9000,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8989,
											"end": 8992,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8978,
											"end": 9005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8864,
											"end": 9012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8864,
											"end": 9012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8864,
											"end": 9012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8864,
											"end": 9012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9443,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 9018,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9121,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 9137,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 9179,
											"end": 9185,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 9137,
											"end": 9186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9186,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 9137,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9121,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 9121,
											"end": 9187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9121,
											"end": 9187,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 9121,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9216,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9196,
											"end": 9217,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9241,
											"end": 9246,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9237,
											"end": 9253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9286,
											"end": 9289,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9277,
											"end": 9283,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9272,
											"end": 9275,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9265,
											"end": 9290,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9262,
											"end": 9374,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9262,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 9262,
											"end": 9374,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9293,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 9293,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 9293,
											"end": 9372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9293,
											"end": 9372,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 9293,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9262,
											"end": 9374,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 9262,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 9430,
											"end": 9436,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9425,
											"end": 9428,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9420,
											"end": 9423,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 9383,
											"end": 9437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9437,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 9383,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9102,
											"end": 9443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9443,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9443,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9463,
											"end": 9803,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 9463,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9524,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9571,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9561,
											"end": 9565,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9549,
											"end": 9566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9545,
											"end": 9572,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9535,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 9535,
											"end": 9657,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 9576,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 9576,
											"end": 9655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9655,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 9576,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9535,
											"end": 9657,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 9535,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9693,
											"end": 9699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9680,
											"end": 9700,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 9793,
											"end": 9796,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9785,
											"end": 9791,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9778,
											"end": 9782,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9766,
											"end": 9783,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 9718,
											"end": 9797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9797,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 9718,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9525,
											"end": 9803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9463,
											"end": 9803,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9463,
											"end": 9803,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9463,
											"end": 9803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9463,
											"end": 9803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9463,
											"end": 9803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 10608,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9809,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9904,
											"end": 9910,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9912,
											"end": 9918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9963,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9949,
											"end": 9958,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9940,
											"end": 9947,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9936,
											"end": 9959,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9932,
											"end": 9964,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9929,
											"end": 10048,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9929,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 9929,
											"end": 10048,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9967,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 9967,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9967,
											"end": 10046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9967,
											"end": 10046,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 9967,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9929,
											"end": 10048,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 9929,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10087,
											"end": 10088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10112,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 10157,
											"end": 10164,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10148,
											"end": 10154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10137,
											"end": 10146,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10133,
											"end": 10155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10112,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 10112,
											"end": 10165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10112,
											"end": 10165,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 10112,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10102,
											"end": 10165,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10102,
											"end": 10165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10058,
											"end": 10175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10240,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10276,
											"end": 10282,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10265,
											"end": 10274,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10261,
											"end": 10283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10240,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 10240,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10240,
											"end": 10293,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 10240,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10230,
											"end": 10293,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10230,
											"end": 10293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10185,
											"end": 10303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10372,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10359,
											"end": 10368,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10342,
											"end": 10374,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10401,
											"end": 10419,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10393,
											"end": 10399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10420,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10387,
											"end": 10504,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10387,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 10387,
											"end": 10504,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10423,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 10423,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 10423,
											"end": 10502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10423,
											"end": 10502,
											"name": "tag",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 10423,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10387,
											"end": 10504,
											"name": "tag",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 10387,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10528,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 10583,
											"end": 10590,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10563,
											"end": 10572,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10559,
											"end": 10581,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10528,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 10528,
											"end": 10591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10528,
											"end": 10591,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 10528,
											"end": 10591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10591,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10313,
											"end": 10601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 10608,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 10608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 10608,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 10608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 10608,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 10608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 11088,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 10614,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10682,
											"end": 10688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10690,
											"end": 10696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10739,
											"end": 10741,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10727,
											"end": 10736,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10725,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10714,
											"end": 10737,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10710,
											"end": 10742,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10745,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 10745,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 10745,
											"end": 10824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10745,
											"end": 10824,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 10745,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10865,
											"end": 10866,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10890,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10926,
											"end": 10932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10915,
											"end": 10924,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10911,
											"end": 10933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10890,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 10890,
											"end": 10943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10890,
											"end": 10943,
											"name": "tag",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 10890,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10880,
											"end": 10943,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10880,
											"end": 10943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10836,
											"end": 10953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 10994,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 11063,
											"end": 11070,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11054,
											"end": 11060,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11043,
											"end": 11052,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11039,
											"end": 11061,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11018,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 11018,
											"end": 11071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11018,
											"end": 11071,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 11018,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11008,
											"end": 11071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11008,
											"end": 11071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10963,
											"end": 11081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 11088,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 11088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 11088,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 11088,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 11088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 11088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11094,
											"end": 11274,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 11094,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11142,
											"end": 11219,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11132,
											"end": 11220,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 11236,
											"end": 11237,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11229,
											"end": 11244,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11263,
											"end": 11267,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11260,
											"end": 11261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11253,
											"end": 11268,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11600,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 11280,
											"end": 11600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11324,
											"end": 11330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11361,
											"end": 11362,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 11355,
											"end": 11359,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11351,
											"end": 11363,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11408,
											"end": 11409,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11402,
											"end": 11406,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11398,
											"end": 11410,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11429,
											"end": 11447,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11419,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 11419,
											"end": 11500,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11485,
											"end": 11489,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 11477,
											"end": 11483,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11473,
											"end": 11490,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11463,
											"end": 11490,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11463,
											"end": 11490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11419,
											"end": 11500,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 11419,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11547,
											"end": 11549,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11539,
											"end": 11545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11536,
											"end": 11550,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11513,
											"end": 11551,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11510,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 11510,
											"end": 11594,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 11566,
											"end": 11584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11510,
											"end": 11594,
											"name": "tag",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 11510,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11331,
											"end": 11600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11600,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11606,
											"end": 11786,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 11606,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11654,
											"end": 11731,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11651,
											"end": 11652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11644,
											"end": 11732,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11751,
											"end": 11755,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 11748,
											"end": 11749,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11741,
											"end": 11756,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11775,
											"end": 11779,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11765,
											"end": 11780,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11986,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 11792,
											"end": 11986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11832,
											"end": 11836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 11870,
											"end": 11871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11852,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 11852,
											"end": 11872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11852,
											"end": 11872,
											"name": "tag",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 11852,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11872,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 11904,
											"end": 11905,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 11886,
											"end": 11906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 11906,
											"name": "tag",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 11886,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11881,
											"end": 11906,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11881,
											"end": 11906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11930,
											"end": 11931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11927,
											"end": 11928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11923,
											"end": 11932,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11915,
											"end": 11932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11915,
											"end": 11932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11954,
											"end": 11955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11948,
											"end": 11952,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11945,
											"end": 11956,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11942,
											"end": 11979,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11942,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 11942,
											"end": 11979,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 11959,
											"end": 11977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "tag",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11942,
											"end": 11979,
											"name": "tag",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 11942,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11986,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11986,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11992,
											"end": 12220,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 11992,
											"end": 12220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12132,
											"end": 12166,
											"name": "PUSH",
											"source": 12,
											"value": "5472616E7366657220616D6F756E74206578636565647320617661696C61626C"
										},
										{
											"begin": 12128,
											"end": 12129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12120,
											"end": 12126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12109,
											"end": 12167,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12201,
											"end": 12212,
											"name": "PUSH",
											"source": 12,
											"value": "652062616C616E63650000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12196,
											"end": 12198,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12188,
											"end": 12194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12213,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11992,
											"end": 12220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11992,
											"end": 12220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12592,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 12226,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12368,
											"end": 12371,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12389,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 12453,
											"end": 12455,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 12448,
											"end": 12451,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 12389,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12456,
											"name": "tag",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 12389,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12382,
											"end": 12456,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12382,
											"end": 12456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12465,
											"end": 12558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 12554,
											"end": 12557,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12465,
											"end": 12558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 12465,
											"end": 12558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12465,
											"end": 12558,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 12465,
											"end": 12558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12585,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12578,
											"end": 12581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12574,
											"end": 12586,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12567,
											"end": 12586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12567,
											"end": 12586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12592,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12592,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12598,
											"end": 13017,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 12598,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12764,
											"end": 12768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12791,
											"end": 12800,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12787,
											"end": 12805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12779,
											"end": 12805,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12779,
											"end": 12805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12851,
											"end": 12860,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12845,
											"end": 12849,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12841,
											"end": 12861,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12837,
											"end": 12838,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12826,
											"end": 12835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12822,
											"end": 12839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12815,
											"end": 12862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12879,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 13005,
											"end": 13009,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12879,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 12879,
											"end": 13010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12879,
											"end": 13010,
											"name": "tag",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 12879,
											"end": 13010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 13010,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 13010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12598,
											"end": 13017,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12598,
											"end": 13017,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12598,
											"end": 13017,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12598,
											"end": 13017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13023,
											"end": 13195,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 13023,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13163,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "43616C6C6572206973206E6F742061206D696E74657200000000000000000000"
										},
										{
											"begin": 13159,
											"end": 13160,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13151,
											"end": 13157,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13147,
											"end": 13161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13140,
											"end": 13188,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13023,
											"end": 13195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13023,
											"end": 13195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13201,
											"end": 13567,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 13201,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13343,
											"end": 13346,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13364,
											"end": 13431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 13428,
											"end": 13430,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 13423,
											"end": 13426,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 13364,
											"end": 13431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13431,
											"name": "tag",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 13364,
											"end": 13431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13357,
											"end": 13431,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13357,
											"end": 13431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13440,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 13529,
											"end": 13532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13440,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 13440,
											"end": 13533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13440,
											"end": 13533,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 13440,
											"end": 13533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13558,
											"end": 13560,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13556,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13549,
											"end": 13561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13542,
											"end": 13561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13542,
											"end": 13561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13201,
											"end": 13567,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13201,
											"end": 13567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13201,
											"end": 13567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13201,
											"end": 13567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13573,
											"end": 13992,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 13573,
											"end": 13992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13739,
											"end": 13743,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13779,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13766,
											"end": 13775,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13754,
											"end": 13780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13754,
											"end": 13780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13826,
											"end": 13835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13820,
											"end": 13824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13816,
											"end": 13836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13812,
											"end": 13813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13801,
											"end": 13810,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13797,
											"end": 13814,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13790,
											"end": 13837,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13854,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 13980,
											"end": 13984,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13854,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 13854,
											"end": 13985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13854,
											"end": 13985,
											"name": "tag",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 13854,
											"end": 13985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13846,
											"end": 13985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13846,
											"end": 13985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13573,
											"end": 13992,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13573,
											"end": 13992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13573,
											"end": 13992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13573,
											"end": 13992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13998,
											"end": 14175,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 13998,
											"end": 14175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14138,
											"end": 14167,
											"name": "PUSH",
											"source": 12,
											"value": "43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000"
										},
										{
											"begin": 14134,
											"end": 14135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14126,
											"end": 14132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14122,
											"end": 14136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14115,
											"end": 14168,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13998,
											"end": 14175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13998,
											"end": 14175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14323,
											"end": 14326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 14408,
											"end": 14410,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 14403,
											"end": 14406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 14344,
											"end": 14411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "tag",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14337,
											"end": 14411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14337,
											"end": 14411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 14509,
											"end": 14512,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 14420,
											"end": 14513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14538,
											"end": 14540,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14533,
											"end": 14536,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14529,
											"end": 14541,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14522,
											"end": 14541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14522,
											"end": 14541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14719,
											"end": 14723,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14757,
											"end": 14759,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14746,
											"end": 14755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14742,
											"end": 14760,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14734,
											"end": 14760,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14734,
											"end": 14760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14806,
											"end": 14815,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14800,
											"end": 14804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14796,
											"end": 14816,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14792,
											"end": 14793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14781,
											"end": 14790,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14777,
											"end": 14794,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14770,
											"end": 14817,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 14960,
											"end": 14964,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 14834,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "tag",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14826,
											"end": 14965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14826,
											"end": 14965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14553,
											"end": 14972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14978,
											"end": 15169,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 14978,
											"end": 15169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15018,
											"end": 15021,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 15055,
											"end": 15056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 15037,
											"end": 15057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15071,
											"end": 15091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 15089,
											"end": 15090,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15071,
											"end": 15091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 15071,
											"end": 15091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15071,
											"end": 15091,
											"name": "tag",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 15071,
											"end": 15091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15066,
											"end": 15091,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15066,
											"end": 15091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15114,
											"end": 15115,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15112,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15107,
											"end": 15116,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15100,
											"end": 15116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15100,
											"end": 15116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15135,
											"end": 15138,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15132,
											"end": 15133,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15129,
											"end": 15139,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15126,
											"end": 15162,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15126,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 15126,
											"end": 15162,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 15142,
											"end": 15160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15126,
											"end": 15162,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 15126,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14978,
											"end": 15169,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14978,
											"end": 15169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14978,
											"end": 15169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14978,
											"end": 15169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14978,
											"end": 15169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15175,
											"end": 15348,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 15175,
											"end": 15348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15315,
											"end": 15340,
											"name": "PUSH",
											"source": 12,
											"value": "576F756C6420657863656564206D617820737570706C79000000000000000000"
										},
										{
											"begin": 15311,
											"end": 15312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15303,
											"end": 15309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15299,
											"end": 15313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15292,
											"end": 15341,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15175,
											"end": 15348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15175,
											"end": 15348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15354,
											"end": 15720,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 15354,
											"end": 15720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15496,
											"end": 15499,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15517,
											"end": 15584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 15581,
											"end": 15583,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 15576,
											"end": 15579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15517,
											"end": 15584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 15517,
											"end": 15584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15517,
											"end": 15584,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 15517,
											"end": 15584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15510,
											"end": 15584,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15510,
											"end": 15584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15593,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 15682,
											"end": 15685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15593,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 15593,
											"end": 15686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15593,
											"end": 15686,
											"name": "tag",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 15593,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15711,
											"end": 15713,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15706,
											"end": 15709,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15702,
											"end": 15714,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15695,
											"end": 15714,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15695,
											"end": 15714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15354,
											"end": 15720,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15354,
											"end": 15720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15354,
											"end": 15720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15354,
											"end": 15720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15726,
											"end": 16145,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 15726,
											"end": 16145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15892,
											"end": 15896,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15930,
											"end": 15932,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15919,
											"end": 15928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15915,
											"end": 15933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15907,
											"end": 15933,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15907,
											"end": 15933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15979,
											"end": 15988,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15973,
											"end": 15977,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15969,
											"end": 15989,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15965,
											"end": 15966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15954,
											"end": 15963,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15950,
											"end": 15967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15943,
											"end": 15990,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16007,
											"end": 16138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16007,
											"end": 16138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 16007,
											"end": 16138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16007,
											"end": 16138,
											"name": "tag",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 16007,
											"end": 16138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15999,
											"end": 16138,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15999,
											"end": 16138,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15726,
											"end": 16145,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15726,
											"end": 16145,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15726,
											"end": 16145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15726,
											"end": 16145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16151,
											"end": 16324,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 16151,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16291,
											"end": 16316,
											"name": "PUSH",
											"source": 12,
											"value": "43616E6E6F74206C6F636B207A65726F20746F6B656E73000000000000000000"
										},
										{
											"begin": 16287,
											"end": 16288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16279,
											"end": 16285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16275,
											"end": 16289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16268,
											"end": 16317,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16151,
											"end": 16324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16151,
											"end": 16324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16472,
											"end": 16475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16493,
											"end": 16560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 16557,
											"end": 16559,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 16552,
											"end": 16555,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16493,
											"end": 16560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 16493,
											"end": 16560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16493,
											"end": 16560,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 16493,
											"end": 16560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16486,
											"end": 16560,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16486,
											"end": 16560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16569,
											"end": 16662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 16658,
											"end": 16661,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16569,
											"end": 16662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 16569,
											"end": 16662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16569,
											"end": 16662,
											"name": "tag",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 16569,
											"end": 16662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16687,
											"end": 16689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16682,
											"end": 16685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16678,
											"end": 16690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16671,
											"end": 16690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16671,
											"end": 16690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16330,
											"end": 16696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16868,
											"end": 16872,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16906,
											"end": 16908,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16895,
											"end": 16904,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16891,
											"end": 16909,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16883,
											"end": 16909,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16883,
											"end": 16909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16955,
											"end": 16964,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16949,
											"end": 16953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16945,
											"end": 16965,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16941,
											"end": 16942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16930,
											"end": 16939,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16926,
											"end": 16943,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16919,
											"end": 16966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16983,
											"end": 17114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 17109,
											"end": 17113,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16983,
											"end": 17114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 16983,
											"end": 17114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16983,
											"end": 17114,
											"name": "tag",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 16983,
											"end": 17114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16975,
											"end": 17114,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16975,
											"end": 17114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16702,
											"end": 17121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17127,
											"end": 17305,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17127,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17267,
											"end": 17297,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E742062616C616E636520746F206C6F636B00000000"
										},
										{
											"begin": 17263,
											"end": 17264,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17255,
											"end": 17261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17251,
											"end": 17265,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17244,
											"end": 17298,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17127,
											"end": 17305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17127,
											"end": 17305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17311,
											"end": 17677,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 17311,
											"end": 17677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17453,
											"end": 17456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17474,
											"end": 17541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 17538,
											"end": 17540,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 17533,
											"end": 17536,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17474,
											"end": 17541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 17474,
											"end": 17541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17474,
											"end": 17541,
											"name": "tag",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 17474,
											"end": 17541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17467,
											"end": 17541,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17467,
											"end": 17541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17550,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 17639,
											"end": 17642,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17550,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17550,
											"end": 17643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17550,
											"end": 17643,
											"name": "tag",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 17550,
											"end": 17643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17668,
											"end": 17670,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17663,
											"end": 17666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17659,
											"end": 17671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17652,
											"end": 17671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17652,
											"end": 17671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17311,
											"end": 17677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17311,
											"end": 17677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17311,
											"end": 17677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17311,
											"end": 17677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17849,
											"end": 17853,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17887,
											"end": 17889,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17876,
											"end": 17885,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17872,
											"end": 17890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17864,
											"end": 17890,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17864,
											"end": 17890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17936,
											"end": 17945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17930,
											"end": 17934,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17926,
											"end": 17946,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17922,
											"end": 17923,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17911,
											"end": 17920,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17907,
											"end": 17924,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17900,
											"end": 17947,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17964,
											"end": 18095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 18090,
											"end": 18094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17964,
											"end": 18095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 17964,
											"end": 18095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17964,
											"end": 18095,
											"name": "tag",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 17964,
											"end": 18095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17956,
											"end": 18095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17956,
											"end": 18095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17683,
											"end": 18102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18286,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 18108,
											"end": 18286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18248,
											"end": 18278,
											"name": "PUSH",
											"source": 12,
											"value": "43616C6C6572206973206E6F7420612067616D65206D616E6167657200000000"
										},
										{
											"begin": 18244,
											"end": 18245,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18236,
											"end": 18242,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18232,
											"end": 18246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18225,
											"end": 18279,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18292,
											"end": 18658,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 18292,
											"end": 18658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18434,
											"end": 18437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18455,
											"end": 18522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 18519,
											"end": 18521,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 18514,
											"end": 18517,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18455,
											"end": 18522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 18455,
											"end": 18522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18455,
											"end": 18522,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 18455,
											"end": 18522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18448,
											"end": 18522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18448,
											"end": 18522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18531,
											"end": 18624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 18620,
											"end": 18623,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18531,
											"end": 18624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 18531,
											"end": 18624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18531,
											"end": 18624,
											"name": "tag",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 18531,
											"end": 18624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18649,
											"end": 18651,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18644,
											"end": 18647,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18640,
											"end": 18652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18633,
											"end": 18652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18633,
											"end": 18652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18292,
											"end": 18658,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18292,
											"end": 18658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18292,
											"end": 18658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18292,
											"end": 18658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18664,
											"end": 19083,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 18664,
											"end": 19083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18830,
											"end": 18834,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18868,
											"end": 18870,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18857,
											"end": 18866,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18853,
											"end": 18871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18845,
											"end": 18871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18845,
											"end": 18871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18917,
											"end": 18926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18911,
											"end": 18915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18907,
											"end": 18927,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18903,
											"end": 18904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18892,
											"end": 18901,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18888,
											"end": 18905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18881,
											"end": 18928,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18945,
											"end": 19076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 19071,
											"end": 19075,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18945,
											"end": 19076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 18945,
											"end": 19076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18945,
											"end": 19076,
											"name": "tag",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 18945,
											"end": 19076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18937,
											"end": 19076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18937,
											"end": 19076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18664,
											"end": 19083,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18664,
											"end": 19083,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18664,
											"end": 19083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18664,
											"end": 19083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19089,
											"end": 19268,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 19089,
											"end": 19268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19229,
											"end": 19260,
											"name": "PUSH",
											"source": 12,
											"value": "43616E6E6F74206275726E2066726F6D207A65726F2061646472657373000000"
										},
										{
											"begin": 19225,
											"end": 19226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19217,
											"end": 19223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19213,
											"end": 19227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19261,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19089,
											"end": 19268,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19089,
											"end": 19268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19274,
											"end": 19640,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 19274,
											"end": 19640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19416,
											"end": 19419,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19437,
											"end": 19504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 19501,
											"end": 19503,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 19496,
											"end": 19499,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19437,
											"end": 19504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 19437,
											"end": 19504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19437,
											"end": 19504,
											"name": "tag",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 19437,
											"end": 19504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19430,
											"end": 19504,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19430,
											"end": 19504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19513,
											"end": 19606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 19602,
											"end": 19605,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19513,
											"end": 19606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 19513,
											"end": 19606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19513,
											"end": 19606,
											"name": "tag",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 19513,
											"end": 19606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19631,
											"end": 19633,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19626,
											"end": 19629,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19622,
											"end": 19634,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19615,
											"end": 19634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19274,
											"end": 19640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19274,
											"end": 19640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19274,
											"end": 19640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19274,
											"end": 19640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 20065,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 19646,
											"end": 20065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19812,
											"end": 19816,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19850,
											"end": 19852,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19839,
											"end": 19848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19835,
											"end": 19853,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19827,
											"end": 19853,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19827,
											"end": 19853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19899,
											"end": 19908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19893,
											"end": 19897,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19889,
											"end": 19909,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19885,
											"end": 19886,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19874,
											"end": 19883,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19870,
											"end": 19887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19863,
											"end": 19910,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19927,
											"end": 20058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 20053,
											"end": 20057,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19927,
											"end": 20058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 19927,
											"end": 20058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19927,
											"end": 20058,
											"name": "tag",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 19927,
											"end": 20058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19919,
											"end": 20058,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19919,
											"end": 20058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 20065,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 20065,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 20065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 20065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20071,
											"end": 20249,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 20071,
											"end": 20249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20211,
											"end": 20241,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E742062616C616E636520746F206275726E00000000"
										},
										{
											"begin": 20207,
											"end": 20208,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20199,
											"end": 20205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20195,
											"end": 20209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20188,
											"end": 20242,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20071,
											"end": 20249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20071,
											"end": 20249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20255,
											"end": 20621,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 20255,
											"end": 20621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20397,
											"end": 20400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20418,
											"end": 20485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 20482,
											"end": 20484,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 20477,
											"end": 20480,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20418,
											"end": 20485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 20418,
											"end": 20485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20418,
											"end": 20485,
											"name": "tag",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 20418,
											"end": 20485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20411,
											"end": 20485,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20411,
											"end": 20485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20494,
											"end": 20587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 20583,
											"end": 20586,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20494,
											"end": 20587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 20494,
											"end": 20587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20494,
											"end": 20587,
											"name": "tag",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 20494,
											"end": 20587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20612,
											"end": 20614,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20607,
											"end": 20610,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20603,
											"end": 20615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20596,
											"end": 20615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20596,
											"end": 20615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20255,
											"end": 20621,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20255,
											"end": 20621,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20255,
											"end": 20621,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20255,
											"end": 20621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20627,
											"end": 21046,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 20627,
											"end": 21046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20793,
											"end": 20797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20831,
											"end": 20833,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20820,
											"end": 20829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20816,
											"end": 20834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20808,
											"end": 20834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20808,
											"end": 20834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20880,
											"end": 20889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20874,
											"end": 20878,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20870,
											"end": 20890,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20866,
											"end": 20867,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20855,
											"end": 20864,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20851,
											"end": 20868,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20844,
											"end": 20891,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20908,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 21034,
											"end": 21038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20908,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 20908,
											"end": 21039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20908,
											"end": 21039,
											"name": "tag",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 20908,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20900,
											"end": 21039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20900,
											"end": 21039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20627,
											"end": 21046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20627,
											"end": 21046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20627,
											"end": 21046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20627,
											"end": 21046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21221,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 21052,
											"end": 21221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "PUSH",
											"source": 12,
											"value": "47616D65206D656368616E696373206275726E00000000000000000000000000"
										},
										{
											"begin": 21188,
											"end": 21189,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21180,
											"end": 21186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21176,
											"end": 21190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21169,
											"end": 21214,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21227,
											"end": 21593,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 21227,
											"end": 21593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21369,
											"end": 21372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21390,
											"end": 21457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 21454,
											"end": 21456,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 21449,
											"end": 21452,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21390,
											"end": 21457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 21390,
											"end": 21457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21390,
											"end": 21457,
											"name": "tag",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 21390,
											"end": 21457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21383,
											"end": 21457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21383,
											"end": 21457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21466,
											"end": 21559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 21555,
											"end": 21558,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21466,
											"end": 21559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 21466,
											"end": 21559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21466,
											"end": 21559,
											"name": "tag",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 21466,
											"end": 21559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21584,
											"end": 21586,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21579,
											"end": 21582,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21575,
											"end": 21587,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21568,
											"end": 21587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21568,
											"end": 21587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21227,
											"end": 21593,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21227,
											"end": 21593,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21227,
											"end": 21593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21227,
											"end": 21593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21599,
											"end": 22128,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 21599,
											"end": 22128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21793,
											"end": 21797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21831,
											"end": 21833,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21820,
											"end": 21829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21816,
											"end": 21834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21808,
											"end": 21834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21808,
											"end": 21834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21844,
											"end": 21915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 21912,
											"end": 21913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21901,
											"end": 21910,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21897,
											"end": 21914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21888,
											"end": 21894,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21844,
											"end": 21915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 21844,
											"end": 21915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21844,
											"end": 21915,
											"name": "tag",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 21844,
											"end": 21915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21962,
											"end": 21971,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21956,
											"end": 21960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21952,
											"end": 21972,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21947,
											"end": 21949,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21936,
											"end": 21945,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21932,
											"end": 21950,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21925,
											"end": 21973,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 22116,
											"end": 22120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 21990,
											"end": 22121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21990,
											"end": 22121,
											"name": "tag",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 21990,
											"end": 22121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21982,
											"end": 22121,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21982,
											"end": 22121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21599,
											"end": 22128,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21599,
											"end": 22128,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21599,
											"end": 22128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21599,
											"end": 22128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21599,
											"end": 22128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22134,
											"end": 22310,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 22134,
											"end": 22310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22274,
											"end": 22302,
											"name": "PUSH",
											"source": 12,
											"value": "43616E6E6F7420726577617264207A65726F2061646472657373000000000000"
										},
										{
											"begin": 22270,
											"end": 22271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22262,
											"end": 22268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22258,
											"end": 22272,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22251,
											"end": 22303,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22134,
											"end": 22310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22134,
											"end": 22310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22316,
											"end": 22682,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 22316,
											"end": 22682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22458,
											"end": 22461,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22479,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 22543,
											"end": 22545,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 22538,
											"end": 22541,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22479,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 22479,
											"end": 22546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22479,
											"end": 22546,
											"name": "tag",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 22479,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22472,
											"end": 22546,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22472,
											"end": 22546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22555,
											"end": 22648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 22644,
											"end": 22647,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22555,
											"end": 22648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 22555,
											"end": 22648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22555,
											"end": 22648,
											"name": "tag",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 22555,
											"end": 22648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22673,
											"end": 22675,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22668,
											"end": 22671,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22676,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22657,
											"end": 22676,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22657,
											"end": 22676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22316,
											"end": 22682,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22316,
											"end": 22682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22316,
											"end": 22682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22316,
											"end": 22682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22688,
											"end": 23107,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 22688,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22854,
											"end": 22858,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22892,
											"end": 22894,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22881,
											"end": 22890,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22877,
											"end": 22895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22869,
											"end": 22895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22869,
											"end": 22895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22941,
											"end": 22950,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22935,
											"end": 22939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22931,
											"end": 22951,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22927,
											"end": 22928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22916,
											"end": 22925,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22912,
											"end": 22929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22905,
											"end": 22952,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22969,
											"end": 23100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 23095,
											"end": 23099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22969,
											"end": 23100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 22969,
											"end": 23100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22969,
											"end": 23100,
											"name": "tag",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 22969,
											"end": 23100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22961,
											"end": 23100,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22961,
											"end": 23100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22688,
											"end": 23107,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22688,
											"end": 23107,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22688,
											"end": 23107,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22688,
											"end": 23107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23113,
											"end": 23536,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 23113,
											"end": 23536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23254,
											"end": 23258,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23292,
											"end": 23294,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 23281,
											"end": 23290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23277,
											"end": 23295,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23269,
											"end": 23295,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23269,
											"end": 23295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23305,
											"end": 23376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 23373,
											"end": 23374,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23362,
											"end": 23371,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23358,
											"end": 23375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23349,
											"end": 23355,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23305,
											"end": 23376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 23305,
											"end": 23376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23305,
											"end": 23376,
											"name": "tag",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 23305,
											"end": 23376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23423,
											"end": 23432,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23417,
											"end": 23421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23413,
											"end": 23433,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23408,
											"end": 23410,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23397,
											"end": 23406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23393,
											"end": 23411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23386,
											"end": 23434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23451,
											"end": 23529,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 23524,
											"end": 23528,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23515,
											"end": 23521,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23451,
											"end": 23529,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 23451,
											"end": 23529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23451,
											"end": 23529,
											"name": "tag",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 23451,
											"end": 23529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23443,
											"end": 23529,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23443,
											"end": 23529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23113,
											"end": 23536,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 23113,
											"end": 23536,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23113,
											"end": 23536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23113,
											"end": 23536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23113,
											"end": 23536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23113,
											"end": 23536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23542,
											"end": 23708,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 23542,
											"end": 23708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23682,
											"end": 23700,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F20746F6B656E73206C6F636B656400000000000000000000000000000000"
										},
										{
											"begin": 23678,
											"end": 23679,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23670,
											"end": 23676,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23666,
											"end": 23680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23659,
											"end": 23701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23542,
											"end": 23708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23542,
											"end": 23708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23714,
											"end": 24080,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 23714,
											"end": 24080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23856,
											"end": 23859,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23877,
											"end": 23944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 23941,
											"end": 23943,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 23936,
											"end": 23939,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23877,
											"end": 23944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 23877,
											"end": 23944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23877,
											"end": 23944,
											"name": "tag",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 23877,
											"end": 23944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23870,
											"end": 23944,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23870,
											"end": 23944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23953,
											"end": 24046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "714"
										},
										{
											"begin": 24042,
											"end": 24045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23953,
											"end": 24046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 23953,
											"end": 24046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23953,
											"end": 24046,
											"name": "tag",
											"source": 12,
											"value": "714"
										},
										{
											"begin": 23953,
											"end": 24046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24071,
											"end": 24073,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24066,
											"end": 24069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24062,
											"end": 24074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24055,
											"end": 24074,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24055,
											"end": 24074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23714,
											"end": 24080,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23714,
											"end": 24080,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23714,
											"end": 24080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23714,
											"end": 24080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24086,
											"end": 24505,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 24086,
											"end": 24505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24252,
											"end": 24256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24290,
											"end": 24292,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24279,
											"end": 24288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24275,
											"end": 24293,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24267,
											"end": 24293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24267,
											"end": 24293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24339,
											"end": 24348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24333,
											"end": 24337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24329,
											"end": 24349,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24325,
											"end": 24326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24314,
											"end": 24323,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24310,
											"end": 24327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24303,
											"end": 24350,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24367,
											"end": 24498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 24493,
											"end": 24497,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24367,
											"end": 24498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 24367,
											"end": 24498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24367,
											"end": 24498,
											"name": "tag",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 24367,
											"end": 24498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24359,
											"end": 24498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24359,
											"end": 24498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24086,
											"end": 24505,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24086,
											"end": 24505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24086,
											"end": 24505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24086,
											"end": 24505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24511,
											"end": 24680,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 24511,
											"end": 24680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24651,
											"end": 24672,
											"name": "PUSH",
											"source": 12,
											"value": "546F6B656E73207374696C6C206C6F636B656400000000000000000000000000"
										},
										{
											"begin": 24647,
											"end": 24648,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24639,
											"end": 24645,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24635,
											"end": 24649,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24628,
											"end": 24673,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24511,
											"end": 24680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24511,
											"end": 24680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24828,
											"end": 24831,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24849,
											"end": 24916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 24913,
											"end": 24915,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 24908,
											"end": 24911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24849,
											"end": 24916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 24849,
											"end": 24916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24849,
											"end": 24916,
											"name": "tag",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 24849,
											"end": 24916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24842,
											"end": 24916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24842,
											"end": 24916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24925,
											"end": 25018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "720"
										},
										{
											"begin": 25014,
											"end": 25017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24925,
											"end": 25018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 24925,
											"end": 25018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24925,
											"end": 25018,
											"name": "tag",
											"source": 12,
											"value": "720"
										},
										{
											"begin": 24925,
											"end": 25018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25043,
											"end": 25045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25038,
											"end": 25041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25034,
											"end": 25046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25027,
											"end": 25046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25027,
											"end": 25046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24686,
											"end": 25052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25224,
											"end": 25228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25262,
											"end": 25264,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25251,
											"end": 25260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25247,
											"end": 25265,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25239,
											"end": 25265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25239,
											"end": 25265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25311,
											"end": 25320,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25305,
											"end": 25309,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25301,
											"end": 25321,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25297,
											"end": 25298,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25286,
											"end": 25295,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25282,
											"end": 25299,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25275,
											"end": 25322,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25339,
											"end": 25470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 25465,
											"end": 25469,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25339,
											"end": 25470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 25339,
											"end": 25470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25339,
											"end": 25470,
											"name": "tag",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 25339,
											"end": 25470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25331,
											"end": 25470,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25331,
											"end": 25470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25058,
											"end": 25477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25483,
											"end": 25649,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 25483,
											"end": 25649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25623,
											"end": 25641,
											"name": "PUSH",
											"source": 12,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 25619,
											"end": 25620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25611,
											"end": 25617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25607,
											"end": 25621,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25600,
											"end": 25642,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25483,
											"end": 25649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25483,
											"end": 25649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25655,
											"end": 26021,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 25655,
											"end": 26021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25797,
											"end": 25800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25818,
											"end": 25885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "725"
										},
										{
											"begin": 25882,
											"end": 25884,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 25877,
											"end": 25880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25818,
											"end": 25885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 25818,
											"end": 25885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25818,
											"end": 25885,
											"name": "tag",
											"source": 12,
											"value": "725"
										},
										{
											"begin": 25818,
											"end": 25885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25811,
											"end": 25885,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25811,
											"end": 25885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25894,
											"end": 25987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 25983,
											"end": 25986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25894,
											"end": 25987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 25894,
											"end": 25987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25894,
											"end": 25987,
											"name": "tag",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 25894,
											"end": 25987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26012,
											"end": 26014,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26007,
											"end": 26010,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26003,
											"end": 26015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25996,
											"end": 26015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25996,
											"end": 26015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25655,
											"end": 26021,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25655,
											"end": 26021,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25655,
											"end": 26021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25655,
											"end": 26021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26027,
											"end": 26446,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 26027,
											"end": 26446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26193,
											"end": 26197,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26231,
											"end": 26233,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26220,
											"end": 26229,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26216,
											"end": 26234,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26208,
											"end": 26234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26208,
											"end": 26234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26280,
											"end": 26289,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26274,
											"end": 26278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26270,
											"end": 26290,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 26266,
											"end": 26267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26255,
											"end": 26264,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26251,
											"end": 26268,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26244,
											"end": 26291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26308,
											"end": 26439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 26434,
											"end": 26438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26308,
											"end": 26439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 26308,
											"end": 26439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26308,
											"end": 26439,
											"name": "tag",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 26308,
											"end": 26439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26300,
											"end": 26439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26300,
											"end": 26439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26027,
											"end": 26446,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26027,
											"end": 26446,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26027,
											"end": 26446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26027,
											"end": 26446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26452,
											"end": 26570,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 26452,
											"end": 26570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26539,
											"end": 26563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "730"
										},
										{
											"begin": 26557,
											"end": 26562,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26539,
											"end": 26563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 26539,
											"end": 26563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26539,
											"end": 26563,
											"name": "tag",
											"source": 12,
											"value": "730"
										},
										{
											"begin": 26539,
											"end": 26563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26534,
											"end": 26537,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26527,
											"end": 26564,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26452,
											"end": 26570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26452,
											"end": 26570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26452,
											"end": 26570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26576,
											"end": 26798,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 26576,
											"end": 26798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26669,
											"end": 26673,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26707,
											"end": 26709,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26696,
											"end": 26705,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26692,
											"end": 26710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26684,
											"end": 26710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26684,
											"end": 26710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26720,
											"end": 26791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "732"
										},
										{
											"begin": 26788,
											"end": 26789,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26777,
											"end": 26786,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26773,
											"end": 26790,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26764,
											"end": 26770,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26720,
											"end": 26791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 26720,
											"end": 26791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26720,
											"end": 26791,
											"name": "tag",
											"source": 12,
											"value": "732"
										},
										{
											"begin": 26720,
											"end": 26791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26576,
											"end": 26798,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26576,
											"end": 26798,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26576,
											"end": 26798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26576,
											"end": 26798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26576,
											"end": 26798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26804,
											"end": 26985,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 26804,
											"end": 26985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26944,
											"end": 26977,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 26940,
											"end": 26941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26932,
											"end": 26938,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26928,
											"end": 26942,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26921,
											"end": 26978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26804,
											"end": 26985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26804,
											"end": 26985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26991,
											"end": 27357,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 26991,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27133,
											"end": 27136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27154,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "735"
										},
										{
											"begin": 27218,
											"end": 27220,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 27213,
											"end": 27216,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27154,
											"end": 27221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 27154,
											"end": 27221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27154,
											"end": 27221,
											"name": "tag",
											"source": 12,
											"value": "735"
										},
										{
											"begin": 27154,
											"end": 27221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27147,
											"end": 27221,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27147,
											"end": 27221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27230,
											"end": 27323,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "736"
										},
										{
											"begin": 27319,
											"end": 27322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27230,
											"end": 27323,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 27230,
											"end": 27323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27230,
											"end": 27323,
											"name": "tag",
											"source": 12,
											"value": "736"
										},
										{
											"begin": 27230,
											"end": 27323,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27348,
											"end": 27350,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27343,
											"end": 27346,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27339,
											"end": 27351,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27332,
											"end": 27351,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27332,
											"end": 27351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26991,
											"end": 27357,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26991,
											"end": 27357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26991,
											"end": 27357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26991,
											"end": 27357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27363,
											"end": 27782,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 27363,
											"end": 27782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27529,
											"end": 27533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27567,
											"end": 27569,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27556,
											"end": 27565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27552,
											"end": 27570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27544,
											"end": 27570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27544,
											"end": 27570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27616,
											"end": 27625,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27610,
											"end": 27614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27606,
											"end": 27626,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 27602,
											"end": 27603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27591,
											"end": 27600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27587,
											"end": 27604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27580,
											"end": 27627,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27644,
											"end": 27775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 27770,
											"end": 27774,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27644,
											"end": 27775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 27644,
											"end": 27775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27644,
											"end": 27775,
											"name": "tag",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 27644,
											"end": 27775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27636,
											"end": 27775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27636,
											"end": 27775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27363,
											"end": 27782,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27363,
											"end": 27782,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27363,
											"end": 27782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27363,
											"end": 27782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27788,
											"end": 28230,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 27788,
											"end": 28230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27937,
											"end": 27941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27975,
											"end": 27977,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 27964,
											"end": 27973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27960,
											"end": 27978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27952,
											"end": 27978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27952,
											"end": 27978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27988,
											"end": 28059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "740"
										},
										{
											"begin": 28056,
											"end": 28057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28045,
											"end": 28054,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28041,
											"end": 28058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28032,
											"end": 28038,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 27988,
											"end": 28059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 27988,
											"end": 28059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27988,
											"end": 28059,
											"name": "tag",
											"source": 12,
											"value": "740"
										},
										{
											"begin": 27988,
											"end": 28059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28069,
											"end": 28141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 28137,
											"end": 28139,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28126,
											"end": 28135,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28122,
											"end": 28140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28113,
											"end": 28119,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28069,
											"end": 28141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 28069,
											"end": 28141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28069,
											"end": 28141,
											"name": "tag",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 28069,
											"end": 28141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28151,
											"end": 28223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "742"
										},
										{
											"begin": 28219,
											"end": 28221,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28208,
											"end": 28217,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28204,
											"end": 28222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28195,
											"end": 28201,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28151,
											"end": 28223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 28151,
											"end": 28223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28151,
											"end": 28223,
											"name": "tag",
											"source": 12,
											"value": "742"
										},
										{
											"begin": 28151,
											"end": 28223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27788,
											"end": 28230,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 27788,
											"end": 28230,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 27788,
											"end": 28230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27788,
											"end": 28230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27788,
											"end": 28230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27788,
											"end": 28230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27788,
											"end": 28230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28568,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 28236,
											"end": 28568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28357,
											"end": 28361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28395,
											"end": 28397,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28384,
											"end": 28393,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28380,
											"end": 28398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28372,
											"end": 28398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28372,
											"end": 28398,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28408,
											"end": 28479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "744"
										},
										{
											"begin": 28476,
											"end": 28477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28465,
											"end": 28474,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28461,
											"end": 28478,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28452,
											"end": 28458,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28408,
											"end": 28479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 28408,
											"end": 28479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28408,
											"end": 28479,
											"name": "tag",
											"source": 12,
											"value": "744"
										},
										{
											"begin": 28408,
											"end": 28479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28489,
											"end": 28561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "745"
										},
										{
											"begin": 28557,
											"end": 28559,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28546,
											"end": 28555,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28542,
											"end": 28560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28533,
											"end": 28539,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28489,
											"end": 28561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 28489,
											"end": 28561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28489,
											"end": 28561,
											"name": "tag",
											"source": 12,
											"value": "745"
										},
										{
											"begin": 28489,
											"end": 28561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28568,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28568,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28574,
											"end": 28744,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 28574,
											"end": 28744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28714,
											"end": 28736,
											"name": "PUSH",
											"source": 12,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 28710,
											"end": 28711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28702,
											"end": 28708,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28698,
											"end": 28712,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28691,
											"end": 28737,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28574,
											"end": 28744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28574,
											"end": 28744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28750,
											"end": 29116,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 28750,
											"end": 29116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28892,
											"end": 28895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28913,
											"end": 28980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 28977,
											"end": 28979,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 28972,
											"end": 28975,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28913,
											"end": 28980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 28913,
											"end": 28980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28913,
											"end": 28980,
											"name": "tag",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 28913,
											"end": 28980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28906,
											"end": 28980,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28906,
											"end": 28980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28989,
											"end": 29082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "749"
										},
										{
											"begin": 29078,
											"end": 29081,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28989,
											"end": 29082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 28989,
											"end": 29082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28989,
											"end": 29082,
											"name": "tag",
											"source": 12,
											"value": "749"
										},
										{
											"begin": 28989,
											"end": 29082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29107,
											"end": 29109,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29102,
											"end": 29105,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29098,
											"end": 29110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29091,
											"end": 29110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29091,
											"end": 29110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28750,
											"end": 29116,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28750,
											"end": 29116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28750,
											"end": 29116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28750,
											"end": 29116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29122,
											"end": 29541,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 29122,
											"end": 29541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29288,
											"end": 29292,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29326,
											"end": 29328,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29315,
											"end": 29324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29311,
											"end": 29329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29303,
											"end": 29329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29303,
											"end": 29329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29375,
											"end": 29384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29369,
											"end": 29373,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29365,
											"end": 29385,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29361,
											"end": 29362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29350,
											"end": 29359,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29346,
											"end": 29363,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29339,
											"end": 29386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29403,
											"end": 29534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "751"
										},
										{
											"begin": 29529,
											"end": 29533,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29403,
											"end": 29534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 29403,
											"end": 29534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29403,
											"end": 29534,
											"name": "tag",
											"source": 12,
											"value": "751"
										},
										{
											"begin": 29403,
											"end": 29534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29395,
											"end": 29534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29395,
											"end": 29534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29122,
											"end": 29541,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29122,
											"end": 29541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29122,
											"end": 29541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29122,
											"end": 29541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SignSmartContract/GameToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"GAME_MANAGER_ROLE()": "ff6fcdbd",
							"LOCK_DURATION()": "485d3834",
							"MAX_SUPPLY()": "32cb6b0c",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"getAvailableBalance(address)": "6c24a76f",
							"getLockTimestamp(address)": "3c26835b",
							"getLockedTokens(address)": "6b2d95d4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"lockTokens(uint256)": "6e27d889",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"payReward(address,uint256,string)": "da518829",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlockTokens()": "f968f493",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAME_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAvailableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLockedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"payReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the Signs game token with role-based minting and burning\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"Burn tokens from an address\",\"params\":{\"amount\":\"Amount of tokens to burn\",\"from\":\"Address to burn tokens from\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAvailableBalance(address)\":{\"details\":\"Get available (unlocked) balance\",\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"Available balance\"}},\"getLockTimestamp(address)\":{\"details\":\"Get the timestamp when tokens were locked\",\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"Timestamp of lock\"}},\"getLockedTokens(address)\":{\"details\":\"Get the amount of locked tokens for an address\",\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"Amount of locked tokens\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"lockTokens(uint256)\":{\"details\":\"Lock tokens for staking or other game mechanics\",\"params\":{\"amount\":\"Amount of tokens to lock\"}},\"mint(address,uint256)\":{\"details\":\"Mint new tokens to an address\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"to\":\"Address to mint tokens to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"payReward(address,uint256,string)\":{\"details\":\"Pay rewards to players\",\"params\":{\"amount\":\"Amount of tokens to reward\",\"reason\":\"Reason for the reward\",\"to\":\"Address to receive rewards\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"unlockTokens()\":{\"details\":\"Unlock previously locked tokens after lock duration\"}},\"title\":\"GameToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SignSmartContract/GameToken.sol\":\"GameToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"SignSmartContract/GameToken.sol\":{\"keccak256\":\"0x64bd4dffed0a9520553d47db556eb510543dee77d1bbcbdee8582308ea6a54e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0309019db9981ed4960c27fcaca17d8fb324b73c4550b424df33eeb8229d4d\",\"dweb:/ipfs/QmcnqPxeXEbbsPBUocvE4N5pi117vFioFCahAuME3tZ8ua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 711,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 717,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 719,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 721,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 723,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 533,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 26,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 634,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_status",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1430,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_lockedTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1434,
								"contract": "SignSmartContract/GameToken.sol:GameToken",
								"label": "_lockTimestamp",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "SignSmartContract/GameToken.sol:GameToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "SignSmartContract/GameToken.sol:GameToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1337
						],
						"ERC165": [
							1361
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1338,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1337,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1362,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1361,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1361,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1361,
								1373,
								378,
								1337
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1360
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1360,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1319,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1319,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1337
						],
						"Pausable": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1338,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 520,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "632:7:3"
									},
									"id": 521,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 519,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								1337
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 526,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 531,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 533,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 532,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 542,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 623,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 548,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 550,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 553,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 556,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 558,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 564,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 533,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 563,
												"id": 565,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 623,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 623,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 584,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 623,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 601,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 600,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 593,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 623,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 612,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 616,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 609,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 558,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 623,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 624,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								526,
								531
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 626,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 688,
							"linearizedBaseContracts": [
								688
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 629,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 627,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 628,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 632,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 630,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 634,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 637,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 638,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 642,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 688,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 645,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 648,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 649,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 653,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 657,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 658,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 663,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 664,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 688,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 671,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 672,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 688,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 682,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 683,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 681,
												"id": 685,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 688,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 689,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1337
						],
						"ERC20": [
							1203
						],
						"IERC20": [
							1281
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1307
						]
					},
					"id": 1204,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1282,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 691,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1281,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1308,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 693,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1307,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 696,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1338,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 695,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1337,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 698,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 516,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 697,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 700,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "1133:7:5"
									},
									"id": 701,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 702,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "1142:6:5"
									},
									"id": 703,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 704,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1307,
										"src": "1150:14:5"
									},
									"id": 705,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 706,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:5"
									},
									"id": 707,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1203,
							"linearizedBaseContracts": [
								1203,
								420,
								1307,
								1281,
								1337
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 711,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 710,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 708,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 709,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 717,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 716,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 712,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 715,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 713,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 714,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 719,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 718,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 721,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 720,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 723,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 722,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "1657:57:5",
										"statements": [
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 731,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "1667:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 732,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "1675:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:5"
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 735,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "1690:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 736,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1700:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:5"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 740,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1613:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 725,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1634:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:5"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:5"
									},
									"scope": 1203,
									"src": "1601:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1294
									],
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "1839:29:5",
										"statements": [
											{
												"expression": {
													"id": 746,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "1856:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 745,
												"id": 747,
												"nodeType": "Return",
												"src": "1849:12:5"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:5"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1824:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:5"
									},
									"scope": 1203,
									"src": "1779:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1300
									],
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "2043:31:5",
										"statements": [
											{
												"expression": {
													"id": 755,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 723,
													"src": "2060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 754,
												"id": 756,
												"nodeType": "Return",
												"src": "2053:14:5"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:5"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "2028:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 752,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:5"
									},
									"scope": 1203,
									"src": "1981:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1306
									],
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "2763:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 763,
												"id": 765,
												"nodeType": "Return",
												"src": "2773:9:5"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:5"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2756:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 761,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:5"
									},
									"scope": 1203,
									"src": "2707:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1230
									],
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "2910:36:5",
										"statements": [
											{
												"expression": {
													"id": 773,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 719,
													"src": "2927:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 774,
												"nodeType": "Return",
												"src": "2920:19:5"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:5"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2901:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:5"
									},
									"scope": 1203,
									"src": "2849:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1238
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "3078:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 784,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "3095:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 786,
													"indexExpression": {
														"id": 785,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "3105:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 783,
												"id": 787,
												"nodeType": "Return",
												"src": "3088:25:5"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:5"
									},
									"scope": 1203,
									"src": "3004:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "3390:103:5",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "3400:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 801,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "3416:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "3448:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "3455:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "3459:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 804,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3438:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 798,
												"id": 811,
												"nodeType": "Return",
												"src": "3475:11:5"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3333:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3345:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:5"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3384:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:5"
									},
									"scope": 1203,
									"src": "3315:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1258
									],
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "3640:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 823,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "3657:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 825,
														"indexExpression": {
															"id": 824,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "3669:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 827,
													"indexExpression": {
														"id": 826,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "3676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 822,
												"id": 828,
												"nodeType": "Return",
												"src": "3650:34:5"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3570:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3585:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:5"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3631:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:5"
									},
									"scope": 1203,
									"src": "3551:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1268
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "4077:107:5",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "4087:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 840,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 842,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4103:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4134:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "4141:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "4150:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1094,
															1154
														],
														"referencedDeclaration": 1094,
														"src": "4125:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 839,
												"id": 852,
												"nodeType": "Return",
												"src": "4166:11:5"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4015:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4032:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:5"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4071:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:5"
									},
									"scope": 1203,
									"src": "3998:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1280
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "4869:151:5",
										"statements": [
											{
												"assignments": [
													867
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "4879:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 866,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 868,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "4935:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "4941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "4950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "4919:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "4976:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "4982:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "4986:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "4966:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 865,
												"id": 884,
												"nodeType": "Return",
												"src": "5002:11:5"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4798:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4812:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4824:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:5"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4863:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:5"
									},
									"scope": 1203,
									"src": "4776:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "5462:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "5476:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 897,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "5472:86:5",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "5496:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 903,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 902,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5517:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 908,
															"nodeType": "RevertStatement",
															"src": "5510:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 911,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "5571:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 912,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "5567:86:5",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "5589:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 918,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 917,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5610:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 923,
															"nodeType": "RevertStatement",
															"src": "5603:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 927,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5670:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "5676:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5680:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 926,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:5"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5412:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5426:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5438:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:5"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:5"
									},
									"scope": 1203,
									"src": "5393:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "6083:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "6097:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 944,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 980,
													"nodeType": "Block",
													"src": "6271:362:5",
													"statements": [
														{
															"assignments": [
																955
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 955,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 980,
																	"src": "6285:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 954,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 959,
															"initialValue": {
																"baseExpression": {
																	"id": 956,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "6307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 958,
																"indexExpression": {
																	"id": 957,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "6317:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 960,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "6340:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 961,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "6354:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 970,
															"nodeType": "IfStatement",
															"src": "6336:115:5",
															"trueBody": {
																"id": 969,
																"nodeType": "Block",
																"src": "6361:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 964,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "6411:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 965,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "6417:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 966,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 940,
																					"src": "6430:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 963,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6386:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 968,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:5"
																	}
																]
															}
														},
														{
															"id": 979,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 971,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "6571:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 973,
																			"indexExpression": {
																				"id": 972,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "6581:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 974,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "6589:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 975,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "6603:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 978,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:5"
																}
															]
														}
													]
												},
												"id": 981,
												"nodeType": "IfStatement",
												"src": "6093:540:5",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "6117:148:5",
													"statements": [
														{
															"expression": {
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 949,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "6233:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 950,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "6249:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 952,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 982,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "6647:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 983,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "6862:206:5",
													"statements": [
														{
															"id": 1000,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 994,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "7021:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 996,
																			"indexExpression": {
																				"id": 995,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "7031:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 997,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "7038:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 999,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:5"
																}
															]
														}
													]
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "6643:425:5",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "6665:191:5",
													"statements": [
														{
															"id": 992,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 988,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "6810:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 989,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "6826:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 991,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1004,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "7092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "7098:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "7102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "7083:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "EmitStatement",
												"src": "7078:30:5"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "6025:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "6039:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "6051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:5"
									},
									"scope": 1203,
									"src": "6008:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "7514:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1018,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1019,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "7524:91:5",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "7551:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1025,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1024,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7572:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1030,
															"nodeType": "RevertStatement",
															"src": "7565:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "7644:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "7653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "7624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:5"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:5"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:5"
									},
									"scope": 1203,
									"src": "7458:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "8040:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1051,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "8054:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1052,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "8050:89:5",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "8077:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1058,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1057,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8098:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1063,
															"nodeType": "RevertStatement",
															"src": "8091:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1067,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "8156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1068,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "8177:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "8148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:5"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "7999:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "8016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:5"
									},
									"scope": 1203,
									"src": "7984:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "8800:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1087,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "8819:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "8826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "8835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1086,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1094,
															1154
														],
														"referencedDeclaration": 1154,
														"src": "8810:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:5"
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "8744:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "8759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "8776:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:5"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:5"
									},
									"scope": 1203,
									"src": "8726:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "9799:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "9813:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "9809:89:5",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "9834:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1112,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9855:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1118,
															"nodeType": "RevertStatement",
															"src": "9848:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1121,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "9911:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1122,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "9907:90:5",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "9934:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1128,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1127,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9955:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1133,
															"nodeType": "RevertStatement",
															"src": "9948:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1136,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "10006:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1139,
															"indexExpression": {
																"id": 1137,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "10018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1140,
														"indexExpression": {
															"id": 1138,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "10025:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1141,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "10036:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:5"
											},
											{
												"condition": {
													"id": 1144,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1103,
													"src": "10055:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1152,
												"nodeType": "IfStatement",
												"src": "10051:76:5",
												"trueBody": {
													"id": 1151,
													"nodeType": "Block",
													"src": "10066:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1146,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "10094:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1147,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "10101:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1148,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "10110:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1145,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "10085:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1150,
															"nodeType": "EmitStatement",
															"src": "10080:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9719:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:5"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:5"
									},
									"scope": 1203,
									"src": "9701:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "10504:388:5",
										"statements": [
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "10514:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [
														{
															"id": 1167,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "10551:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1168,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "10558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1166,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "10541:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1171,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "10580:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1173,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1172,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1200,
												"nodeType": "IfStatement",
												"src": "10576:310:5",
												"trueBody": {
													"id": 1199,
													"nodeType": "Block",
													"src": "10619:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1178,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "10637:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1179,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "10656:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1188,
															"nodeType": "IfStatement",
															"src": "10633:130:5",
															"trueBody": {
																"id": 1187,
																"nodeType": "Block",
																"src": "10663:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1182,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1159,
																					"src": "10715:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1183,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "10724:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1184,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "10742:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1181,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10688:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1186,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:5"
																	}
																]
															}
														},
														{
															"id": 1198,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1190,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "10813:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1191,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "10820:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1192,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "10829:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1193,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "10848:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1189,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1094,
																				1154
																			],
																			"referencedDeclaration": 1154,
																			"src": "10804:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1197,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "10440:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "10455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "10472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:5"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:5"
									},
									"scope": 1203,
									"src": "10415:477:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1204,
							"src": "1106:9788:5",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "105:10790:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1281
						]
					},
					"id": 1282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1205,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1206,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1281,
							"linearizedBaseContracts": [
								1281
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1215,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1224,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 1281,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 1281,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 1281,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 1281,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 1281,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 1281,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1282,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1281
						],
						"IERC20Metadata": [
							1307
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1308,
							"sourceUnit": 1282,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1284,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1281,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1287,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "306:6:7"
									},
									"id": 1288,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1286,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1307,
							"linearizedBaseContracts": [
								1307,
								1281
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 1307,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1307,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1303,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 1307,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1308,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1337
						]
					},
					"id": 1338,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1310,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1337,
							"linearizedBaseContracts": [
								1337
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1315,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1317,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1337,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1324,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1323,
												"id": 1326,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1337,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1332,
												"id": 1334,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1337,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1338,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1361
						],
						"IERC165": [
							1373
						]
					},
					"id": 1362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1339,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1362,
							"sourceUnit": 1374,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1340,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1373,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1343,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1373,
										"src": "688:7:9"
									},
									"id": 1344,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1342,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1361,
							"linearizedBaseContracts": [
								1361,
								1373
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1372
									],
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1352,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1354,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1373_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1373_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1353,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1373",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1351,
												"id": 1358,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1361,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1362,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1373
						]
					},
					"id": 1374,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1364,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1373,
							"linearizedBaseContracts": [
								1373
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1373,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1374,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"SignSmartContract/GameToken.sol": {
				"ast": {
					"absolutePath": "SignSmartContract/GameToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1337
						],
						"ERC165": [
							1361
						],
						"ERC20": [
							1203
						],
						"GameToken": [
							1844
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1281
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1307
						],
						"Pausable": [
							623
						],
						"ReentrancyGuard": [
							688
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1375,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1376,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 1204,
							"src": "61:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 624,
							"src": "118:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 296,
							"src": "175:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 689,
							"src": "235:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1381,
										"name": "ERC20",
										"nameLocations": [
											"438:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1203,
										"src": "438:5:11"
									},
									"id": 1382,
									"nodeType": "InheritanceSpecifier",
									"src": "438:5:11"
								},
								{
									"baseName": {
										"id": 1383,
										"name": "Pausable",
										"nameLocations": [
											"445:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "445:8:11"
									},
									"id": 1384,
									"nodeType": "InheritanceSpecifier",
									"src": "445:8:11"
								},
								{
									"baseName": {
										"id": 1385,
										"name": "AccessControl",
										"nameLocations": [
											"455:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "455:13:11"
									},
									"id": 1386,
									"nodeType": "InheritanceSpecifier",
									"src": "455:13:11"
								},
								{
									"baseName": {
										"id": 1387,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"470:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "470:15:11"
									},
									"id": 1388,
									"nodeType": "InheritanceSpecifier",
									"src": "470:15:11"
								}
							],
							"canonicalName": "GameToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1380,
								"nodeType": "StructuredDocumentation",
								"src": "301:113:11",
								"text": " @title GameToken\n @dev Implementation of the Signs game token with role-based minting and burning"
							},
							"fullyImplemented": true,
							"id": 1844,
							"linearizedBaseContracts": [
								1844,
								688,
								295,
								1361,
								1373,
								378,
								623,
								1203,
								420,
								1307,
								1281,
								1337
							],
							"name": "GameToken",
							"nameLocation": "425:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1393,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "517:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "493:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1389,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1391,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "541:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1390,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "531:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "531:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ff6fcdbd",
									"id": 1398,
									"mutability": "constant",
									"name": "GAME_MANAGER_ROLE",
									"nameLocation": "586:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "562:74:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1394,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "47414d455f4d414e414745525f524f4c45",
												"id": 1396,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "616:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b1",
													"typeString": "literal_string \"GAME_MANAGER_ROLE\""
												},
												"value": "GAME_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ef17b1f3c5a412f9c8e887e3abd186802afec7dc657fd3b7002bf87b128dd0b1",
													"typeString": "literal_string \"GAME_MANAGER_ROLE\""
												}
											],
											"id": 1395,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "606:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "606:30:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "21a82678daa5235b7b5de669fdf9599453d3d885cee0826e92636d747419689c",
									"id": 1406,
									"name": "RewardPaid",
									"nameLocation": "670:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "697:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "681:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "709:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "701:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"indexed": false,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "724:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "717:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "717:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:51:11"
									},
									"src": "664:68:11"
								},
								{
									"anonymous": false,
									"eventSelector": "fad31924d655455395c87544c8aa1ffdb5a7505a22a3c2e03f28003b6556a75f",
									"id": 1414,
									"name": "TokensBurned",
									"nameLocation": "744:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "773:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "757:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "787:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "779:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"indexed": false,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "802:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "795:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "795:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:53:11"
									},
									"src": "738:72:11"
								},
								{
									"anonymous": false,
									"eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
									"id": 1420,
									"name": "TokensLocked",
									"nameLocation": "822:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "851:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "835:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "866:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "858:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:39:11"
									},
									"src": "816:58:11"
								},
								{
									"anonymous": false,
									"eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
									"id": 1426,
									"name": "TokensUnlocked",
									"nameLocation": "886:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "917:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "901:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "932:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "924:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:39:11"
									},
									"src": "880:60:11"
								},
								{
									"constant": false,
									"id": 1430,
									"mutability": "mutable",
									"name": "_lockedTokens",
									"nameLocation": "1026:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "990:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1429,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1427,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "998:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "990:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1428,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1009:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1434,
									"mutability": "mutable",
									"name": "_lockTimestamp",
									"nameLocation": "1082:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "1046:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1433,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1431,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1054:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1046:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1432,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1065:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "485d3834",
									"id": 1437,
									"mutability": "constant",
									"name": "LOCK_DURATION",
									"nameLocation": "1151:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "1127:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1127:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3234",
										"id": 1436,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1167:8:11",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "24"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 1444,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "1206:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "1182:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1438,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1182:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 1443,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030",
											"id": 1439,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1219:10:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1442,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1440,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1232:2:11",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1441,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1236:2:11",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1232:6:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1219:19:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "1319:61:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1452,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1341:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1453,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1361:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1365:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1361:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1451,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1330:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "1330:42:11"
											}
										]
									},
									"id": 1458,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5369676e732047616d6520546f6b656e",
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1291:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_dd4ddc5eac1eaed57ed7271d2f68230a440a9ff5289fb020a2ef39be9230a21b",
														"typeString": "literal_string \"Signs Game Token\""
													},
													"value": "Signs Game Token"
												},
												{
													"hexValue": "5349474e",
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1311:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_266784b36e7612a8cfd865a59019ffaad8919ba63023af3aa25c1ef1ddf353ef",
														"typeString": "literal_string \"SIGN\""
													},
													"value": "SIGN"
												}
											],
											"id": 1449,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1446,
												"name": "ERC20",
												"nameLocations": [
													"1285:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1203,
												"src": "1285:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1285:33:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:2:11"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1319:0:11"
									},
									"scope": 1844,
									"src": "1271:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "1437:110:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1462,
																	"name": "GAME_MANAGER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "1464:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1463,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1483:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1487:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1483:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1461,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1456:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1456:38:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420612067616d65206d616e61676572",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1496:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081",
																"typeString": "literal_string \"Caller is not a game manager\""
															},
															"value": "Caller is not a game manager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7522adfbe254df1cd19d5688b163170664f71edea243915bfffb1fb1ea513081",
																"typeString": "literal_string \"Caller is not a game manager\""
															}
														],
														"id": 1460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1448:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:79:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "1448:79:11"
											},
											{
												"id": 1469,
												"nodeType": "PlaceholderStatement",
												"src": "1538:1:11"
											}
										]
									},
									"id": 1471,
									"name": "onlyGameManager",
									"nameLocation": "1419:15:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1434:2:11"
									},
									"src": "1410:137:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "1581:98:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1475,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "1608:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1476,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1621:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1625:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1621:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1474,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1600:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1600:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742061206d696e746572",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1634:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
																"typeString": "literal_string \"Caller is not a minter\""
															},
															"value": "Caller is not a minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
																"typeString": "literal_string \"Caller is not a minter\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1592:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1592:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "1592:67:11"
											},
											{
												"id": 1482,
												"nodeType": "PlaceholderStatement",
												"src": "1670:1:11"
											}
										]
									},
									"id": 1484,
									"name": "onlyMinter",
									"nameLocation": "1568:10:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1578:2:11"
									},
									"src": "1559:120:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "1990:186:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1497,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "2009:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2023:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2015:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1498,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2015:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2015:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2009:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206d696e7420746f207a65726f2061646472657373",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2027:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9",
																"typeString": "literal_string \"Cannot mint to zero address\""
															},
															"value": "Cannot mint to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9",
																"typeString": "literal_string \"Cannot mint to zero address\""
															}
														],
														"id": 1496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2001:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2001:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "2001:56:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1507,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "2076:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2076:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1509,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "2092:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2076:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1511,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "2102:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2076:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "576f756c6420657863656564206d617820737570706c79",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2114:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3",
																"typeString": "literal_string \"Would exceed max supply\""
															},
															"value": "Would exceed max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3",
																"typeString": "literal_string \"Would exceed max supply\""
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2068:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2068:72:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "2068:72:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "2157:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1518,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "2161:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1516,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "2151:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "2151:17:11"
											}
										]
									},
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "1726:146:11",
										"text": " @dev Mint new tokens to an address\n @param to Address to mint tokens to\n @param amount Amount of tokens to mint"
									},
									"functionSelector": "40c10f19",
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1492,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1491,
												"name": "onlyMinter",
												"nameLocations": [
													"1949:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1484,
												"src": "1949:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1949:10:11"
										},
										{
											"id": 1494,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1493,
												"name": "whenNotPaused",
												"nameLocations": [
													"1970:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "1970:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1970:13:11"
										}
									],
									"name": "mint",
									"nameLocation": "1887:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1900:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1892:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1892:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1912:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1904:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1891:28:11"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1990:0:11"
									},
									"scope": 1844,
									"src": "1878:298:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "2461:251:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1535,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "2480:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2496:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2488:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1536,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2488:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2488:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2480:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206275726e2066726f6d207a65726f2061646472657373",
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2500:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84",
																"typeString": "literal_string \"Cannot burn from zero address\""
															},
															"value": "Cannot burn from zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84",
																"typeString": "literal_string \"Cannot burn from zero address\""
															}
														],
														"id": 1534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2472:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "2472:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1546,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "2561:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1545,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "2551:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2551:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1548,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "2570:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2551:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f206275726e",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2578:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															},
															"value": "Insufficient balance to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															}
														],
														"id": 1544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2543:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2543:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "2543:66:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1554,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "2626:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1555,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "2632:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1553,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "2620:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2620:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "2620:19:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1559,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "2668:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1560,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "2674:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "47616d65206d656368616e696373206275726e",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2682:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27",
																"typeString": "literal_string \"Game mechanics burn\""
															},
															"value": "Game mechanics burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_e249fc99749bef00a658a973b55544508bec72c7284edc81ddd5937c85c74d27",
																"typeString": "literal_string \"Game mechanics burn\""
															}
														],
														"id": 1558,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "2655:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1563,
												"nodeType": "EmitStatement",
												"src": "2650:54:11"
											}
										]
									},
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "2188:148:11",
										"text": " @dev Burn tokens from an address\n @param from Address to burn tokens from\n @param amount Amount of tokens to burn"
									},
									"functionSelector": "9dc29fac",
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1530,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1529,
												"name": "onlyGameManager",
												"nameLocations": [
													"2415:15:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1471,
												"src": "2415:15:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2415:15:11"
										},
										{
											"id": 1532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1531,
												"name": "whenNotPaused",
												"nameLocations": [
													"2441:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2441:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2441:13:11"
										}
									],
									"name": "burn",
									"nameLocation": "2351:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2364:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2356:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2378:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2370:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:30:11"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2461:0:11"
									},
									"scope": 1844,
									"src": "2342:370:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "3119:241:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1582,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "3138:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3152:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3144:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1583,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3144:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3144:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3138:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726577617264207a65726f2061646472657373",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3156:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2",
																"typeString": "literal_string \"Cannot reward zero address\""
															},
															"value": "Cannot reward zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2",
																"typeString": "literal_string \"Cannot reward zero address\""
															}
														],
														"id": 1581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3130:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3130:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "3130:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1592,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "3204:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3204:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1594,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "3220:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3204:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1596,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "3230:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3204:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "576f756c6420657863656564206d617820737570706c79",
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3242:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3",
																"typeString": "literal_string \"Would exceed max supply\""
															},
															"value": "Would exceed max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_edfdbdb070f8bfa102b3416a252027d98b6cad70d789fec6845fbd27764d5ae3",
																"typeString": "literal_string \"Would exceed max supply\""
															}
														],
														"id": 1591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3196:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3196:72:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "3196:72:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1602,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "3295:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1603,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "3299:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1601,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "3289:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "3289:17:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "3333:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1608,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "3337:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1609,
															"name": "reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "3345:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1606,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "3322:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3322:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1611,
												"nodeType": "EmitStatement",
												"src": "3317:35:11"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "2724:186:11",
										"text": " @dev Pay rewards to players\n @param to Address to receive rewards\n @param amount Amount of tokens to reward\n @param reason Reason for the reward"
									},
									"functionSelector": "da518829",
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1575,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1574,
												"name": "onlyGameManager",
												"nameLocations": [
													"3050:15:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1471,
												"src": "3050:15:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3050:15:11"
										},
										{
											"id": 1577,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1576,
												"name": "whenNotPaused",
												"nameLocations": [
													"3076:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "3076:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3076:13:11"
										},
										{
											"id": 1579,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1578,
												"name": "nonReentrant",
												"nameLocations": [
													"3100:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 653,
												"src": "3100:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3100:12:11"
										}
									],
									"name": "payReward",
									"nameLocation": "2925:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2953:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2945:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2975:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2967:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "3007:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2993:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2993:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2934:86:11"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3119:0:11"
									},
									"scope": 1844,
									"src": "2916:444:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "3606:317:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1624,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "3625:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3634:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3625:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206c6f636b207a65726f20746f6b656e73",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3637:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467",
																"typeString": "literal_string \"Cannot lock zero tokens\""
															},
															"value": "Cannot lock zero tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_53efa9a6dc00d5ec01c0969247e6d0a418420e85c8d199daf4cfb66545692467",
																"typeString": "literal_string \"Cannot lock zero tokens\""
															}
														],
														"id": 1623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3617:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3617:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "3617:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1632,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3692:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3696:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3692:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1631,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "3682:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3682:21:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1635,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "3707:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3682:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f206c6f636b",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3715:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371",
																"typeString": "literal_string \"Insufficient balance to lock\""
															},
															"value": "Insufficient balance to lock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371",
																"typeString": "literal_string \"Insufficient balance to lock\""
															}
														],
														"id": 1630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3674:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3674:72:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "3674:72:11"
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1640,
															"name": "_lockedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "3767:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1643,
														"indexExpression": {
															"expression": {
																"id": 1641,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3781:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3785:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3781:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3767:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1644,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "3796:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3767:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "3767:35:11"
											},
											{
												"expression": {
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1647,
															"name": "_lockTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "3813:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1650,
														"indexExpression": {
															"expression": {
																"id": 1648,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3828:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3832:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3828:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3813:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1651,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3842:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3848:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3842:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3813:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "3813:44:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1656,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3896:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3900:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3896:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1658,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "3908:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1655,
														"name": "TokensLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "3883:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "EmitStatement",
												"src": "3878:37:11"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "3372:120:11",
										"text": " @dev Lock tokens for staking or other game mechanics\n @param amount Amount of tokens to lock"
									},
									"functionSelector": "6e27d889",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1619,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1618,
												"name": "whenNotPaused",
												"nameLocations": [
													"3563:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "3563:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3563:13:11"
										},
										{
											"id": 1621,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1620,
												"name": "nonReentrant",
												"nameLocations": [
													"3587:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 653,
												"src": "3587:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3587:12:11"
										}
									],
									"name": "lockTokens",
									"nameLocation": "3507:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3526:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3518:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:16:11"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3606:0:11"
									},
									"scope": 1844,
									"src": "3498:425:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "4114:370:11",
										"statements": [
											{
												"assignments": [
													1671
												],
												"declarations": [
													{
														"constant": false,
														"id": 1671,
														"mutability": "mutable",
														"name": "lockedAmount",
														"nameLocation": "4133:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "4125:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1670,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4125:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1676,
												"initialValue": {
													"baseExpression": {
														"id": 1672,
														"name": "_lockedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "4148:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1675,
													"indexExpression": {
														"expression": {
															"id": 1673,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4162:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4166:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4162:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4148:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4125:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1678,
																"name": "lockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "4192:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4207:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4192:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73206c6f636b6564",
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4210:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a",
																"typeString": "literal_string \"No tokens locked\""
															},
															"value": "No tokens locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a",
																"typeString": "literal_string \"No tokens locked\""
															}
														],
														"id": 1677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4184:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4184:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "4184:45:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1685,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4262:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4268:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4262:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1687,
																		"name": "_lockTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "4281:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1690,
																	"indexExpression": {
																		"expression": {
																			"id": 1688,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4296:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4300:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4296:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4281:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1691,
																	"name": "LOCK_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "4310:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4281:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4262:61:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73207374696c6c206c6f636b6564",
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4338:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d",
																"typeString": "literal_string \"Tokens still locked\""
															},
															"value": "Tokens still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d",
																"typeString": "literal_string \"Tokens still locked\""
															}
														],
														"id": 1684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4240:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4240:130:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "4240:130:11"
											},
											{
												"expression": {
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1697,
															"name": "_lockedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "4391:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1700,
														"indexExpression": {
															"expression": {
																"id": 1698,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4405:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4409:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4405:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4391:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4419:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4391:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "4391:29:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1705,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4451:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4455:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4451:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1707,
															"name": "lockedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "4463:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1704,
														"name": "TokensUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "4436:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4436:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "EmitStatement",
												"src": "4431:45:11"
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "3935:77:11",
										"text": " @dev Unlock previously locked tokens after lock duration"
									},
									"functionSelector": "f968f493",
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1666,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1665,
												"name": "whenNotPaused",
												"nameLocations": [
													"4071:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "4071:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4071:13:11"
										},
										{
											"id": 1668,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1667,
												"name": "nonReentrant",
												"nameLocations": [
													"4095:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 653,
												"src": "4095:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4095:12:11"
										}
									],
									"name": "unlockTokens",
									"nameLocation": "4027:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:2:11"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4114:0:11"
									},
									"scope": 1844,
									"src": "4018:466:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "4793:48:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1719,
														"name": "_lockedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "4811:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1721,
													"indexExpression": {
														"id": 1720,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "4825:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4811:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1718,
												"id": 1722,
												"nodeType": "Return",
												"src": "4804:29:11"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "4525:152:11",
										"text": " @dev Get the amount of locked tokens for an address\n @param account Address to check\n @return Amount of locked tokens"
									},
									"functionSelector": "6b2d95d4",
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLockedTokens",
									"nameLocation": "4692:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4716:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4708:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4708:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4707:17:11"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4778:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4778:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4777:9:11"
									},
									"scope": 1844,
									"src": "4683:158:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "5111:49:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1732,
														"name": "_lockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "5129:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1734,
													"indexExpression": {
														"id": 1733,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "5144:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5129:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1735,
												"nodeType": "Return",
												"src": "5122:30:11"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "4853:141:11",
										"text": " @dev Get the timestamp when tokens were locked\n @param account Address to check\n @return Timestamp of lock"
									},
									"functionSelector": "3c26835b",
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLockTimestamp",
									"nameLocation": "5009:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5034:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "5026:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5025:17:11"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "5096:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5096:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5095:9:11"
									},
									"scope": 1844,
									"src": "5000:160:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "5424:69:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1746,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "5452:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1745,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "5442:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5442:18:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1748,
															"name": "_lockedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "5463:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1750,
														"indexExpression": {
															"id": 1749,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "5477:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5463:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5442:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1744,
												"id": 1752,
												"nodeType": "Return",
												"src": "5435:50:11"
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "5172:132:11",
										"text": " @dev Get available (unlocked) balance\n @param account Address to check\n @return Available balance"
									},
									"functionSelector": "6c24a76f",
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAvailableBalance",
									"nameLocation": "5319:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5347:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "5339:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5339:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5338:17:11"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "5409:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5408:9:11"
									},
									"scope": 1844,
									"src": "5310:183:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										813
									],
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "5723:213:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1768,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5766:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5770:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5766:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1767,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "5756:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5756:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1771,
																		"name": "_lockedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1430,
																		"src": "5780:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1774,
																	"indexExpression": {
																		"expression": {
																			"id": 1772,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5794:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5798:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5794:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5780:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5756:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1776,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1758,
																"src": "5809:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5756:59:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5830:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a",
																"typeString": "literal_string \"Transfer amount exceeds available balance\""
															},
															"value": "Transfer amount exceeds available balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a",
																"typeString": "literal_string \"Transfer amount exceeds available balance\""
															}
														],
														"id": 1766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5734:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5734:150:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "5734:150:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1783,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "5917:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1784,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "5921:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1781,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5902:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_GameToken_$1844_$",
																"typeString": "type(contract super GameToken)"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5908:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 813,
														"src": "5902:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1765,
												"id": 1786,
												"nodeType": "Return",
												"src": "5895:33:11"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1762,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1761,
												"name": "whenNotPaused",
												"nameLocations": [
													"5678:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "5678:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5678:13:11"
										}
									],
									"name": "transfer",
									"nameLocation": "5577:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1760,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5659:8:11"
									},
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5594:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "5586:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5586:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5606:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "5598:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5598:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5585:28:11"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "5711:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5711:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5710:6:11"
									},
									"scope": 1844,
									"src": "5568:368:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										886
									],
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "6155:211:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1804,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "6198:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1803,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "6188:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6188:15:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1806,
																		"name": "_lockedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1430,
																		"src": "6206:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1808,
																	"indexExpression": {
																		"id": 1807,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "6220:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6206:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6188:37:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1810,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "6229:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6188:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6250:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a",
																"typeString": "literal_string \"Transfer amount exceeds available balance\""
															},
															"value": "Transfer amount exceeds available balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4dacc0c389f83f5388465a707ea40da634689f0810693f1c7ce239bfb4437b7a",
																"typeString": "literal_string \"Transfer amount exceeds available balance\""
															}
														],
														"id": 1802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6166:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6166:138:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "6166:138:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1817,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "6341:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1818,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "6347:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1819,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "6351:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1815,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "6322:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_GameToken_$1844_$",
																"typeString": "type(contract super GameToken)"
															}
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6328:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 886,
														"src": "6322:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6322:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1801,
												"id": 1821,
												"nodeType": "Return",
												"src": "6315:43:11"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1798,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1797,
												"name": "whenNotPaused",
												"nameLocations": [
													"6110:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "6110:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6110:13:11"
										}
									],
									"name": "transferFrom",
									"nameLocation": "5957:12:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1796,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6091:8:11"
									},
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5988:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "5980:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5980:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6011:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "6003:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6003:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6032:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "6024:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:76:11"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "6143:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6143:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6142:6:11"
									},
									"scope": 1844,
									"src": "5948:418:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "6463:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1829,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "6474:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6474:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "6474:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1826,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "6443:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1827,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1825,
												"name": "onlyRole",
												"nameLocations": [
													"6434:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6434:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6434:28:11"
										}
									],
									"name": "pause",
									"nameLocation": "6417:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6422:2:11"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6463:0:11"
									},
									"scope": 1844,
									"src": "6408:82:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "6559:29:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1839,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "6570:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6570:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "6570:10:11"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1836,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "6539:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1837,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1835,
												"name": "onlyRole",
												"nameLocations": [
													"6530:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6530:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6530:28:11"
										}
									],
									"name": "unpause",
									"nameLocation": "6511:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6518:2:11"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6559:0:11"
									},
									"scope": 1844,
									"src": "6502:86:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1845,
							"src": "416:6175:11",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								317,
								326,
								335,
								526,
								531,
								1215,
								1224,
								1406,
								1414,
								1420,
								1426
							]
						}
					],
					"src": "33:6558:11"
				},
				"id": 11
			}
		}
	}
}